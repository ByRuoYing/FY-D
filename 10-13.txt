--------------------------------------------------------------------------------------- functions 供lua调用的用于实现特定功能的函数
local luaversion = "v1.76"
gui.show_message("若影Lua脚本加载成功")
log.info("欢迎使用若影LUA脚本----官网:www.byruoying.com")

local verchka1 = 0

local autoresply = 0

----local SY = gui.get_tab("解锁恢复"):add_tab("测试")
----local LuaJB = gui.add_tab("若影Lua脚本")
SQXX = gui.get_tab("解锁恢复"):add_tab("   刷钱选项---lua")  ----刷钱功能
DJXX = gui.get_tab("解锁恢复"):add_tab("   等级选项---lua")  ----刷钱功能
JSXX = gui.get_tab("解锁恢复"):add_tab("   解锁选项---lua")  ----解锁功能
QJXX = gui.get_tab("解锁恢复"):add_tab("   抢劫选项---lua")  ----解锁功能
YLSJ = gui.get_tab("解锁恢复"):add_tab("   娱乐视觉---lua")  ----娱乐视觉
QTXX = gui.get_tab("解锁恢复"):add_tab("   其它选项---lua")  ----娱乐功能

gui.get_tab("解锁恢复"):add_text("Lua 脚本功能提示：") 
gui.get_tab("解锁恢复"):add_text("注:本功能为Lua脚本,如若发现没有显示本功能,请重新注入脚本!") 
gui.get_tab("解锁恢复"):add_text("注:要使用玩家功能,请在玩家列表选中一个玩家并翻到玩家最底部") 
gui.get_tab("解锁恢复"):add_text("注:刷钱请勿使用直接刷钱的功能!请使用推荐的方式刷钱!") 
gui.get_tab("解锁恢复"):add_text("注:请不要在设置里面的Lua脚本 点击 重新加载   否则会无法加载本若影Lua脚本!") 




gui.get_tab("解锁恢复"):add_imgui("1111111111") 
gui.show_message("1")
gui.show_warning("2")
gui.show_error("3")


ImGui::Checkbox("提示环境", 111);
if (ImGui::IsItemHovered())
		ImGui::SetTooltip("如果你接近一个环境动画,它将会被提示");


---------------------------------------------------------------------------------------
    function calcDistance(pos, tarpos) -- 计算两个三维坐标之间的距离
        local dx = pos.x - tarpos.x
        local dy = pos.y - tarpos.y
        local dz = pos.z - tarpos.z
        local distance = math.sqrt(dx*dx + dy*dy + dz*dz)
        return distance    end

    function get_closest_veh(entity) -- 获取最近的载具
        local coords = ENTITY.GET_ENTITY_COORDS(entity, true)
        local vehicles = entities.get_all_vehicles_as_handles()
        local closestdist = 1000000
        local closestveh = 0
        for k, veh in pairs(vehicles) do
            if veh ~= PED.GET_VEHICLE_PED_IS_IN(PLAYER.PLAYER_PED_ID(), false) and ENTITY.GET_ENTITY_HEALTH(veh) ~= 0 then
                local vehcoord = ENTITY.GET_ENTITY_COORDS(veh, true)
                local dist = MISC.GET_DISTANCE_BETWEEN_COORDS(coords['x'], coords['y'], coords['z'], vehcoord['x'], vehcoord['y'], vehcoord['z'], true)
                if dist < closestdist then
                    closestdist = dist
                    closestveh = veh
                end
            end
        end
        return closestveh    end

    function upgrade_vehicle(vehicle)
        for i = 0, 49 do
            local num = VEHICLE.GET_NUM_VEHICLE_MODS(vehicle, i)
            VEHICLE.SET_VEHICLE_MOD(vehicle, i, num - 1, true)
        end    end

    function run_script(name) --启动脚本线程
        script.run_in_fiber(function (runscript)
            SCRIPT.REQUEST_SCRIPT(name)  
            repeat runscript:yield() until SCRIPT.HAS_SCRIPT_LOADED(name)
            SYSTEM.START_NEW_SCRIPT(name, 5000)
            SCRIPT.SET_SCRIPT_AS_NO_LONGER_NEEDED(name)
        end)    end

    function screen_draw_text(text, x, y, p0 , size) --在屏幕上绘制文字
	    HUD.BEGIN_TEXT_COMMAND_DISPLAY_TEXT("STRING") --The following were found in the decompiled script files: STRING, TWOSTRINGS, NUMBER, PERCENTAGE, FO_TWO_NUM, ESMINDOLLA, ESDOLLA, MTPHPER_XPNO, AHD_DIST, CMOD_STAT_0, CMOD_STAT_1, CMOD_STAT_2, CMOD_STAT_3, DFLT_MNU_OPT, F3A_TRAFDEST, ES_HELP_SOC3
	    HUD.SET_TEXT_FONT(0)
	    HUD.SET_TEXT_SCALE(p0, size) --Size range : 0F to 1.0F --p0 is unknown and doesn't seem to have an effect, yet in the game scripts it changes to 1.0F sometimes.
	    HUD.SET_TEXT_DROP_SHADOW()
	    HUD.SET_TEXT_WRAP(0.0, 1.0) --限定行宽，超出自动换行 start - left boundry on screen position (0.0 - 1.0)  end - right boundry on screen position (0.0 - 1.0)
	    HUD.SET_TEXT_DROPSHADOW(1, 0, 0, 0, 0) --distance - shadow distance in pixels, both horizontal and vertical    -- r, g, b, a - color
	    HUD.SET_TEXT_OUTLINE()
	    HUD.SET_TEXT_EDGE(1, 0, 0, 0, 0)
	    HUD.ADD_TEXT_COMPONENT_SUBSTRING_PLAYER_NAME(text)
	    HUD.END_TEXT_COMMAND_DISPLAY_TEXT(x, y)         end--占坐标轴的比例

    function CreatePed(index, Hash, Pos, Heading)
        script.run_in_fiber(function (ctped)
        STREAMING.REQUEST_MODEL(Hash)
        while not STREAMING.HAS_MODEL_LOADED(Hash) do ctped:yield() end
        local Spawnedp = PED.CREATE_PED(index, Hash, Pos.x, Pos.y, Pos.z, Heading, true, true)
        STREAMING.SET_MODEL_AS_NO_LONGER_NEEDED(Hash)
        return Spawnedp
        end)    end

    function CreateObject(Hash, Pos, static)
        script.run_in_fiber(function (ctobjC)
            STREAMING.REQUEST_MODEL(Hash)
            while not STREAMING.HAS_MODEL_LOADED(Hash) do ctobjC:yield() end
            local SpawnedObjs = create_object(Hash, Pos)
            STREAMING.SET_MODEL_AS_NO_LONGER_NEEDED(Hash)
            if static then
                ENTITY.FREEZE_ENTITY_POSITION(SpawnedObjs, true)
            end
            return SpawnedObjs
        end)    end

    function create_object(hash, pos)
        script.run_in_fiber(function (ctobjS)
            STREAMING.REQUEST_MODEL(hash)
            while not STREAMING.HAS_MODEL_LOADED(hash) do ctobjS:yield() end
            local obj = OBJECT.CREATE_OBJECT(hash, pos.x, pos.y, pos.z, true, false, false)
            return obj
        end)    end

    function request_model(hash)
        script.run_in_fiber(function (rqmd)
            STREAMING.REQUEST_MODEL(hash)
            while not STREAMING.HAS_MODEL_LOADED(hash) do
                rqmd:yield()
            end
            return STREAMING.HAS_MODEL_LOADED(hash)
        end)    end

    function Create_Network_Ped(pedType, modelHash, x, y, z, heading)
        request_model(modelHash)
        local ped = PED.CREATE_PED(pedType, modelHash, x, y, z, heading, true, true)

        ENTITY.SET_ENTITY_LOAD_COLLISION_FLAG(ped, true)
        ENTITY.SET_ENTITY_AS_MISSION_ENTITY(ped, true, false)
        ENTITY.SET_ENTITY_SHOULD_FREEZE_WAITING_ON_COLLISION(ped, true)

        NETWORK.NETWORK_REGISTER_ENTITY_AS_NETWORKED(ped)
        local net_id = NETWORK.PED_TO_NET(ped)
        NETWORK.SET_NETWORK_ID_EXISTS_ON_ALL_MACHINES(net_id, true)
        NETWORK.SET_NETWORK_ID_CAN_MIGRATE(net_id, true)
        for _, pid in pairs(players.list()) do
            NETWORK.SET_NETWORK_ID_ALWAYS_EXISTS_FOR_PLAYER(net_id, pid, true)
        end
        STREAMING.SET_MODEL_AS_NO_LONGER_NEEDED(modelHash)
        return ped    end

    function CreateVehicle(Hash, Pos, Heading, Invincible)
        script.run_in_fiber(function (ctveh)
            STREAMING.REQUEST_MODEL(Hash)
            while not STREAMING.HAS_MODEL_LOADED(Hash) do ctveh:yield() end
            local SpawnedVehicle = VEHICLE.CREATE_VEHICLE(Hash, Pos.x,Pos.y,Pos.z, Heading , true, true, true)
            STREAMING.SET_MODEL_AS_NO_LONGER_NEEDED(Hash)
            if Invincible then
                ENTITY.SET_ENTITY_INVINCIBLE(SpawnedVehicle, true)
            end
            return SpawnedVehicle
        end)    end

    function MCprintspl()
        local playerid = stats.get_int("MPPLY_LAST_MP_CHAR") --读取角色ID  --用于判断当前是角色1还是角色2
        local mpx = "MP0_"--用于判断当前是角色1还是角色2
        if playerid == 1 then --用于判断当前是角色1还是角色2
            mpx = "MP1_" --用于判断当前是角色1还是角色2
        end
        log.info("假钞 原材料库存: "..stats.get_int(mpx.."MATTOTALFORFACTORY0").."%")
        log.info("可卡因 原材料库存: "..stats.get_int(mpx.."MATTOTALFORFACTORY1").."%")
        log.info("冰毒 原材料库存: "..stats.get_int(mpx.."MATTOTALFORFACTORY2").."%")
        log.info("大麻 原材料库存: "..stats.get_int(mpx.."MATTOTALFORFACTORY3").."%")
        log.info("假证 原材料库存: "..stats.get_int(mpx.."MATTOTALFORFACTORY4").."%")
        log.info("地堡 原材料库存: "..stats.get_int(mpx.."MATTOTALFORFACTORY5").."%")
        log.info("致幻剂 原材料库存: "..stats.get_int(mpx.."MATTOTALFORFACTORY6").."%")    end

--------------------------------------------------------------------------------------- 
MPX = PI
PI = stats.get_int("MPPLY_LAST_MP_CHAR")
if PI == 0 then
	MPX = "MP0_"
else
	MPX = "MP1_"
end




		--[[No-Clip Controls

		传送功能
    SQXX:add_button("传到虎Jing内", function()
        -- TELEPORT(1561.2369, 385.8771, -49.689915)
        -- TELEPORT(-619.987, 282.960, 81.639)
        -- if STAT_GET_INT("IH_SUB_OWNED") == 0 then
        -- else

            -- STAT_SET_INT("H4_PROGRESS", 131055)
        -- end
            TELEPORT(507.766602, -605.932678, 23.451139)
            SET_HEADING(175)        end)	

		--]]






--刷钱选项------------------------------------------------------------------------------------- 

    ---15M-xxK 刷分方式-------------------------------------------------------------------------------
        ----------------------------------------------------------------------------------15M-xxK刷钱所需代码
            local TransactionManager <const> = {};
            TransactionManager.__index = TransactionManager

            function TransactionManager.new()
                local instance = setmetatable({}, TransactionManager);
                return instance;    end
            ---@return Table TransactionList
            function TransactionManager:GetTransactionList()
                return self.Transactions;    end
            ---@return Int32 character
            function TransactionManager:GetCharacter()
                local _, char = STATS.STAT_GET_INT(joaat("MPPLY_LAST_MP_CHAR"), 0, 1)
                return tonumber(char);    end
            ---@param Int32 hash ---@param Int32 category---@return Int32 price
            function TransactionManager:GetPrice(hash, category)
                return tonumber(NETSHOPPING.NET_GAMESERVER_GET_PRICE(hash, category, true))    end
            ---@param Int32 hash ---@param? Int32 amount 
            function TransactionManager:TriggerTransaction(hash, amount)
                globals.set_int(4536533 + 1, 2147483646)
                globals.set_int(4536533 + 7, 2147483647)
                globals.set_int(4536533 + 6, 0)
                globals.set_int(4536533 + 5, 0)
                globals.set_int(4536533 + 3, hash)
                globals.set_int(4536533 + 2, amount or self:GetPrice(hash, 0x57DE404E))
                globals.set_int(4536533, 1)    end
               
        function TransactionManager:Init()

        SQXX:add_button("15M", function()
            self:TriggerTransaction(0x176D9D54)        end)
        SQXX:add_sameline()   ------同行
        SQXX:add_button("15M", function()
            self:TriggerTransaction(0xA174F633)        end)
        SQXX:add_sameline()   ------同行
        SQXX:add_button("7M", function()
            self:TriggerTransaction(0xED97AFC1)        end)
        SQXX:add_sameline()   ------同行
        SQXX:add_button("3.6M", function()
            self:TriggerTransaction(0xB703ED29)        end)
        SQXX:add_sameline()   ------同行
        SQXX:add_button("2.5M", function()
            self:TriggerTransaction(0x46521174)        end)
        SQXX:add_sameline()   ------同行
        SQXX:add_button("2.5M", function()
            self:TriggerTransaction(0xDBF39508)        end)
        SQXX:add_sameline()   ------同行
        SQXX:add_button("2M", function()
            self:TriggerTransaction(0x8107BB89)        end)
        SQXX:add_sameline()   ------同行
        SQXX:add_button("2M", function()
            self:TriggerTransaction(0x921FCF3C)        end)
        SQXX:add_sameline()   ------同行
        SQXX:add_button("2M", function()
            self:TriggerTransaction(0x4B6A869C)        end)
        SQXX:add_sameline()   ------同行
        SQXX:add_button("1M", function()
            self:TriggerTransaction(0xE9BBC247)            end)
        SQXX:add_sameline()   ------同行
        SQXX:add_button("1M", function()
            self:TriggerTransaction(0x314FB8B0)            end)
        SQXX:add_sameline()   ------同行
        SQXX:add_button("1M", function()
            self:TriggerTransaction(0xBFCBE6B6)            end)

        SQXX:add_button("680K", function()
            self:TriggerTransaction(0xACA75AAE)            end)
        SQXX:add_sameline()   ------同行
        SQXX:add_button("500K", function()
            self:TriggerTransaction(0x05F2B7EE)            end)
        SQXX:add_sameline()   ------同行
        SQXX:add_button("310K", function()
            self:TriggerTransaction(0xEE884170)            end)
        SQXX:add_sameline()   ------同行
        SQXX:add_button("200K", function()
            self:TriggerTransaction(0xBA16F44B)            end)
        SQXX:add_sameline()   ------同行
        SQXX:add_button("200K", function()
            self:TriggerTransaction(0x9145F938)            end)
        SQXX:add_sameline()   ------同行
        SQXX:add_button("200K", function()
            self:TriggerTransaction(0xCDCF2380)            end)
        SQXX:add_sameline()   ------同行
        SQXX:add_button("190K", function()
            self:TriggerTransaction(0xFD389995)            end)        
        SQXX:add_sameline()   ------同行
        SQXX:add_button("把钱包里的钱转到银行", function()
            NETSHOPPING.NET_GAMESERVER_TRANSFER_WALLET_TO_BANK(self:GetCharacter(), MONEY.NETWORK_GET_VC_WALLET_BALANCE(self:GetCharacter()))            end)
        end
        TransactionManager.new():Init()

    SQXX:add_text("   ---提示:以上方式不推荐使用!风险较大!请使用其它方式刷钱!!!    可使用  CEO 赌场 夜总会保险柜 修改抢劫任务分红方式刷钱!"  )

    --CEO刷钱---------------------------------------------------------------------------------- 
        SQXX:add_separator()  ------分割线
        CEO2=277873
        CEO3=277874
        CEO1=278108
        local cs = "appsecuroserv"
        local ci = "gb_contraband_sell"
        local cb = "gb_contraband_buy"
        local am = "am_mp_warehouse"
        local am2= "am_mp_peds"
        SQXX:add_text("   CEO:")

        local checkbox = SQXX:add_checkbox("启用 CEO")--只是一个开关，代码往后面找
        SQXX:add_sameline()   ------同行
        SQXX:add_button("显示电脑", function()
            local playerIndex = globals.get_int(1574918) --疑似与MPPLY_LAST_MP_CHAR相等
            if globals.get_int(1895156+playerIndex*609+10+429+1) == 0 then
                run_script("apparcadebusinesshub")
            else
                if globals.get_int(1895156+playerIndex*609+10+429+1) == 1 then
                    run_script("apparcadebusinesshub")
                else
                        gui.show_message("别忘了注册成为 CEO/Leader")
                        run_script("apparcadebusinesshub")
                end
            end        end)
        SQXX:add_sameline()   ------同行
        SQXX:add_text("注：本方式一次600万 请勿短时间内多次使用!.")
        SQXX:add_text("对于购买任务:点击<显示电脑>,选择CEO---选择你的仓库,花2000美元开始1个箱子任务---等待1秒,现在你的仓库已经满了.")
        SQXX:add_text("如何获得资金:点击<显示电脑>,选择CEO---点击出售600万的货物,等待,点击多少次CEO,就可以赚钱.")


    --赌场刷钱----------------------------------------------------------------------------------
        SQXX:add_separator()  ------分割线
        SQXX:add_text("   赌场:")

        SQXX:add_text("可以买到心片：")
        SQXX:add_sameline()   ------同行
        SQXX:add_button("心片设置为 1000000000", function()
            script.run_in_fiber(function (script)
                STATS.STAT_SET_INT(joaat("MPPLY_CASINO_CHIPS_PUR_GD"), -1000000000, true)
            end)        end)
        SQXX:add_sameline()   ------同行
        SQXX:add_button("心片复位为 0", function()
            script.run_in_fiber(function (script)
                STATS.STAT_SET_INT(joaat("MPPLY_CASINO_CHIPS_PUR_GD"), 0, true)
            end)        end)


    --夜总会刷钱----------------------------------------------------------------------------------
        SQXX:add_separator()  ------分割线
        SQXX:add_text("   夜总会:")

        SQXX:add_button("夜总会保险箱30万循环10次", function()
            script.run_in_fiber(function (ncsafeloop)
                local playerid = stats.get_int("MPPLY_LAST_MP_CHAR") --读取角色ID
                local mpx = "MP0_"
                if playerid == 1 then 
                    mpx = "MP1_" 
                end
                a2 =0
                while a2 < 10 do --循环次数
                    a2 = a2 + 1
                    gui.show_message("已执行次数", a2)
                    globals.set_int(262145 + 24227,300000) -- 	if (func_22904(MP_STAT_CLUB_SAFE_CASH_VALUE, -1) != Global_262145.f_24227)
                    globals.set_int(262145 + 24223,300000) -- 	func_6(iParam0, iParam1, joaat("NIGHTCLUBINCOMEUPTOPOP100"), &(Global_262145.f_24223), true);
                    STATS.STAT_SET_INT(joaat(mpx.."CLUB_POPULARITY"), 10000, true)
                    STATS.STAT_SET_INT(joaat(mpx.."CLUB_PAY_TIME_LEFT"), -1, true)
                    STATS.STAT_SET_INT(joaat(mpx.."CLUB_POPULARITY"), 100000, true)
                    gui.show_message("警告", "此方法仅用于偶尔小额恢复")
                    ncsafeloop:sleep(10000) --执行间隔，单位ms
                end
            end)        end)    
        SQXX:add_sameline()   ------同行
        SQXX:add_button("夜总会保险箱(先进入夜总会)", function()
            PED.SET_PED_COORDS_KEEP_VEHICLE(PLAYER.PLAYER_PED_ID(), -1615.6832, -3015.7546, -75.204994)        end)
        SQXX:add_sameline()   ------同行
        SQXX:add_text("步骤:前往夜总会保险柜 然后点击即可!!")

        SQXX:add_button("传送到夜总会(只在邀请时段工作)", function()
            tpnc()        end)
        SQXX:add_sameline()   ------同行
        SQXX:add_button("到夜总会安全(TP先到NC)", function()
            PED.SET_PED_COORDS_KEEP_VEHICLE(PLAYER.PLAYER_PED_ID(), -1615.6832, -3015.7546, -75.204994)        end)
        SQXX:add_sameline()   ------同行
        SQXX:add_button("夜总会满人气", function()
            local playerid = stats.get_int("MPPLY_LAST_MP_CHAR") --读取角色ID
            local mpx = "MP0_"
            if playerid == 1 then 
                mpx = "MP1_"             end
            STATS.STAT_SET_INT(joaat(mpx.."CLUB_POPULARITY"), 10000, true)        end)   


--等级选项-------------------------------------------------------------------------------------
	RPtoRank = {
		0,
		800,
		2100,
		3800,
		6100,
		9500,
		12500,
		16000,
		19800,
		24000,
		28500,
		33400,
		38700,
		44200,
		50200,
		56400,
		63000,
		69900,
		77100,
		84700,
		92500,
		100700,
		109200,
		118000,
		127100,
		136500,
		146200,
		156200,
		166500,
		177100,
		188000,
		199200,
		210700,
		222400,
		234500,
		246800,
		259400,
		272300,
		285500,
		299000,
		312700,
		326800,
		341000,
		355600,
		370500,
		385600,
		401000,
		416600,
		432600,
		448800,
		465200,
		482000,
		499000,
		516300,
		533800,
		551600,
		569600,
		588000,
		606500,
		625400,
		644500,
		663800,
		683400,
		703300,
		723400,
		743800,
		764500,
		785400,
		806500,
		827900,
		849600,
		871500,
		893600,
		916000,
		938700,
		961600,
		984700,
		1008100,
		1031800,
		1055700,
		1079800,
		1104200,
		1128800,
		1153700,
		1178800,
		1204200,
		1229800,
		1255600,
		1281700,
		1308100,
		1334600,
		1361400,
		1388500,
		1415800,
		1443300,
		1471100,
		1499100,
		1527300,
		1555800,
		1584350,
		1612950,
		1641600,
		1670300,
		1699050,
		1727850,
		1756700,
		1785600,
		1814550,
		1843550,
		1872600,
		1901700,
		1930850,
		1960050,
		1989300,
		2018600,
		2047950,
		2077350,
		2106800,
		2136300,
		2165850,
		2195450,
		2225100,
		2254800,
		2284550,
		2314350,
		2344200,
		2374100,
		2404050,
		2434050,
		2464100,
		2494200,
		2524350,
		2554550,
		2584800,
		2615100,
		2645450,
		2675850,
		2706300,
		2736800,
		2767350,
		2797950,
		2828600,
		2859300,
		2890050,
		2920850,
		2951700,
		2982600,
		3013550,
		3044550,
		3075600,
		3106700,
		3137850,
		3169050,
		3200300,
		3231600,
		3262950,
		3294350,
		3325800,
		3357300,
		3388850,
		3420450,
		3452100,
		3483800,
		3515550,
		3547350,
		3579200,
		3611100,
		3643050,
		3675050,
		3707100,
		3739200,
		3771350,
		3803550,
		3835800,
		3868100,
		3900450,
		3932850,
		3965300,
		3997800,
		4030350,
		4062950,
		4095600,
		4128300,
		4161050,
		4193850,
		4226700,
		4259600,
		4292550,
		4325550,
		4358600,
		4391700,
		4424850,
		4458050,
		4491300,
		4524600,
		4557950,
		4591350,
		4624800,
		4658300,
		4691850,
		4725450,
		4759100,
		4792800,
		4826550,
		4860350,
		4894200,
		4928100,
		4962050,
		4996050,
		5030100,
		5064200,
		5098350,
		5132550,
		5166800,
		5201100,
		5235450,
		5269850,
		5304300,
		5338800,
		5373350,
		5407950,
		5442600,
		5477300,
		5512050,
		5546850,
		5581700,
		5616600,
		5651550,
		5686550,
		5721600,
		5756700,
		5791850,
		5827050,
		5862300,
		5897600,
		5932950,
		5968350,
		6003800,
		6039300,
		6074850,
		6110450,
		6146100,
		6181800,
		6217550,
		6253350,
		6289200,
		6325100,
		6361050,
		6397050,
		6433100,
		6469200,
		6505350,
		6541550,
		6577800,
		6614100,
		6650450,
		6686850,
		6723300,
		6759800,
		6796350,
		6832950,
		6869600,
		6906300,
		6943050,
		6979850,
		7016700,
		7053600,
		7090550,
		7127550,
		7164600,
		7201700,
		7238850,
		7276050,
		7313300,
		7350600,
		7387950,
		7425350,
		7462800,
		7500300,
		7537850,
		7575450,
		7613100,
		7650800,
		7688550,
		7726350,
		7764200,
		7802100,
		7840050,
		7878050,
		7916100,
		7954200,
		7992350,
		8030550,
		8068800,
		8107100,
		8145450,
		8183850,
		8222300,
		8260800,
		8299350,
		8337950,
		8376600,
		8415300,
		8454050,
		8492850,
		8531700,
		8570600,
		8609550,
		8648550,
		8687600,
		8726700,
		8765850,
		8805050,
		8844300,
		8883600,
		8922950,
		8962350,
		9001800,
		9041300,
		9080850,
		9120450,
		9160100,
		9199800,
		9239550,
		9279350,
		9319200,
		9359100,
		9399050,
		9439050,
		9479100,
		9519200,
		9559350,
		9599550,
		9639800,
		9680100,
		9720450,
		9760850,
		9801300,
		9841800,
		9882350,
		9922950,
		9963600,
		10004300,
		10045050,
		10085850,
		10126700,
		10167600,
		10208550,
		10249550,
		10290600,
		10331700,
		10372850,
		10414050,
		10455300,
		10496600,
		10537950,
		10579350,
		10620800,
		10662300,
		10703850,
		10745450,
		10787100,
		10828800,
		10870550,
		10912350,
		10954200,
		10996100,
		11038050,
		11080050,
		11122100,
		11164200,
		11206350,
		11248550,
		11290800,
		11333100,
		11375450,
		11417850,
		11460300,
		11502800,
		11545350,
		11587950,
		11630600,
		11673300,
		11716050,
		11758850,
		11801700,
		11844600,
		11887550,
		11930550,
		11973600,
		12016700,
		12059850,
		12103050,
		12146300,
		12189600,
		12232950,
		12276350,
		12319800,
		12363300,
		12406850,
		12450450,
		12494100,
		12537800,
		12581550,
		12625350,
		12669200,
		12713100,
		12757050,
		12801050,
		12845100,
		12889200,
		12933350,
		12977550,
		13021800,
		13066100,
		13110450,
		13154850,
		13199300,
		13243800,
		13288350,
		13332950,
		13377600,
		13422300,
		13467050,
		13511850,
		13556700,
		13601600,
		13646550,
		13691550,
		13736600,
		13781700,
		13826850,
		13872050,
		13917300,
		13962600,
		14007950,
		14053350,
		14098800,
		14144300,
		14189850,
		14235450,
		14281100,
		14326800,
		14372550,
		14418350,
		14464200,
		14510100,
		14556050,
		14602050,
		14648100,
		14694200,
		14740350,
		14786550,
		14832800,
		14879100,
		14925450,
		14971850,
		15018300,
		15064800,
		15111350,
		15157950,
		15204600,
		15251300,
		15298050,
		15344850,
		15391700,
		15438600,
		15485550,
		15532550,
		15579600,
		15626700,
		15673850,
		15721050,
		15768300,
		15815600,
		15862950,
		15910350,
		15957800,
		16005300,
		16052850,
		16100450,
		16148100,
		16195800,
		16243550,
		16291350,
		16339200,
		16387100,
		16435050,
		16483050,
		16531100,
		16579200,
		16627350,
		16675550,
		16723800,
		16772100,
		16820450,
		16868850,
		16917300,
		16965800,
		17014350,
		17062950,
		17111600,
		17160300,
		17209050,
		17257850,
		17306700,
		17355600,
		17404550,
		17453550,
		17502600,
		17551700,
		17600850,
		17650050,
		17699300,
		17748600,
		17797950,
		17847350,
		17896800,
		17946300,
		17995850,
		18045450,
		18095100,
		18144800,
		18194550,
		18244350,
		18294200,
		18344100,
		18394050,
		18444050,
		18494100,
		18544200,
		18594350,
		18644550,
		18694800,
		18745100,
		18795450,
		18845850,
		18896300,
		18946800,
		18997350,
		19047950,
		19098600,
		19149300,
		19200050,
		19250850,
		19301700,
		19352600,
		19403550,
		19454550,
		19505600,
		19556700,
		19607850,
		19659050,
		19710300,
		19761600,
		19812950,
		19864350,
		19915800,
		19967300,
		20018850,
		20070450,
		20122100,
		20173800,
		20225550,
		20277350,
		20329200,
		20381100,
		20433050,
		20485050,
		20537100,
		20589200,
		20641350,
		20693550,
		20745800,
		20798100,
		20850450,
		20902850,
		20955300,
		21007800,
		21060350,
		21112950,
		21165600,
		21218300,
		21271050,
		21323850,
		21376700,
		21429600,
		21482550,
		21535550,
		21588600,
		21641700,
		21694850,
		21748050,
		21801300,
		21854600,
		21907950,
		21961350,
		22014800,
		22068300,
		22121850,
		22175450,
		22229100,
		22282800,
		22336550,
		22390350,
		22444200,
		22498100,
		22552050,
		22606050,
		22660100,
		22714200,
		22768350,
		22822550,
		22876800,
		22931100,
		22985450,
		23039850,
		23094300,
		23148800,
		23203350,
		23257950,
		23312600,
		23367300,
		23422050,
		23476850,
		23531700,
		23586600,
		23641550,
		23696550,
		23751600,
		23806700,
		23861850,
		23917050,
		23972300,
		24027600,
		24082950,
		24138350,
		24193800,
		24249300,
		24304850,
		24360450,
		24416100,
		24471800,
		24527550,
		24583350,
		24639200,
		24695100,
		24751050,
		24807050,
		24863100,
		24919200,
		24975350,
		25031550,
		25087800,
		25144100,
		25200450,
		25256850,
		25313300,
		25369800,
		25426350,
		25482950,
		25539600,
		25596300,
		25653050,
		25709850,
		25766700,
		25823600,
		25880550,
		25937550,
		25994600,
		26051700,
		26108850,
		26166050,
		26223300,
		26280600,
		26337950,
		26395350,
		26452800,
		26510300,
		26567850,
		26625450,
		26683100,
		26740800,
		26798550,
		26856350,
		26914200,
		26972100,
		27030050,
		27088050,
		27146100,
		27204200,
		27262350,
		27320550,
		27378800,
		27437100,
		27495450,
		27553850,
		27612300,
		27670800,
		27729350,
		27787950,
		27846600,
		27905300,
		27964050,
		28022850,
		28081700,
		28140600,
		28199550,
		28258550,
		28317600,
		28376700,
		28435850,
		28495050,
		28554300,
		28613600,
		28672950,
		28732350,
		28791800,
		28851300,
		28910850,
		28970450,
		29030100,
		29089800,
		29149550,
		29209350,
		29269200,
		29329100,
		29389050,
		29449050,
		29509100,
		29569200,
		29629350,
		29689550,
		29749800,
		29810100,
		29870450,
		29930850,
		29991300,
		30051800,
		30112350,
		30172950,
		30233600,
		30294300,
		30355050,
		30415850,
		30476700,
		30537600,
		30598550,
		30659550,
		30720600,
		30781700,
		30842850,
		30904050,
		30965300,
		31026600,
		31087950,
		31149350,
		31210800,
		31272300,
		31333850,
		31395450,
		31457100,
		31518800,
		31580550,
		31642350,
		31704200,
		31766100,
		31828050,
		31890050,
		31952100,
		32014200,
		32076350,
		32138550,
		32200800,
		32263100,
		32325450,
		32387850,
		32450300,
		32512800,
		32575350,
		32637950,
		32700600,
		32763300,
		32826050,
		32888850,
		32951700,
		33014600,
		33077550,
		33140550,
		33203600,
		33266700,
		33329850,
		33393050,
		33456300,
		33519600,
		33582950,
		33646350,
		33709800,
		33773300,
		33836850,
		33900450,
		33964100,
		34027800,
		34091550,
		34155350,
		34219200,
		34283100,
		34347050,
		34411050,
		34475100,
		34539200,
		34603350,
		34667550,
		34731800,
		34796100,
		34860450,
		34924850,
		34989300,
		35053800,
		35118350,
		35182950,
		35247600,
		35312300,
		35377050,
		35441850,
		35506700,
		35571600,
		35636550,
		35701550,
		35766600,
		35831700,
		35896850,
		35962050,
		36027300,
		36092600,
		36157950,
		36223350,
		36288800,
		36354300,
		36419850,
		36485450,
		36551100,
		36616800,
		36682550,
		36748350,
		36814200,
		36880100,
		36946050,
		37012050,
		37078100,
		37144200,
		37210350,
		37276550,
		37342800,
		37409100,
		37475450,
		37541850,
		37608300,
		37674800,
		37741350,
		37807950,
		37874600,
		37941300,
		38008050,
		38074850,
		38141700,
		38208600,
		38275550,
		38342550,
		38409600,
		38476700,
		38543850,
		38611050,
		38678300,
		38745600,
		38812950,
		38880350,
		38947800,
		39015300,
		39082850,
		39150450,
		39218100,
		39285800,
		39353550,
		39421350,
		39489200,
		39557100,
		39625050,
		39693050,
		39761100,
		39829200,
		39897350,
		39965550,
		40033800,
		40102100,
		40170450,
		40238850,
		40307300,
		40375800,
		40444350,
		40512950,
		40581600,
		40650300,
		40719050,
		40787850,
		40856700,
		40925600,
		40994550,
		41063550,
		41132600,
		41201700,
		41270850,
		41340050,
		41409300,
		41478600,
		41547950,
		41617350,
		41686800,
		41756300,
		41825850,
		41895450,
		41965100,
		42034800,
		42104550,
		42174350,
		42244200,
		42314100,
		42384050,
		42454050,
		42524100,
		42594200,
		42664350,
		42734550,
		42804800,
		42875100,
		42945450,
		43015850,
		43086300,
		43156800,
		43227350,
		43297950,
		43368600,
		43439300,
		43510050,
		43580850,
		43651700,
		43722600,
		43793550,
		43864550,
		43935600,
		44006700,
		44077850,
		44149050,
		44220300,
		44291600,
		44362950,
		44434350,
		44505800,
		44577300,
		44648850,
		44720450,
		44792100,
		44863800,
		44935550,
		45007350,
		45079200,
		45151100,
		45223050,
		45295050,
		45367100,
		45439200,
		45511350,
		45583550,
		45655800,
		45728100,
		45800450,
		45872850,
		45945300,
		46017800,
		46090350,
		46162950,
		46235600,
		46308300,
		46381050,
		46453850,
		46526700,
		46599600,
		46672550,
		46745550,
		46818600,
		46891700,
		46964850,
		47038050,
		47111300,
		47184600,
		47257950,
		47331350,
		47404800,
		47478300,
		47551850,
		47625450,
		47699100,
		47772800,
		47846550,
		47920350,
		47994200,
		48068100,
		48142050,
		48216050,
		48290100,
		48364200,
		48438350,
		48512550,
		48586800,
		48661100,
		48735450,
		48809850,
		48884300,
		48958800,
		49033350,
		49107950,
		49182600,
		49257300,
		49332050,
		49406850,
		49481700,
		49556600,
		49631550,
		49706550,
		49781600,
		49856700,
		49931850,
		50007050,
		50082300,
		50157600,
		50232950,
		50308350,
		50383800,
		50459300,
		50534850,
		50610450,
		50686100,
		50761800,
		50837550,
		50913350,
		50989200,
		51065100,
		51141050,
		51217050,
		51293100,
		51369200,
		51445350,
		51521550,
		51597800,
		51674100,
		51750450,
		51826850,
		51903300,
		51979800,
		52056350,
		52132950,
		52209600,
		52286300,
		52363050,
		52439850,
		52516700,
		52593600,
		52670550,
		52747550,
		52824600,
		52901700,
		52978850,
		53056050,
		53133300,
		53210600,
		53287950,
		53365350,
		53442800,
		53520300,
		53597850,
		53675450,
		53753100,
		53830800,
		53908550,
		53986350,
		54064200,
		54142100,
		54220050,
		54298050,
		54376100,
		54454200,
		54532350,
		54610550,
		54688800,
		54767100,
		54845450,
		54923850,
		55002300,
		55080800,
		55159350,
		55237950,
		55316600,
		55395300,
		55474050,
		55552850,
		55631700,
		55710600,
		55789550,
		55868550,
		55947600,
		56026700,
		56105850,
		56185050,
		56264300,
		56343600,
		56422950,
		56502350,
		56581800,
		56661300,
		56740850,
		56820450,
		56900100,
		56979800,
		57059550,
		57139350,
		57219200,
		57299100,
		57379050,
		57459050,
		57539100,
		57619200,
		57699350,
		57779550,
		57859800,
		57940100,
		58020450,
		58100850,
		58181300,
		58261800,
		58342350,
		58422950,
		58503600,
		58584300,
		58665050,
		58745850,
		58826700,
		58907600,
		58988550,
		59069550,
		59150600,
		59231700,
		59312850,
		59394050,
		59475300,
		59556600,
		59637950,
		59719350,
		59800800,
		59882300,
		59963850,
		60045450,
		60127100,
		60208800,
		60290550,
		60372350,
		60454200,
		60536100,
		60618050,
		60700050,
		60782100,
		60864200,
		60946350,
		61028550,
		61110800,
		61193100,
		61275450,
		61357850,
		61440300,
		61522800,
		61605350,
		61687950,
		61770600,
		61853300,
		61936050,
		62018850,
		62101700,
		62184600,
		62267550,
		62350550,
		62433600,
		62516700,
		62599850,
		62683050,
		62766300,
		62849600,
		62932950,
		63016350,
		63099800,
		63183300,
		63266850,
		63350450,
		63434100,
		63517800,
		63601550,
		63685350,
		63769200,
		63853100,
		63937050,
		64021050,
		64105100,
		64189200,
		64273350,
		64357550,
		64441800,
		64526100,
		64610450,
		64694850,
		64779300,
		64863800,
		64948350,
		65032950,
		65117600,
		65202300,
		65287050,
		65371850,
		65456700,
		65541600,
		65626550,
		65711550,
		65796600,
		65881700,
		65966850,
		66052050,
		66137300,
		66222600,
		66307950,
		66393350,
		66478800,
		66564300,
		66649850,
		66735450,
		66821100,
		66906800,
		66992550,
		67078350,
		67164200,
		67250100,
		67336050,
		67422050,
		67508100,
		67594200,
		67680350,
		67766550,
		67852800,
		67939100,
		68025450,
		68111850,
		68198300,
		68284800,
		68371350,
		68457950,
		68544600,
		68631300,
		68718050,
		68804850,
		68891700,
		68978600,
		69065550,
		69152550,
		69239600,
		69326700,
		69413850,
		69501050,
		69588300,
		69675600,
		69762950,
		69850350,
		69937800,
		70025300,
		70112850,
		70200450,
		70288100,
		70375800,
		70463550,
		70551350,
		70639200,
		70727100,
		70815050,
		70903050,
		70991100,
		71079200,
		71167350,
		71255550,
		71343800,
		71432100,
		71520450,
		71608850,
		71697300,
		71785800,
		71874350,
		71962950,
		72051600,
		72140300,
		72229050,
		72317850,
		72406700,
		72495600,
		72584550,
		72673550,
		72762600,
		72851700,
		72940850,
		73030050,
		73119300,
		73208600,
		73297950,
		73387350,
		73476800,
		73566300,
		73655850,
		73745450,
		73835100,
		73924800,
		74014550,
		74104350,
		74194200,
		74284100,
		74374050,
		74464050,
		74554100,
		74644200,
		74734350,
		74824550,
		74914800,
		75005100,
		75095450,
		75185850,
		75276300,
		75366800,
		75457350,
		75547950,
		75638600,
		75729300,
		75820050,
		75910850,
		76001700,
		76092600,
		76183550,
		76274550,
		76365600,
		76456700,
		76547850,
		76639050,
		76730300,
		76821600,
		76912950,
		77004350,
		77095800,
		77187300,
		77278850,
		77370450,
		77462100,
		77553800,
		77645550,
		77737350,
		77829200,
		77921100,
		78013050,
		78105050,
		78197100,
		78289200,
		78381350,
		78473550,
		78565800,
		78658100,
		78750450,
		78842850,
		78935300,
		79027800,
		79120350,
		79212950,
		79305600,
		79398300,
		79491050,
		79583850,
		79676700,
		79769600,
		79862550,
		79955550,
		80048600,
		80141700,
		80234850,
		80328050,
		80421300,
		80514600,
		80607950,
		80701350,
		80794800,
		80888300,
		80981850,
		81075450,
		81169100,
		81262800,
		81356550,
		81450350,
		81544200,
		81638100,
		81732050,
		81826050,
		81920100,
		82014200,
		82108350,
		82202550,
		82296800,
		82391100,
		82485450,
		82579850,
		82674300,
		82768800,
		82863350,
		82957950,
		83052600,
		83147300,
		83242050,
		83336850,
		83431700,
		83526600,
		83621550,
		83716550,
		83811600,
		83906700,
		84001850,
		84097050,
		84192300,
		84287600,
		84382950,
		84478350,
		84573800,
		84669300,
		84764850,
		84860450,
		84956100,
		85051800,
		85147550,
		85243350,
		85339200,
		85435100,
		85531050,
		85627050,
		85723100,
		85819200,
		85915350,
		86011550,
		86107800,
		86204100,
		86300450,
		86396850,
		86493300,
		86589800,
		86686350,
		86782950,
		86879600,
		86976300,
		87073050,
		87169850,
		87266700,
		87363600,
		87460550,
		87557550,
		87654600,
		87751700,
		87848850,
		87946050,
		88043300,
		88140600,
		88237950,
		88335350,
		88432800,
		88530300,
		88627850,
		88725450,
		88823100,
		88920800,
		89018550,
		89116350,
		89214200,
		89312100,
		89410050,
		89508050,
		89606100,
		89704200,
		89802350,
		89900550,
		89998800,
		90097100,
		90195450,
		90293850,
		90392300,
		90490800,
		90589350,
		90687950,
		90786600,
		90885300,
		90984050,
		91082850,
		91181700,
		91280600,
		91379550,
		91478550,
		91577600,
		91676700,
		91775850,
		91875050,
		91974300,
		92073600,
		92172950,
		92272350,
		92371800,
		92471300,
		92570850,
		92670450,
		92770100,
		92869800,
		92969550,
		93069350,
		93169200,
		93269100,
		93369050,
		93469050,
		93569100,
		93669200,
		93769350,
		93869550,
		93969800,
		94070100,
		94170450,
		94270850,
		94371300,
		94471800,
		94572350,
		94672950,
		94773600,
		94874300,
		94975050,
		95075850,
		95176700,
		95277600,
		95378550,
		95479550,
		95580600,
		95681700,
		95782850,
		95884050,
		95985300,
		96086600,
		96187950,
		96289350,
		96390800,
		96492300,
		96593850,
		96695450,
		96797100,
		96898800,
		97000550,
		97102350,
		97204200,
		97306100,
		97408050,
		97510050,
		97612100,
		97714200,
		97816350,
		97918550,
		98020800,
		98123100,
		98225450,
		98327850,
		98430300,
		98532800,
		98635350,
		98737950,
		98840600,
		98943300,
		99046050,
		99148850,
		99251700,
		99354600,
		99457550,
		99560550,
		99663600,
		99766700,
		99869850,
		99973050,
		100076300,
		100179600,
		100282950,
		100386350,
		100489800,
		100593300,
		100696850,
		100800450,
		100904100,
		101007800,
		101111550,
		101215350,
		101319200,
		101423100,
		101527050,
		101631050,
		101735100,
		101839200,
		101943350,
		102047550,
		102151800,
		102256100,
		102360450,
		102464850,
		102569300,
		102673800,
		102778350,
		102882950,
		102987600,
		103092300,
		103197050,
		103301850,
		103406700,
		103511600,
		103616550,
		103721550,
		103826600,
		103931700,
		104036850,
		104142050,
		104247300,
		104352600,
		104457950,
		104563350,
		104668800,
		104774300,
		104879850,
		104985450,
		105091100,
		105196800,
		105302550,
		105408350,
		105514200,
		105620100,
		105726050,
		105832050,
		105938100,
		106044200,
		106150350,
		106256550,
		106362800,
		106469100,
		106575450,
		106681850,
		106788300,
		106894800,
		107001350,
		107107950,
		107214600,
		107321300,
		107428050,
		107534850,
		107641700,
		107748600,
		107855550,
		107962550,
		108069600,
		108176700,
		108283850,
		108391050,
		108498300,
		108605600,
		108712950,
		108820350,
		108927800,
		109035300,
		109142850,
		109250450,
		109358100,
		109465800,
		109573550,
		109681350,
		109789200,
		109897100,
		110005050,
		110113050,
		110221100,
		110329200,
		110437350,
		110545550,
		110653800,
		110762100,
		110870450,
		110978850,
		111087300,
		111195800,
		111304350,
		111412950,
		111521600,
		111630300,
		111739050,
		111847850,
		111956700,
		112065600,
		112174550,
		112283550,
		112392600,
		112501700,
		112610850,
		112720050,
		112829300,
		112938600,
		113047950,
		113157350,
		113266800,
		113376300,
		113485850,
		113595450,
		113705100,
		113814800,
		113924550,
		114034350,
		114144200,
		114254100,
		114364050,
		114474050,
		114584100,
		114694200,
		114804350,
		114914550,
		115024800,
		115135100,
		115245450,
		115355850,
		115466300,
		115576800,
		115687350,
		115797950,
		115908600,
		116019300,
		116130050,
		116240850,
		116351700,
		116462600,
		116573550,
		116684550,
		116795600,
		116906700,
		117017850,
		117129050,
		117240300,
		117351600,
		117462950,
		117574350,
		117685800,
		117797300,
		117908850,
		118020450,
		118132100,
		118243800,
		118355550,
		118467350,
		118579200,
		118691100,
		118803050,
		118915050,
		119027100,
		119139200,
		119251350,
		119363550,
		119475800,
		119588100,
		119700450,
		119812850,
		119925300,
		120037800,
		120150350,
		120262950,
		120375600,
		120488300,
		120601050,
		120713850,
		120826700,
		120939600,
		121052550,
		121165550,
		121278600,
		121391700,
		121504850,
		121618050,
		121731300,
		121844600,
		121957950,
		122071350,
		122184800,
		122298300,
		122411850,
		122525450,
		122639100,
		122752800,
		122866550,
		122980350,
		123094200,
		123208100,
		123322050,
		123436050,
		123550100,
		123664200,
		123778350,
		123892550,
		124006800,
		124121100,
		124235450,
		124349850,
		124464300,
		124578800,
		124693350,
		124807950,
		124922600,
		125037300,
		125152050,
		125266850,
		125381700,
		125496600,
		125611550,
		125726550,
		125841600,
		125956700,
		126071850,
		126187050,
		126302300,
		126417600,
		126532950,
		126648350,
		126763800,
		126879300,
		126994850,
		127110450,
		127226100,
		127341800,
		127457550,
		127573350,
		127689200,
		127805100,
		127921050,
		128037050,
		128153100,
		128269200,
		128385350,
		128501550,
		128617800,
		128734100,
		128850450,
		128966850,
		129083300,
		129199800,
		129316350,
		129432950,
		129549600,
		129666300,
		129783050,
		129899850,
		130016700,
		130133600,
		130250550,
		130367550,
		130484600,
		130601700,
		130718850,
		130836050,
		130953300,
		131070600,
		131187950,
		131305350,
		131422800,
		131540300,
		131657850,
		131775450,
		131893100,
		132010800,
		132128550,
		132246350,
		132364200,
		132482100,
		132600050,
		132718050,
		132836100,
		132954200,
		133072350,
		133190550,
		133308800,
		133427100,
		133545450,
		133663850,
		133782300,
		133900800,
		134019350,
		134137950,
		134256600,
		134375300,
		134494050,
		134612850,
		134731700,
		134850600,
		134969550,
		135088550,
		135207600,
		135326700,
		135445850,
		135565050,
		135684300,
		135803600,
		135922950,
		136042350,
		136161800,
		136281300,
		136400850,
		136520450,
		136640100,
		136759800,
		136879550,
		136999350,
		137119200,
		137239100,
		137359050,
		137479050,
		137599100,
		137719200,
		137839350,
		137959550,
		138079800,
		138200100,
		138320450,
		138440850,
		138561300,
		138681800,
		138802350,
		138922950,
		139043600,
		139164300,
		139285050,
		139405850,
		139526700,
		139647600,
		139768550,
		139889550,
		140010600,
		140131700,
		140252850,
		140374050,
		140495300,
		140616600,
		140737950,
		140859350,
		140980800,
		141102300,
		141223850,
		141345450,
		141467100,
		141588800,
		141710550,
		141832350,
		141954200,
		142076100,
		142198050,
		142320050,
		142442100,
		142564200,
		142686350,
		142808550,
		142930800,
		143053100,
		143175450,
		143297850,
		143420300,
		143542800,
		143665350,
		143787950,
		143910600,
		144033300,
		144156050,
		144278850,
		144401700,
		144524600,
		144647550,
		144770550,
		144893600,
		145016700,
		145139850,
		145263050,
		145386300,
		145509600,
		145632950,
		145756350,
		145879800,
		146003300,
		146126850,
		146250450,
		146374100,
		146497800,
		146621550,
		146745350,
		146869200,
		146993100,
		147117050,
		147241050,
		147365100,
		147489200,
		147613350,
		147737550,
		147861800,
		147986100,
		148110450,
		148234850,
		148359300,
		148483800,
		148608350,
		148732950,
		148857600,
		148982300,
		149107050,
		149231850,
		149356700,
		149481600,
		149606550,
		149731550,
		149856600,
		149981700,
		150106850,
		150232050,
		150357300,
		150482600,
		150607950,
		150733350,
		150858800,
		150984300,
		151109850,
		151235450,
		151361100,
		151486800,
		151612550,
		151738350,
		151864200,
		151990100,
		152116050,
		152242050,
		152368100,
		152494200,
		152620350,
		152746550,
		152872800,
		152999100,
		153125450,
		153251850,
		153378300,
		153504800,
		153631350,
		153757950,
		153884600,
		154011300,
		154138050,
		154264850,
		154391700,
		154518600,
		154645550,
		154772550,
		154899600,
		155026700,
		155153850,
		155281050,
		155408300,
		155535600,
		155662950,
		155790350,
		155917800,
		156045300,
		156172850,
		156300450,
		156428100,
		156555800,
		156683550,
		156811350,
		156939200,
		157067100,
		157195050,
		157323050,
		157451100,
		157579200,
		157707350,
		157835550,
		157963800,
		158092100,
		158220450,
		158348850,
		158477300,
		158605800,
		158734350,
		158862950,
		158991600,
		159120300,
		159249050,
		159377850,
		159506700,
		159635600,
		159764550,
		159893550,
		160022600,
		160151700,
		160280850,
		160410050,
		160539300,
		160668600,
		160797950,
		160927350,
		161056800,
		161186300,
		161315850,
		161445450,
		161575100,
		161704800,
		161834550,
		161964350,
		162094200,
		162224100,
		162354050,
		162484050,
		162614100,
		162744200,
		162874350,
		163004550,
		163134800,
		163265100,
		163395450,
		163525850,
		163656300,
		163786800,
		163917350,
		164047950,
		164178600,
		164309300,
		164440050,
		164570850,
		164701700,
		164832600,
		164963550,
		165094550,
		165225600,
		165356700,
		165487850,
		165619050,
		165750300,
		165881600,
		166012950,
		166144350,
		166275800,
		166407300,
		166538850,
		166670450,
		166802100,
		166933800,
		167065550,
		167197350,
		167329200,
		167461100,
		167593050,
		167725050,
		167857100,
		167989200,
		168121350,
		168253550,
		168385800,
		168518100,
		168650450,
		168782850,
		168915300,
		169047800,
		169180350,
		169312950,
		169445600,
		169578300,
		169711050,
		169843850,
		169976700,
		170109600,
		170242550,
		170375550,
		170508600,
		170641700,
		170774850,
		170908050,
		171041300,
		171174600,
		171307950,
		171441350,
		171574800,
		171708300,
		171841850,
		171975450,
		172109100,
		172242800,
		172376550,
		172510350,
		172644200,
		172778100,
		172912050,
		173046050,
		173180100,
		173314200,
		173448350,
		173582550,
		173716800,
		173851100,
		173985450,
		174119850,
		174254300,
		174388800,
		174523350,
		174657950,
		174792600,
		174927300,
		175062050,
		175196850,
		175331700,
		175466600,
		175601550,
		175736550,
		175871600,
		176006700,
		176141850,
		176277050,
		176412300,
		176547600,
		176682950,
		176818350,
		176953800,
		177089300,
		177224850,
		177360450,
		177496100,
		177631800,
		177767550,
		177903350,
		178039200,
		178175100,
		178311050,
		178447050,
		178583100,
		178719200,
		178855350,
		178991550,
		179127800,
		179264100,
		179400450,
		179536850,
		179673300,
		179809800,
		179946350,
		180082950,
		180219600,
		180356300,
		180493050,
		180629850,
		180766700,
		180903600,
		181040550,
		181177550,
		181314600,
		181451700,
		181588850,
		181726050,
		181863300,
		182000600,
		182137950,
		182275350,
		182412800,
		182550300,
		182687850,
		182825450,
		182963100,
		183100800,
		183238550,
		183376350,
		183514200,
		183652100,
		183790050,
		183928050,
		184066100,
		184204200,
		184342350,
		184480550,
		184618800,
		184757100,
		184895450,
		185033850,
		185172300,
		185310800,
		185449350,
		185587950,
		185726600,
		185865300,
		186004050,
		186142850,
		186281700,
		186420600,
		186559550,
		186698550,
		186837600,
		186976700,
		187115850,
		187255050,
		187394300,
		187533600,
		187672950,
		187812350,
		187951800,
		188091300,
		188230850,
		188370450,
		188510100,
		188649800,
		188789550,
		188929350,
		189069200,
		189209100,
		189349050,
		189489050,
		189629100,
		189769200,
		189909350,
		190049550,
		190189800,
		190330100,
		190470450,
		190610850,
		190751300,
		190891800,
		191032350,
		191172950,
		191313600,
		191454300,
		191595050,
		191735850,
		191876700,
		192017600,
		192158550,
		192299550,
		192440600,
		192581700,
		192722850,
		192864050,
		193005300,
		193146600,
		193287950,
		193429350,
		193570800,
		193712300,
		193853850,
		193995450,
		194137100,
		194278800,
		194420550,
		194562350,
		194704200,
		194846100,
		194988050,
		195130050,
		195272100,
		195414200,
		195556350,
		195698550,
		195840800,
		195983100,
		196125450,
		196267850,
		196410300,
		196552800,
		196695350,
		196837950,
		196980600,
		197123300,
		197266050,
		197408850,
		197551700,
		197694600,
		197837550,
		197980550,
		198123600,
		198266700,
		198409850,
		198553050,
		198696300,
		198839600,
		198982950,
		199126350,
		199269800,
		199413300,
		199556850,
		199700450,
		199844100,
		199987800,
		200131550,
		200275350,
		200419200,
		200563100,
		200707050,
		200851050,
		200995100,
		201139200,
		201283350,
		201427550,
		201571800,
		201716100,
		201860450,
		202004850,
		202149300,
		202293800,
		202438350,
		202582950,
		202727600,
		202872300,
		203017050,
		203161850,
		203306700,
		203451600,
		203596550,
		203741550,
		203886600,
		204031700,
		204176850,
		204322050,
		204467300,
		204612600,
		204757950,
		204903350,
		205048800,
		205194300,
		205339850,
		205485450,
		205631100,
		205776800,
		205922550,
		206068350,
		206214200,
		206360100,
		206506050,
		206652050,
		206798100,
		206944200,
		207090350,
		207236550,
		207382800,
		207529100,
		207675450,
		207821850,
		207968300,
		208114800,
		208261350,
		208407950,
		208554600,
		208701300,
		208848050,
		208994850,
		209141700,
		209288600,
		209435550,
		209582550,
		209729600,
		209876700,
		210023850,
		210171050,
		210318300,
		210465600,
		210612950,
		210760350,
		210907800,
		211055300,
		211202850,
		211350450,
		211498100,
		211645800,
		211793550,
		211941350,
		212089200,
		212237100,
		212385050,
		212533050,
		212681100,
		212829200,
		212977350,
		213125550,
		213273800,
		213422100,
		213570450,
		213718850,
		213867300,
		214015800,
		214164350,
		214312950,
		214461600,
		214610300,
		214759050,
		214907850,
		215056700,
		215205600,
		215354550,
		215503550,
		215652600,
		215801700,
		215950850,
		216100050,
		216249300,
		216398600,
		216547950,
		216697350,
		216846800,
		216996300,
		217145850,
		217295450,
		217445100,
		217594800,
		217744550,
		217894350,
		218044200,
		218194100,
		218344050,
		218494050,
		218644100,
		218794200,
		218944350,
		219094550,
		219244800,
		219395100,
		219545450,
		219695850,
		219846300,
		219996800,
		220147350,
		220297950,
		220448600,
		220599300,
		220750050,
		220900850,
		221051700,
		221202600,
		221353550,
		221504550,
		221655600,
		221806700,
		221957850,
		222109050,
		222260300,
		222411600,
		222562950,
		222714350,
		222865800,
		223017300,
		223168850,
		223320450,
		223472100,
		223623800,
		223775550,
		223927350,
		224079200,
		224231100,
		224383050,
		224535050,
		224687100,
		224839200,
		224991350,
		225143550,
		225295800,
		225448100,
		225600450,
		225752850,
		225905300,
		226057800,
		226210350,
		226362950,
		226515600,
		226668300,
		226821050,
		226973850,
		227126700,
		227279600,
		227432550,
		227585550,
		227738600,
		227891700,
		228044850,
		228198050,
		228351300,
		228504600,
		228657950,
		228811350,
		228964800,
		229118300,
		229271850,
		229425450,
		229579100,
		229732800,
		229886550,
		230040350,
		230194200,
		230348100,
		230502050,
		230656050,
		230810100,
		230964200,
		231118350,
		231272550,
		231426800,
		231581100,
		231735450,
		231889850,
		232044300,
		232198800,
		232353350,
		232507950,
		232662600,
		232817300,
		232972050,
		233126850,
		233281700,
		233436600,
		233591550,
		233746550,
		233901600,
		234056700,
		234211850,
		234367050,
		234522300,
		234677600,
		234832950,
		234988350,
		235143800,
		235299300,
		235454850,
		235610450,
		235766100,
		235921800,
		236077550,
		236233350,
		236389200,
		236545100,
		236701050,
		236857050,
		237013100,
		237169200,
		237325350,
		237481550,
		237637800,
		237794100,
		237950450,
		238106850,
		238263300,
		238419800,
		238576350,
		238732950,
		238889600,
		239046300,
		239203050,
		239359850,
		239516700,
		239673600,
		239830550,
		239987550,
		240144600,
		240301700,
		240458850,
		240616050,
		240773300,
		240930600,
		241087950,
		241245350,
		241402800,
		241560300,
		241717850,
		241875450,
		242033100,
		242190800,
		242348550,
		242506350,
		242664200,
		242822100,
		242980050,
		243138050,
		243296100,
		243454200,
		243612350,
		243770550,
		243928800,
		244087100,
		244245450,
		244403850,
		244562300,
		244720800,
		244879350,
		245037950,
		245196600,
		245355300,
		245514050,
		245672850,
		245831700,
		245990600,
		246149550,
		246308550,
		246467600,
		246626700,
		246785850,
		246945050,
		247104300,
		247263600,
		247422950,
		247582350,
		247741800,
		247901300,
		248060850,
		248220450,
		248380100,
		248539800,
		248699550,
		248859350,
		249019200,
		249179100,
		249339050,
		249499050,
		249659100,
		249819200,
		249979350,
		250139550,
		250299800,
		250460100,
		250620450,
		250780850,
		250941300,
		251101800,
		251262350,
		251422950,
		251583600,
		251744300,
		251905050,
		252065850,
		252226700,
		252387600,
		252548550,
		252709550,
		252870600,
		253031700,
		253192850,
		253354050,
		253515300,
		253676600,
		253837950,
		253999350,
		254160800,
		254322300,
		254483850,
		254645450,
		254807100,
		254968800,
		255130550,
		255292350,
		255454200,
		255616100,
		255778050,
		255940050,
		256102100,
		256264200,
		256426350,
		256588550,
		256750800,
		256913100,
		257075450,
		257237850,
		257400300,
		257562800,
		257725350,
		257887950,
		258050600,
		258213300,
		258376050,
		258538850,
		258701700,
		258864600,
		259027550,
		259190550,
		259353600,
		259516700,
		259679850,
		259843050,
		260006300,
		260169600,
		260332950,
		260496350,
		260659800,
		260823300,
		260986850,
		261150450,
		261314100,
		261477800,
		261641550,
		261805350,
		261969200,
		262133100,
		262297050,
		262461050,
		262625100,
		262789200,
		262953350,
		263117550,
		263281800,
		263446100,
		263610450,
		263774850,
		263939300,
		264103800,
		264268350,
		264432950,
		264597600,
		264762300,
		264927050,
		265091850,
		265256700,
		265421600,
		265586550,
		265751550,
		265916600,
		266081700,
		266246850,
		266412050,
		266577300,
		266742600,
		266907950,
		267073350,
		267238800,
		267404300,
		267569850,
		267735450,
		267901100,
		268066800,
		268232550,
		268398350,
		268564200,
		268730100,
		268896050,
		269062050,
		269228100,
		269394200,
		269560350,
		269726550,
		269892800,
		270059100,
		270225450,
		270391850,
		270558300,
		270724800,
		270891350,
		271057950,
		271224600,
		271391300,
		271558050,
		271724850,
		271891700,
		272058600,
		272225550,
		272392550,
		272559600,
		272726700,
		272893850,
		273061050,
		273228300,
		273395600,
		273562950,
		273730350,
		273897800,
		274065300,
		274232850,
		274400450,
		274568100,
		274735800,
		274903550,
		275071350,
		275239200,
		275407100,
		275575050,
		275743050,
		275911100,
		276079200,
		276247350,
		276415550,
		276583800,
		276752100,
		276920450,
		277088850,
		277257300,
		277425800,
		277594350,
		277762950,
		277931600,
		278100300,
		278269050,
		278437850,
		278606700,
		278775600,
		278944550,
		279113550,
		279282600,
		279451700,
		279620850,
		279790050,
		279959300,
		280128600,
		280297950,
		280467350,
		280636800,
		280806300,
		280975850,
		281145450,
		281315100,
		281484800,
		281654550,
		281824350,
		281994200,
		282164100,
		282334050,
		282504050,
		282674100,
		282844200,
		283014350,
		283184550,
		283354800,
		283525100,
		283695450,
		283865850,
		284036300,
		284206800,
		284377350,
		284547950,
		284718600,
		284889300,
		285060050,
		285230850,
		285401700,
		285572600,
		285743550,
		285914550,
		286085600,
		286256700,
		286427850,
		286599050,
		286770300,
		286941600,
		287112950,
		287284350,
		287455800,
		287627300,
		287798850,
		287970450,
		288142100,
		288313800,
		288485550,
		288657350,
		288829200,
		289001100,
		289173050,
		289345050,
		289517100,
		289689200,
		289861350,
		290033550,
		290205800,
		290378100,
		290550450,
		290722850,
		290895300,
		291067800,
		291240350,
		291412950,
		291585600,
		291758300,
		291931050,
		292103850,
		292276700,
		292449600,
		292622550,
		292795550,
		292968600,
		293141700,
		293314850,
		293488050,
		293661300,
		293834600,
		294007950,
		294181350,
		294354800,
		294528300,
		294701850,
		294875450,
		295049100,
		295222800,
		295396550,
		295570350,
		295744200,
		295918100,
		296092050,
		296266050,
		296440100,
		296614200,
		296788350,
		296962550,
		297136800,
		297311100,
		297485450,
		297659850,
		297834300,
		298008800,
		298183350,
		298357950,
		298532600,
		298707300,
		298882050,
		299056850,
		299231700,
		299406600,
		299581550,
		299756550,
		299931600,
		300106700,
		300281850,
		300457050,
		300632300,
		300807600,
		300982950,
		301158350,
		301333800,
		301509300,
		301684850,
		301860450,
		302036100,
		302211800,
		302387550,
		302563350,
		302739200,
		302915100,
		303091050,
		303267050,
		303443100,
		303619200,
		303795350,
		303971550,
		304147800,
		304324100,
		304500450,
		304676850,
		304853300,
		305029800,
		305206350,
		305382950,
		305559600,
		305736300,
		305913050,
		306089850,
		306266700,
		306443600,
		306620550,
		306797550,
		306974600,
		307151700,
		307328850,
		307506050,
		307683300,
		307860600,
		308037950,
		308215350,
		308392800,
		308570300,
		308747850,
		308925450,
		309103100,
		309280800,
		309458550,
		309636350,
		309814200,
		309992100,
		310170050,
		310348050,
		310526100,
		310704200,
		310882350,
		311060550,
		311238800,
		311417100,
		311595450,
		311773850,
		311952300,
		312130800,
		312309350,
		312487950,
		312666600,
		312845300,
		313024050,
		313202850,
		313381700,
		313560600,
		313739550,
		313918550,
		314097600,
		314276700,
		314455850,
		314635050,
		314814300,
		314993600,
		315172950,
		315352350,
		315531800,
		315711300,
		315890850,
		316070450,
		316250100,
		316429800,
		316609550,
		316789350,
		316969200,
		317149100,
		317329050,
		317509050,
		317689100,
		317869200,
		318049350,
		318229550,
		318409800,
		318590100,
		318770450,
		318950850,
		319131300,
		319311800,
		319492350,
		319672950,
		319853600,
		320034300,
		320215050,
		320395850,
		320576700,
		320757600,
		320938550,
		321119550,
		321300600,
		321481700,
		321662850,
		321844050,
		322025300,
		322206600,
		322387950,
		322569350,
		322750800,
		322932300,
		323113850,
		323295450,
		323477100,
		323658800,
		323840550,
		324022350,
		324204200,
		324386100,
		324568050,
		324750050,
		324932100,
		325114200,
		325296350,
		325478550,
		325660800,
		325843100,
		326025450,
		326207850,
		326390300,
		326572800,
		326755350,
		326937950,
		327120600,
		327303300,
		327486050,
		327668850,
		327851700,
		328034600,
		328217550,
		328400550,
		328583600,
		328766700,
		328949850,
		329133050,
		329316300,
		329499600,
		329682950,
		329866350,
		330049800,
		330233300,
		330416850,
		330600450,
		330784100,
		330967800,
		331151550,
		331335350,
		331519200,
		331703100,
		331887050,
		332071050,
		332255100,
		332439200,
		332623350,
		332807550,
		332991800,
		333176100,
		333360450,
		333544850,
		333729300,
		333913800,
		334098350,
		334282950,
		334467600,
		334652300,
		334837050,
		335021850,
		335206700,
		335391600,
		335576550,
		335761550,
		335946600,
		336131700,
		336316850,
		336502050,
		336687300,
		336872600,
		337057950,
		337243350,
		337428800,
		337614300,
		337799850,
		337985450,
		338171100,
		338356800,
		338542550,
		338728350,
		338914200,
		339100100,
		339286050,
		339472050,
		339658100,
		339844200,
		340030350,
		340216550,
		340402800,
		340589100,
		340775450,
		340961850,
		341148300,
		341334800,
		341521350,
		341707950,
		341894600,
		342081300,
		342268050,
		342454850,
		342641700,
		342828600,
		343015550,
		343202550,
		343389600,
		343576700,
		343763850,
		343951050,
		344138300,
		344325600,
		344512950,
		344700350,
		344887800,
		345075300,
		345262850,
		345450450,
		345638100,
		345825800,
		346013550,
		346201350,
		346389200,
		346577100,
		346765050,
		346953050,
		347141100,
		347329200,
		347517350,
		347705550,
		347893800,
		348082100,
		348270450,
		348458850,
		348647300,
		348835800,
		349024350,
		349212950,
		349401600,
		349590300,
		349779050,
		349967850,
		350156700,
		350345600,
		350534550,
		350723550,
		350912600,
		351101700,
		351290850,
		351480050,
		351669300,
		351858600,
		352047950,
		352237350,
		352426800,
		352616300,
		352805850,
		352995450,
		353185100,
		353374800,
		353564550,
		353754350,
		353944200,
		354134100,
		354324050,
		354514050,
		354704100,
		354894200,
		355084350,
		355274550,
		355464800,
		355655100,
		355845450,
		356035850,
		356226300,
		356416800,
		356607350,
		356797950,
		356988600,
		357179300,
		357370050,
		357560850,
		357751700,
		357942600,
		358133550,
		358324550,
		358515600,
		358706700,
		358897850,
		359089050,
		359280300,
		359471600,
		359662950,
		359854350,
		360045800,
		360237300,
		360428850,
		360620450,
		360812100,
		361003800,
		361195550,
		361387350,
		361579200,
		361771100,
		361963050,
		362155050,
		362347100,
		362539200,
		362731350,
		362923550,
		363115800,
		363308100,
		363500450,
		363692850,
		363885300,
		364077800,
		364270350,
		364462950,
		364655600,
		364848300,
		365041050,
		365233850,
		365426700,
		365619600,
		365812550,
		366005550,
		366198600,
		366391700,
		366584850,
		366778050,
		366971300,
		367164600,
		367357950,
		367551350,
		367744800,
		367938300,
		368131850,
		368325450,
		368519100,
		368712800,
		368906550,
		369100350,
		369294200,
		369488100,
		369682050,
		369876050,
		370070100,
		370264200,
		370458350,
		370652550,
		370846800,
		371041100,
		371235450,
		371429850,
		371624300,
		371818800,
		372013350,
		372207950,
		372402600,
		372597300,
		372792050,
		372986850,
		373181700,
		373376600,
		373571550,
		373766550,
		373961600,
		374156700,
		374351850,
		374547050,
		374742300,
		374937600,
		375132950,
		375328350,
		375523800,
		375719300,
		375914850,
		376110450,
		376306100,
		376501800,
		376697550,
		376893350,
		377089200,
		377285100,
		377481050,
		377677050,
		377873100,
		378069200,
		378265350,
		378461550,
		378657800,
		378854100,
		379050450,
		379246850,
		379443300,
		379639800,
		379836350,
		380032950,
		380229600,
		380426300,
		380623050,
		380819850,
		381016700,
		381213600,
		381410550,
		381607550,
		381804600,
		382001700,
		382198850,
		382396050,
		382593300,
		382790600,
		382987950,
		383185350,
		383382800,
		383580300,
		383777850,
		383975450,
		384173100,
		384370800,
		384568550,
		384766350,
		384964200,
		385162100,
		385360050,
		385558050,
		385756100,
		385954200,
		386152350,
		386350550,
		386548800,
		386747100,
		386945450,
		387143850,
		387342300,
		387540800,
		387739350,
		387937950,
		388136600,
		388335300,
		388534050,
		388732850,
		388931700,
		389130600,
		389329550,
		389528550,
		389727600,
		389926700,
		390125850,
		390325050,
		390524300,
		390723600,
		390922950,
		391122350,
		391321800,
		391521300,
		391720850,
		391920450,
		392120100,
		392319800,
		392519550,
		392719350,
		392919200,
		393119100,
		393319050,
		393519050,
		393719100,
		393919200,
		394119350,
		394319550,
		394519800,
		394720100,
		394920450,
		395120850,
		395321300,
		395521800,
		395722350,
		395922950,
		396123600,
		396324300,
		396525050,
		396725850,
		396926700,
		397127600,
		397328550,
		397529550,
		397730600,
		397931700,
		398132850,
		398334050,
		398535300,
		398736600,
		398937950,
		399139350,
		399340800,
		399542300,
		399743850,
		399945450,
		400147100,
		400348800,
		400550550,
		400752350,
		400954200,
		401156100,
		401358050,
		401560050,
		401762100,
		401964200,
		402166350,
		402368550,
		402570800,
		402773100,
		402975450,
		403177850,
		403380300,
		403582800,
		403785350,
		403987950,
		404190600,
		404393300,
		404596050,
		404798850,
		405001700,
		405204600,
		405407550,
		405610550,
		405813600,
		406016700,
		406219850,
		406423050,
		406626300,
		406829600,
		407032950,
		407236350,
		407439800,
		407643300,
		407846850,
		408050450,
		408254100,
		408457800,
		408661550,
		408865350,
		409069200,
		409273100,
		409477050,
		409681050,
		409885100,
		410089200,
		410293350,
		410497550,
		410701800,
		410906100,
		411110450,
		411314850,
		411519300,
		411723800,
		411928350,
		412132950,
		412337600,
		412542300,
		412747050,
		412951850,
		413156700,
		413361600,
		413566550,
		413771550,
		413976600,
		414181700,
		414386850,
		414592050,
		414797300,
		415002600,
		415207950,
		415413350,
		415618800,
		415824300,
		416029850,
		416235450,
		416441100,
		416646800,
		416852550,
		417058350,
		417264200,
		417470100,
		417676050,
		417882050,
		418088100,
		418294200,
		418500350,
		418706550,
		418912800,
		419119100,
		419325450,
		419531850,
		419738300,
		419944800,
		420151350,
		420357950,
		420564600,
		420771300,
		420978050,
		421184850,
		421391700,
		421598600,
		421805550,
		422012550,
		422219600,
		422426700,
		422633850,
		422841050,
		423048300,
		423255600,
		423462950,
		423670350,
		423877800,
		424085300,
		424292850,
		424500450,
		424708100,
		424915800,
		425123550,
		425331350,
		425539200,
		425747100,
		425955050,
		426163050,
		426371100,
		426579200,
		426787350,
		426995550,
		427203800,
		427412100,
		427620450,
		427828850,
		428037300,
		428245800,
		428454350,
		428662950,
		428871600,
		429080300,
		429289050,
		429497850,
		429706700,
		429915600,
		430124550,
		430333550,
		430542600,
		430751700,
		430960850,
		431170050,
		431379300,
		431588600,
		431797950,
		432007350,
		432216800,
		432426300,
		432635850,
		432845450,
		433055100,
		433264800,
		433474550,
		433684350,
		433894200,
		434104100,
		434314050,
		434524050,
		434734100,
		434944200,
		435154350,
		435364550,
		435574800,
		435785100,
		435995450,
		436205850,
		436416300,
		436626800,
		436837350,
		437047950,
		437258600,
		437469300,
		437680050,
		437890850,
		438101700,
		438312600,
		438523550,
		438734550,
		438945600,
		439156700,
		439367850,
		439579050,
		439790300,
		440001600,
		440212950,
		440424350,
		440635800,
		440847300,
		441058850,
		441270450,
		441482100,
		441693800,
		441905550,
		442117350,
		442329200,
		442541100,
		442753050,
		442965050,
		443177100,
		443389200,
		443601350,
		443813550,
		444025800,
		444238100,
		444450450,
		444662850,
		444875300,
		445087800,
		445300350,
		445512950,
		445725600,
		445938300,
		446151050,
		446363850,
		446576700,
		446789600,
		447002550,
		447215550,
		447428600,
		447641700,
		447854850,
		448068050,
		448281300,
		448494600,
		448707950,
		448921350,
		449134800,
		449348300,
		449561850,
		449775450,
		449989100,
		450202800,
		450416550,
		450630350,
		450844200,
		451058100,
		451272050,
		451486050,
		451700100,
		451914200,
		452128350,
		452342550,
		452556800,
		452771100,
		452985450,
		453199850,
		453414300,
		453628800,
		453843350,
		454057950,
		454272600,
		454487300,
		454702050,
		454916850,
		455131700,
		455346600,
		455561550,
		455776550,
		455991600,
		456206700,
		456421850,
		456637050,
		456852300,
		457067600,
		457282950,
		457498350,
		457713800,
		457929300,
		458144850,
		458360450,
		458576100,
		458791800,
		459007550,
		459223350,
		459439200,
		459655100,
		459871050,
		460087050,
		460303100,
		460519200,
		460735350,
		460951550,
		461167800,
		461384100,
		461600450,
		461816850,
		462033300,
		462249800,
		462466350,
		462682950,
		462899600,
		463116300,
		463333050,
		463549850,
		463766700,
		463983600,
		464200550,
		464417550,
		464634600,
		464851700,
		465068850,
		465286050,
		465503300,
		465720600,
		465937950,
		466155350,
		466372800,
		466590300,
		466807850,
		467025450,
		467243100,
		467460800,
		467678550,
		467896350,
		468114200,
		468332100,
		468550050,
		468768050,
		468986100,
		469204200,
		469422350,
		469640550,
		469858800,
		470077100,
		470295450,
		470513850,
		470732300,
		470950800,
		471169350,
		471387950,
		471606600,
		471825300,
		472044050,
		472262850,
		472481700,
		472700600,
		472919550,
		473138550,
		473357600,
		473576700,
		473795850,
		474015050,
		474234300,
		474453600,
		474672950,
		474892350,
		475111800,
		475331300,
		475550850,
		475770450,
		475990100,
		476209800,
		476429550,
		476649350,
		476869200,
		477089100,
		477309050,
		477529050,
		477749100,
		477969200,
		478189350,
		478409550,
		478629800,
		478850100,
		479070450,
		479290850,
		479511300,
		479731800,
		479952350,
		480172950,
		480393600,
		480614300,
		480835050,
		481055850,
		481276700,
		481497600,
		481718550,
		481939550,
		482160600,
		482381700,
		482602850,
		482824050,
		483045300,
		483266600,
		483487950,
		483709350,
		483930800,
		484152300,
		484373850,
		484595450,
		484817100,
		485038800,
		485260550,
		485482350,
		485704200,
		485926100,
		486148050,
		486370050,
		486592100,
		486814200,
		487036350,
		487258550,
		487480800,
		487703100,
		487925450,
		488147850,
		488370300,
		488592800,
		488815350,
		489037950,
		489260600,
		489483300,
		489706050,
		489928850,
		490151700,
		490374600,
		490597550,
		490820550,
		491043600,
		491266700,
		491489850,
		491713050,
		491936300,
		492159600,
		492382950,
		492606350,
		492829800,
		493053300,
		493276850,
		493500450,
		493724100,
		493947800,
		494171550,
		494395350,
		494619200,
		494843100,
		495067050,
		495291050,
		495515100,
		495739200,
		495963350,
		496187550,
		496411800,
		496636100,
		496860450,
		497084850,
		497309300,
		497533800,
		497758350,
		497982950,
		498207600,
		498432300,
		498657050,
		498881850,
		499106700,
		499331600,
		499556550,
		499781550,
		500006600,
		500231700,
		500456850,
		500682050,
		500907300,
		501132600,
		501357950,
		501583350,
		501808800,
		502034300,
		502259850,
		502485450,
		502711100,
		502936800,
		503162550,
		503388350,
		503614200,
		503840100,
		504066050,
		504292050,
		504518100,
		504744200,
		504970350,
		505196550,
		505422800,
		505649100,
		505875450,
		506101850,
		506328300,
		506554800,
		506781350,
		507007950,
		507234600,
		507461300,
		507688050,
		507914850,
		508141700,
		508368600,
		508595550,
		508822550,
		509049600,
		509276700,
		509503850,
		509731050,
		509958300,
		510185600,
		510412950,
		510640350,
		510867800,
		511095300,
		511322850,
		511550450,
		511778100,
		512005800,
		512233550,
		512461350,
		512689200,
		512917100,
		513145050,
		513373050,
		513601100,
		513829200,
		514057350,
		514285550,
		514513800,
		514742100,
		514970450,
		515198850,
		515427300,
		515655800,
		515884350,
		516112950,
		516341600,
		516570300,
		516799050,
		517027850,
		517256700,
		517485600,
		517714550,
		517943550,
		518172600,
		518401700,
		518630850,
		518860050,
		519089300,
		519318600,
		519547950,
		519777350,
		520006800,
		520236300,
		520465850,
		520695450,
		520925100,
		521154800,
		521384550,
		521614350,
		521844200,
		522074100,
		522304050,
		522534050,
		522764100,
		522994200,
		523224350,
		523454550,
		523684800,
		523915100,
		524145450,
		524375850,
		524606300,
		524836800,
		525067350,
		525297950,
		525528600,
		525759300,
		525990050,
		526220850,
		526451700,
		526682600,
		526913550,
		527144550,
		527375600,
		527606700,
		527837850,
		528069050,
		528300300,
		528531600,
		528762950,
		528994350,
		529225800,
		529457300,
		529688850,
		529920450,
		530152100,
		530383800,
		530615550,
		530847350,
		531079200,
		531311100,
		531543050,
		531775050,
		532007100,
		532239200,
		532471350,
		532703550,
		532935800,
		533168100,
		533400450,
		533632850,
		533865300,
		534097800,
		534330350,
		534562950,
		534795600,
		535028300,
		535261050,
		535493850,
		535726700,
		535959600,
		536192550,
		536425550,
		536658600,
		536891700,
		537124850,
		537358050,
		537591300,
		537824600,
		538057950,
		538291350,
		538524800,
		538758300,
		538991850,
		539225450,
		539459100,
		539692800,
		539926550,
		540160350,
		540394200,
		540628100,
		540862050,
		541096050,
		541330100,
		541564200,
		541798350,
		542032550,
		542266800,
		542501100,
		542735450,
		542969850,
		543204300,
		543438800,
		543673350,
		543907950,
		544142600,
		544377300,
		544612050,
		544846850,
		545081700,
		545316600,
		545551550,
		545786550,
		546021600,
		546256700,
		546491850,
		546727050,
		546962300,
		547197600,
		547432950,
		547668350,
		547903800,
		548139300,
		548374850,
		548610450,
		548846100,
		549081800,
		549317550,
		549553350,
		549789200,
		550025100,
		550261050,
		550497050,
		550733100,
		550969200,
		551205350,
		551441550,
		551677800,
		551914100,
		552150450,
		552386850,
		552623300,
		552859800,
		553096350,
		553332950,
		553569600,
		553806300,
		554043050,
		554279850,
		554516700,
		554753600,
		554990550,
		555227550,
		555464600,
		555701700,
		555938850,
		556176050,
		556413300,
		556650600,
		556887950,
		557125350,
		557362800,
		557600300,
		557837850,
		558075450,
		558313100,
		558550800,
		558788550,
		559026350,
		559264200,
		559502100,
		559740050,
		559978050,
		560216100,
		560454200,
		560692350,
		560930550,
		561168800,
		561407100,
		561645450,
		561883850,
		562122300,
		562360800,
		562599350,
		562837950,
		563076600,
		563315300,
		563554050,
		563792850,
		564031700,
		564270600,
		564509550,
		564748550,
		564987600,
		565226700,
		565465850,
		565705050,
		565944300,
		566183600,
		566422950,
		566662350,
		566901800,
		567141300,
		567380850,
		567620450,
		567860100,
		568099800,
		568339550,
		568579350,
		568819200,
		569059100,
		569299050,
		569539050,
		569779100,
		570019200,
		570259350,
		570499550,
		570739800,
		570980100,
		571220450,
		571460850,
		571701300,
		571941800,
		572182350,
		572422950,
		572663600,
		572904300,
		573145050,
		573385850,
		573626700,
		573867600,
		574108550,
		574349550,
		574590600,
		574831700,
		575072850,
		575314050,
		575555300,
		575796600,
		576037950,
		576279350,
		576520800,
		576762300,
		577003850,
		577245450,
		577487100,
		577728800,
		577970550,
		578212350,
		578454200,
		578696100,
		578938050,
		579180050,
		579422100,
		579664200,
		579906350,
		580148550,
		580390800,
		580633100,
		580875450,
		581117850,
		581360300,
		581602800,
		581845350,
		582087950,
		582330600,
		582573300,
		582816050,
		583058850,
		583301700,
		583544600,
		583787550,
		584030550,
		584273600,
		584516700,
		584759850,
		585003050,
		585246300,
		585489600,
		585732950,
		585976350,
		586219800,
		586463300,
		586706850,
		586950450,
		587194100,
		587437800,
		587681550,
		587925350,
		588169200,
		588413100,
		588657050,
		588901050,
		589145100,
		589389200,
		589633350,
		589877550,
		590121800,
		590366100,
		590610450,
		590854850,
		591099300,
		591343800,
		591588350,
		591832950,
		592077600,
		592322300,
		592567050,
		592811850,
		593056700,
		593301600,
		593546550,
		593791550,
		594036600,
		594281700,
		594526850,
		594772050,
		595017300,
		595262600,
		595507950,
		595753350,
		595998800,
		596244300,
		596489850,
		596735450,
		596981100,
		597226800,
		597472550,
		597718350,
		597964200,
		598210100,
		598456050,
		598702050,
		598948100,
		599194200,
		599440350,
		599686550,
		599932800,
		600179100,
		600425450,
		600671850,
		600918300,
		601164800,
		601411350,
		601657950,
		601904600,
		602151300,
		602398050,
		602644850,
		602891700,
		603138600,
		603385550,
		603632550,
		603879600,
		604126700,
		604373850,
		604621050,
		604868300,
		605115600,
		605362950,
		605610350,
		605857800,
		606105300,
		606352850,
		606600450,
		606848100,
		607095800,
		607343550,
		607591350,
		607839200,
		608087100,
		608335050,
		608583050,
		608831100,
		609079200,
		609327350,
		609575550,
		609823800,
		610072100,
		610320450,
		610568850,
		610817300,
		611065800,
		611314350,
		611562950,
		611811600,
		612060300,
		612309050,
		612557850,
		612806700,
		613055600,
		613304550,
		613553550,
		613802600,
		614051700,
		614300850,
		614550050,
		614799300,
		615048600,
		615297950,
		615547350,
		615796800,
		616046300,
		616295850,
		616545450,
		616795100,
		617044800,
		617294550,
		617544350,
		617794200,
		618044100,
		618294050,
		618544050,
		618794100,
		619044200,
		619294350,
		619544550,
		619794800,
		620045100,
		620295450,
		620545850,
		620796300,
		621046800,
		621297350,
		621547950,
		621798600,
		622049300,
		622300050,
		622550850,
		622801700,
		623052600,
		623303550,
		623554550,
		623805600,
		624056700,
		624307850,
		624559050,
		624810300,
		625061600,
		625312950,
		625564350,
		625815800,
		626067300,
		626318850,
		626570450,
		626822100,
		627073800,
		627325550,
		627577350,
		627829200,
		628081100,
		628333050,
		628585050,
		628837100,
		629089200,
		629341350,
		629593550,
		629845800,
		630098100,
		630350450,
		630602850,
		630855300,
		631107800,
		631360350,
		631612950,
		631865600,
		632118300,
		632371050,
		632623850,
		632876700,
		633129600,
		633382550,
		633635550,
		633888600,
		634141700,
		634394850,
		634648050,
		634901300,
		635154600,
		635407950,
		635661350,
		635914800,
		636168300,
		636421850,
		636675450,
		636929100,
		637182800,
		637436550,
		637690350,
		637944200,
		638198100,
		638452050,
		638706050,
		638960100,
		639214200,
		639468350,
		639722550,
		639976800,
		640231100,
		640485450,
		640739850,
		640994300,
		641248800,
		641503350,
		641757950,
		642012600,
		642267300,
		642522050,
		642776850,
		643031700,
		643286600,
		643541550,
		643796550,
		644051600,
		644306700,
		644561850,
		644817050,
		645072300,
		645327600,
		645582950,
		645838350,
		646093800,
		646349300,
		646604850,
		646860450,
		647116100,
		647371800,
		647627550,
		647883350,
		648139200,
		648395100,
		648651050,
		648907050,
		649163100,
		649419200,
		649675350,
		649931550,
		650187800,
		650444100,
		650700450,
		650956850,
		651213300,
		651469800,
		651726350,
		651982950,
		652239600,
		652496300,
		652753050,
		653009850,
		653266700,
		653523600,
		653780550,
		654037550,
		654294600,
		654551700,
		654808850,
		655066050,
		655323300,
		655580600,
		655837950,
		656095350,
		656352800,
		656610300,
		656867850,
		657125450,
		657383100,
		657640800,
		657898550,
		658156350,
		658414200,
		658672100,
		658930050,
		659188050,
		659446100,
		659704200,
		659962350,
		660220550,
		660478800,
		660737100,
		660995450,
		661253850,
		661512300,
		661770800,
		662029350,
		662287950,
		662546600,
		662805300,
		663064050,
		663322850,
		663581700,
		663840600,
		664099550,
		664358550,
		664617600,
		664876700,
		665135850,
		665395050,
		665654300,
		665913600,
		666172950,
		666432350,
		666691800,
		666951300,
		667210850,
		667470450,
		667730100,
		667989800,
		668249550,
		668509350,
		668769200,
		669029100,
		669289050,
		669549050,
		669809100,
		670069200,
		670329350,
		670589550,
		670849800,
		671110100,
		671370450,
		671630850,
		671891300,
		672151800,
		672412350,
		672672950,
		672933600,
		673194300,
		673455050,
		673715850,
		673976700,
		674237600,
		674498550,
		674759550,
		675020600,
		675281700,
		675542850,
		675804050,
		676065300,
		676326600,
		676587950,
		676849350,
		677110800,
		677372300,
		677633850,
		677895450,
		678157100,
		678418800,
		678680550,
		678942350,
		679204200,
		679466100,
		679728050,
		679990050,
		680252100,
		680514200,
		680776350,
		681038550,
		681300800,
		681563100,
		681825450,
		682087850,
		682350300,
		682612800,
		682875350,
		683137950,
		683400600,
		683663300,
		683926050,
		684188850,
		684451700,
		684714600,
		684977550,
		685240550,
		685503600,
		685766700,
		686029850,
		686293050,
		686556300,
		686819600,
		687082950,
		687346350,
		687609800,
		687873300,
		688136850,
		688400450,
		688664100,
		688927800,
		689191550,
		689455350,
		689719200,
		689983100,
		690247050,
		690511050,
		690775100,
		691039200,
		691303350,
		691567550,
		691831800,
		692096100,
		692360450,
		692624850,
		692889300,
		693153800,
		693418350,
		693682950,
		693947600,
		694212300,
		694477050,
		694741850,
		695006700,
		695271600,
		695536550,
		695801550,
		696066600,
		696331700,
		696596850,
		696862050,
		697127300,
		697392600,
		697657950,
		697923350,
		698188800,
		698454300,
		698719850,
		698985450,
		699251100,
		699516800,
		699782550,
		700048350,
		700314200,
		700580100,
		700846050,
		701112050,
		701378100,
		701644200,
		701910350,
		702176550,
		702442800,
		702709100,
		702975450,
		703241850,
		703508300,
		703774800,
		704041350,
		704307950,
		704574600,
		704841300,
		705108050,
		705374850,
		705641700,
		705908600,
		706175550,
		706442550,
		706709600,
		706976700,
		707243850,
		707511050,
		707778300,
		708045600,
		708312950,
		708580350,
		708847800,
		709115300,
		709382850,
		709650450,
		709918100,
		710185800,
		710453550,
		710721350,
		710989200,
		711257100,
		711525050,
		711793050,
		712061100,
		712329200,
		712597350,
		712865550,
		713133800,
		713402100,
		713670450,
		713938850,
		714207300,
		714475800,
		714744350,
		715012950,
		715281600,
		715550300,
		715819050,
		716087850,
		716356700,
		716625600,
		716894550,
		717163550,
		717432600,
		717701700,
		717970850,
		718240050,
		718509300,
		718778600,
		719047950,
		719317350,
		719586800,
		719856300,
		720125850,
		720395450,
		720665100,
		720934800,
		721204550,
		721474350,
		721744200,
		722014100,
		722284050,
		722554050,
		722824100,
		723094200,
		723364350,
		723634550,
		723904800,
		724175100,
		724445450,
		724715850,
		724986300,
		725256800,
		725527350,
		725797950,
		726068600,
		726339300,
		726610050,
		726880850,
		727151700,
		727422600,
		727693550,
		727964550,
		728235600,
		728506700,
		728777850,
		729049050,
		729320300,
		729591600,
		729862950,
		730134350,
		730405800,
		730677300,
		730948850,
		731220450,
		731492100,
		731763800,
		732035550,
		732307350,
		732579200,
		732851100,
		733123050,
		733395050,
		733667100,
		733939200,
		734211350,
		734483550,
		734755800,
		735028100,
		735300450,
		735572850,
		735845300,
		736117800,
		736390350,
		736662950,
		736935600,
		737208300,
		737481050,
		737753850,
		738026700,
		738299600,
		738572550,
		738845550,
		739118600,
		739391700,
		739664850,
		739938050,
		740211300,
		740484600,
		740757950,
		741031350,
		741304800,
		741578300,
		741851850,
		742125450,
		742399100,
		742672800,
		742946550,
		743220350,
		743494200,
		743768100,
		744042050,
		744316050,
		744590100,
		744864200,
		745138350,
		745412550,
		745686800,
		745961100,
		746235450,
		746509850,
		746784300,
		747058800,
		747333350,
		747607950,
		747882600,
		748157300,
		748432050,
		748706850,
		748981700,
		749256600,
		749531550,
		749806550,
		750081600,
		750356700,
		750631850,
		750907050,
		751182300,
		751457600,
		751732950,
		752008350,
		752283800,
		752559300,
		752834850,
		753110450,
		753386100,
		753661800,
		753937550,
		754213350,
		754489200,
		754765100,
		755041050,
		755317050,
		755593100,
		755869200,
		756145350,
		756421550,
		756697800,
		756974100,
		757250450,
		757526850,
		757803300,
		758079800,
		758356350,
		758632950,
		758909600,
		759186300,
		759463050,
		759739850,
		760016700,
		760293600,
		760570550,
		760847550,
		761124600,
		761401700,
		761678850,
		761956050,
		762233300,
		762510600,
		762787950,
		763065350,
		763342800,
		763620300,
		763897850,
		764175450,
		764453100,
		764730800,
		765008550,
		765286350,
		765564200,
		765842100,
		766120050,
		766398050,
		766676100,
		766954200,
		767232350,
		767510550,
		767788800,
		768067100,
		768345450,
		768623850,
		768902300,
		769180800,
		769459350,
		769737950,
		770016600,
		770295300,
		770574050,
		770852850,
		771131700,
		771410600,
		771689550,
		771968550,
		772247600,
		772526700,
		772805850,
		773085050,
		773364300,
		773643600,
		773922950,
		774202350,
		774481800,
		774761300,
		775040850,
		775320450,
		775600100,
		775879800,
		776159550,
		776439350,
		776719200,
		776999100,
		777279050,
		777559050,
		777839100,
		778119200,
		778399350,
		778679550,
		778959800,
		779240100,
		779520450,
		779800850,
		780081300,
		780361800,
		780642350,
		780922950,
		781203600,
		781484300,
		781765050,
		782045850,
		782326700,
		782607600,
		782888550,
		783169550,
		783450600,
		783731700,
		784012850,
		784294050,
		784575300,
		784856600,
		785137950,
		785419350,
		785700800,
		785982300,
		786263850,
		786545450,
		786827100,
		787108800,
		787390550,
		787672350,
		787954200,
		788236100,
		788518050,
		788800050,
		789082100,
		789364200,
		789646350,
		789928550,
		790210800,
		790493100,
		790775450,
		791057850,
		791340300,
		791622800,
		791905350,
		792187950,
		792470600,
		792753300,
		793036050,
		793318850,
		793601700,
		793884600,
		794167550,
		794450550,
		794733600,
		795016700,
		795299850,
		795583050,
		795866300,
		796149600,
		796432950,
		796716350,
		796999800,
		797283300,
		797566850,
		797850450,
		798134100,
		798417800,
		798701550,
		798985350,
		799269200,
		799553100,
		799837050,
		800121050,
		800405100,
		800689200,
		800973350,
		801257550,
		801541800,
		801826100,
		802110450,
		802394850,
		802679300,
		802963800,
		803248350,
		803532950,
		803817600,
		804102300,
		804387050,
		804671850,
		804956700,
		805241600,
		805526550,
		805811550,
		806096600,
		806381700,
		806666850,
		806952050,
		807237300,
		807522600,
		807807950,
		808093350,
		808378800,
		808664300,
		808949850,
		809235450,
		809521100,
		809806800,
		810092550,
		810378350,
		810664200,
		810950100,
		811236050,
		811522050,
		811808100,
		812094200,
		812380350,
		812666550,
		812952800,
		813239100,
		813525450,
		813811850,
		814098300,
		814384800,
		814671350,
		814957950,
		815244600,
		815531300,
		815818050,
		816104850,
		816391700,
		816678600,
		816965550,
		817252550,
		817539600,
		817826700,
		818113850,
		818401050,
		818688300,
		818975600,
		819262950,
		819550350,
		819837800,
		820125300,
		820412850,
		820700450,
		820988100,
		821275800,
		821563550,
		821851350,
		822139200,
		822427100,
		822715050,
		823003050,
		823291100,
		823579200,
		823867350,
		824155550,
		824443800,
		824732100,
		825020450,
		825308850,
		825597300,
		825885800,
		826174350,
		826462950,
		826751600,
		827040300,
		827329050,
		827617850,
		827906700,
		828195600,
		828484550,
		828773550,
		829062600,
		829351700,
		829640850,
		829930050,
		830219300,
		830508600,
		830797950,
		831087350,
		831376800,
		831666300,
		831955850,
		832245450,
		832535100,
		832824800,
		833114550,
		833404350,
		833694200,
		833984100,
		834274050,
		834564050,
		834854100,
		835144200,
		835434350,
		835724550,
		836014800,
		836305100,
		836595450,
		836885850,
		837176300,
		837466800,
		837757350,
		838047950,
		838338600,
		838629300,
		838920050,
		839210850,
		839501700,
		839792600,
		840083550,
		840374550,
		840665600,
		840956700,
		841247850,
		841539050,
		841830300,
		842121600,
		842412950,
		842704350,
		842995800,
		843287300,
		843578850,
		843870450,
		844162100,
		844453800,
		844745550,
		845037350,
		845329200,
		845621100,
		845913050,
		846205050,
		846497100,
		846789200,
		847081350,
		847373550,
		847665800,
		847958100,
		848250450,
		848542850,
		848835300,
		849127800,
		849420350,
		849712950,
		850005600,
		850298300,
		850591050,
		850883850,
		851176700,
		851469600,
		851762550,
		852055550,
		852348600,
		852641700,
		852934850,
		853228050,
		853521300,
		853814600,
		854107950,
		854401350,
		854694800,
		854988300,
		855281850,
		855575450,
		855869100,
		856162800,
		856456550,
		856750350,
		857044200,
		857338100,
		857632050,
		857926050,
		858220100,
		858514200,
		858808350,
		859102550,
		859396800,
		859691100,
		859985450,
		860279850,
		860574300,
		860868800,
		861163350,
		861457950,
		861752600,
		862047300,
		862342050,
		862636850,
		862931700,
		863226600,
		863521550,
		863816550,
		864111600,
		864406700,
		864701850,
		864997050,
		865292300,
		865587600,
		865882950,
		866178350,
		866473800,
		866769300,
		867064850,
		867360450,
		867656100,
		867951800,
		868247550,
		868543350,
		868839200,
		869135100,
		869431050,
		869727050,
		870023100,
		870319200,
		870615350,
		870911550,
		871207800,
		871504100,
		871800450,
		872096850,
		872393300,
		872689800,
		872986350,
		873282950,
		873579600,
		873876300,
		874173050,
		874469850,
		874766700,
		875063600,
		875360550,
		875657550,
		875954600,
		876251700,
		876548850,
		876846050,
		877143300,
		877440600,
		877737950,
		878035350,
		878332800,
		878630300,
		878927850,
		879225450,
		879523100,
		879820800,
		880118550,
		880416350,
		880714200,
		881012100,
		881310050,
		881608050,
		881906100,
		882204200,
		882502350,
		882800550,
		883098800,
		883397100,
		883695450,
		883993850,
		884292300,
		884590800,
		884889350,
		885187950,
		885486600,
		885785300,
		886084050,
		886382850,
		886681700,
		886980600,
		887279550,
		887578550,
		887877600,
		888176700,
		888475850,
		888775050,
		889074300,
		889373600,
		889672950,
		889972350,
		890271800,
		890571300,
		890870850,
		891170450,
		891470100,
		891769800,
		892069550,
		892369350,
		892669200,
		892969100,
		893269050,
		893569050,
		893869100,
		894169200,
		894469350,
		894769550,
		895069800,
		895370100,
		895670450,
		895970850,
		896271300,
		896571800,
		896872350,
		897172950,
		897473600,
		897774300,
		898075050,
		898375850,
		898676700,
		898977600,
		899278550,
		899579550,
		899880600,
		900181700,
		900482850,
		900784050,
		901085300,
		901386600,
		901687950,
		901989350,
		902290800,
		902592300,
		902893850,
		903195450,
		903497100,
		903798800,
		904100550,
		904402350,
		904704200,
		905006100,
		905308050,
		905610050,
		905912100,
		906214200,
		906516350,
		906818550,
		907120800,
		907423100,
		907725450,
		908027850,
		908330300,
		908632800,
		908935350,
		909237950,
		909540600,
		909843300,
		910146050,
		910448850,
		910751700,
		911054600,
		911357550,
		911660550,
		911963600,
		912266700,
		912569850,
		912873050,
		913176300,
		913479600,
		913782950,
		914086350,
		914389800,
		914693300,
		914996850,
		915300450,
		915604100,
		915907800,
		916211550,
		916515350,
		916819200,
		917123100,
		917427050,
		917731050,
		918035100,
		918339200,
		918643350,
		918947550,
		919251800,
		919556100,
		919860450,
		920164850,
		920469300,
		920773800,
		921078350,
		921382950,
		921687600,
		921992300,
		922297050,
		922601850,
		922906700,
		923211600,
		923516550,
		923821550,
		924126600,
		924431700,
		924736850,
		925042050,
		925347300,
		925652600,
		925957950,
		926263350,
		926568800,
		926874300,
		927179850,
		927485450,
		927791100,
		928096800,
		928402550,
		928708350,
		929014200,
		929320100,
		929626050,
		929932050,
		930238100,
		930544200,
		930850350,
		931156550,
		931462800,
		931769100,
		932075450,
		932381850,
		932688300,
		932994800,
		933301350,
		933607950,
		933914600,
		934221300,
		934528050,
		934834850,
		935141700,
		935448600,
		935755550,
		936062550,
		936369600,
		936676700,
		936983850,
		937291050,
		937598300,
		937905600,
		938212950,
		938520350,
		938827800,
		939135300,
		939442850,
		939750450,
		940058100,
		940365800,
		940673550,
		940981350,
		941289200,
		941597100,
		941905050,
		942213050,
		942521100,
		942829200,
		943137350,
		943445550,
		943753800,
		944062100,
		944370450,
		944678850,
		944987300,
		945295800,
		945604350,
		945912950,
		946221600,
		946530300,
		946839050,
		947147850,
		947456700,
		947765600,
		948074550,
		948383550,
		948692600,
		949001700,
		949310850,
		949620050,
		949929300,
		950238600,
		950547950,
		950857350,
		951166800,
		951476300,
		951785850,
		952095450,
		952405100,
		952714800,
		953024550,
		953334350,
		953644200,
		953954100,
		954264050,
		954574050,
		954884100,
		955194200,
		955504350,
		955814550,
		956124800,
		956435100,
		956745450,
		957055850,
		957366300,
		957676800,
		957987350,
		958297950,
		958608600,
		958919300,
		959230050,
		959540850,
		959851700,
		960162600,
		960473550,
		960784550,
		961095600,
		961406700,
		961717850,
		962029050,
		962340300,
		962651600,
		962962950,
		963274350,
		963585800,
		963897300,
		964208850,
		964520450,
		964832100,
		965143800,
		965455550,
		965767350,
		966079200,
		966391100,
		966703050,
		967015050,
		967327100,
		967639200,
		967951350,
		968263550,
		968575800,
		968888100,
		969200450,
		969512850,
		969825300,
		970137800,
		970450350,
		970762950,
		971075600,
		971388300,
		971701050,
		972013850,
		972326700,
		972639600,
		972952550,
		973265550,
		973578600,
		973891700,
		974204850,
		974518050,
		974831300,
		975144600,
		975457950,
		975771350,
		976084800,
		976398300,
		976711850,
		977025450,
		977339100,
		977652800,
		977966550,
		978280350,
		978594200,
		978908100,
		979222050,
		979536050,
		979850100,
		980164200,
		980478350,
		980792550,
		981106800,
		981421100,
		981735450,
		982049850,
		982364300,
		982678800,
		982993350,
		983307950,
		983622600,
		983937300,
		984252050,
		984566850,
		984881700,
		985196600,
		985511550,
		985826550,
		986141600,
		986456700,
		986771850,
		987087050,
		987402300,
		987717600,
		988032950,
		988348350,
		988663800,
		988979300,
		989294850,
		989610450,
		989926100,
		990241800,
		990557550,
		990873350,
		991189200,
		991505100,
		991821050,
		992137050,
		992453100,
		992769200,
		993085350,
		993401550,
		993717800,
		994034100,
		994350450,
		994666850,
		994983300,
		995299800,
		995616350,
		995932950,
		996249600,
		996566300,
		996883050,
		997199850,
		997516700,
		997833600,
		998150550,
		998467550,
		998784600,
		999101700,
		999418850,
		999736050,
		1000053300,
		1000370600,
		1000687950,
		1001005350,
		1001322800,
		1001640300,
		1001957850,
		1002275450,
		1002593100,
		1002910800,
		1003228550,
		1003546350,
		1003864200,
		1004182100,
		1004500050,
		1004818050,
		1005136100,
		1005454200,
		1005772350,
		1006090550,
		1006408800,
		1006727100,
		1007045450,
		1007363850,
		1007682300,
		1008000800,
		1008319350,
		1008637950,
		1008956600,
		1009275300,
		1009594050,
		1009912850,
		1010231700,
		1010550600,
		1010869550,
		1011188550,
		1011507600,
		1011826700,
		1012145850,
		1012465050,
		1012784300,
		1013103600,
		1013422950,
		1013742350,
		1014061800,
		1014381300,
		1014700850,
		1015020450,
		1015340100,
		1015659800,
		1015979550,
		1016299350,
		1016619200,
		1016939100,
		1017259050,
		1017579050,
		1017899100,
		1018219200,
		1018539350,
		1018859550,
		1019179800,
		1019500100,
		1019820450,
		1020140850,
		1020461300,
		1020781800,
		1021102350,
		1021422950,
		1021743600,
		1022064300,
		1022385050,
		1022705850,
		1023026700,
		1023347600,
		1023668550,
		1023989550,
		1024310600,
		1024631700,
		1024952850,
		1025274050,
		1025595300,
		1025916600,
		1026237950,
		1026559350,
		1026880800,
		1027202300,
		1027523850,
		1027845450,
		1028167100,
		1028488800,
		1028810550,
		1029132350,
		1029454200,
		1029776100,
		1030098050,
		1030420050,
		1030742100,
		1031064200,
		1031386350,
		1031708550,
		1032030800,
		1032353100,
		1032675450,
		1032997850,
		1033320300,
		1033642800,
		1033965350,
		1034287950,
		1034610600,
		1034933300,
		1035256050,
		1035578850,
		1035901700,
		1036224600,
		1036547550,
		1036870550,
		1037193600,
		1037516700,
		1037839850,
		1038163050,
		1038486300,
		1038809600,
		1039132950,
		1039456350,
		1039779800,
		1040103300,
		1040426850,
		1040750450,
		1041074100,
		1041397800,
		1041721550,
		1042045350,
		1042369200,
		1042693100,
		1043017050,
		1043341050,
		1043665100,
		1043989200,
		1044313350,
		1044637550,
		1044961800,
		1045286100,
		1045610450,
		1045934850,
		1046259300,
		1046583800,
		1046908350,
		1047232950,
		1047557600,
		1047882300,
		1048207050,
		1048531850,
		1048856700,
		1049181600,
		1049506550,
		1049831550,
		1050156600,
		1050481700,
		1050806850,
		1051132050,
		1051457300,
		1051782600,
		1052107950,
		1052433350,
		1052758800,
		1053084300,
		1053409850,
		1053735450,
		1054061100,
		1054386800,
		1054712550,
		1055038350,
		1055364200,
		1055690100,
		1056016050,
		1056342050,
		1056668100,
		1056994200,
		1057320350,
		1057646550,
		1057972800,
		1058299100,
		1058625450,
		1058951850,
		1059278300,
		1059604800,
		1059931350,
		1060257950,
		1060584600,
		1060911300,
		1061238050,
		1061564850,
		1061891700,
		1062218600,
		1062545550,
		1062872550,
		1063199600,
		1063526700,
		1063853850,
		1064181050,
		1064508300,
		1064835600,
		1065162950,
		1065490350,
		1065817800,
		1066145300,
		1066472850,
		1066800450,
		1067128100,
		1067455800,
		1067783550,
		1068111350,
		1068439200,
		1068767100,
		1069095050,
		1069423050,
		1069751100,
		1070079200,
		1070407350,
		1070735550,
		1071063800,
		1071392100,
		1071720450,
		1072048850,
		1072377300,
		1072705800,
		1073034350,
		1073362950,
		1073691600,
		1074020300,
		1074349050,
		1074677850,
		1075006700,
		1075335600,
		1075664550,
		1075993550,
		1076322600,
		1076651700,
		1076980850,
		1077310050,
		1077639300,
		1077968600,
		1078297950,
		1078627350,
		1078956800,
		1079286300,
		1079615850,
		1079945450,
		1080275100,
		1080604800,
		1080934550,
		1081264350,
		1081594200,
		1081924100,
		1082254050,
		1082584050,
		1082914100,
		1083244200,
		1083574350,
		1083904550,
		1084234800,
		1084565100,
		1084895450,
		1085225850,
		1085556300,
		1085886800,
		1086217350,
		1086547950,
		1086878600,
		1087209300,
		1087540050,
		1087870850,
		1088201700,
		1088532600,
		1088863550,
		1089194550,
		1089525600,
		1089856700,
		1090187850,
		1090519050,
		1090850300,
		1091181600,
		1091512950,
		1091844350,
		1092175800,
		1092507300,
		1092838850,
		1093170450,
		1093502100,
		1093833800,
		1094165550,
		1094497350,
		1094829200,
		1095161100,
		1095493050,
		1095825050,
		1096157100,
		1096489200,
		1096821350,
		1097153550,
		1097485800,
		1097818100,
		1098150450,
		1098482850,
		1098815300,
		1099147800,
		1099480350,
		1099812950,
		1100145600,
		1100478300,
		1100811050,
		1101143850,
		1101476700,
		1101809600,
		1102142550,
		1102475550,
		1102808600,
		1103141700,
		1103474850,
		1103808050,
		1104141300,
		1104474600,
		1104807950,
		1105141350,
		1105474800,
		1105808300,
		1106141850,
		1106475450,
		1106809100,
		1107142800,
		1107476550,
		1107810350,
		1108144200,
		1108478100,
		1108812050,
		1109146050,
		1109480100,
		1109814200,
		1110148350,
		1110482550,
		1110816800,
		1111151100,
		1111485450,
		1111819850,
		1112154300,
		1112488800,
		1112823350,
		1113157950,
		1113492600,
		1113827300,
		1114162050,
		1114496850,
		1114831700,
		1115166600,
		1115501550,
		1115836550,
		1116171600,
		1116506700,
		1116841850,
		1117177050,
		1117512300,
		1117847600,
		1118182950,
		1118518350,
		1118853800,
		1119189300,
		1119524850,
		1119860450,
		1120196100,
		1120531800,
		1120867550,
		1121203350,
		1121539200,
		1121875100,
		1122211050,
		1122547050,
		1122883100,
		1123219200,
		1123555350,
		1123891550,
		1124227800,
		1124564100,
		1124900450,
		1125236850,
		1125573300,
		1125909800,
		1126246350,
		1126582950,
		1126919600,
		1127256300,
		1127593050,
		1127929850,
		1128266700,
		1128603600,
		1128940550,
		1129277550,
		1129614600,
		1129951700,
		1130288850,
		1130626050,
		1130963300,
		1131300600,
		1131637950,
		1131975350,
		1132312800,
		1132650300,
		1132987850,
		1133325450,
		1133663100,
		1134000800,
		1134338550,
		1134676350,
		1135014200,
		1135352100,
		1135690050,
		1136028050,
		1136366100,
		1136704200,
		1137042350,
		1137380550,
		1137718800,
		1138057100,
		1138395450,
		1138733850,
		1139072300,
		1139410800,
		1139749350,
		1140087950,
		1140426600,
		1140765300,
		1141104050,
		1141442850,
		1141781700,
		1142120600,
		1142459550,
		1142798550,
		1143137600,
		1143476700,
		1143815850,
		1144155050,
		1144494300,
		1144833600,
		1145172950,
		1145512350,
		1145851800,
		1146191300,
		1146530850,
		1146870450,
		1147210100,
		1147549800,
		1147889550,
		1148229350,
		1148569200,
		1148909100,
		1149249050,
		1149589050,
		1149929100,
		1150269200,
		1150609350,
		1150949550,
		1151289800,
		1151630100,
		1151970450,
		1152310850,
		1152651300,
		1152991800,
		1153332350,
		1153672950,
		1154013600,
		1154354300,
		1154695050,
		1155035850,
		1155376700,
		1155717600,
		1156058550,
		1156399550,
		1156740600,
		1157081700,
		1157422850,
		1157764050,
		1158105300,
		1158446600,
		1158787950,
		1159129350,
		1159470800,
		1159812300,
		1160153850,
		1160495450,
		1160837100,
		1161178800,
		1161520550,
		1161862350,
		1162204200,
		1162546100,
		1162888050,
		1163230050,
		1163572100,
		1163914200,
		1164256350,
		1164598550,
		1164940800,
		1165283100,
		1165625450,
		1165967850,
		1166310300,
		1166652800,
		1166995350,
		1167337950,
		1167680600,
		1168023300,
		1168366050,
		1168708850,
		1169051700,
		1169394600,
		1169737550,
		1170080550,
		1170423600,
		1170766700,
		1171109850,
		1171453050,
		1171796300,
		1172139600,
		1172482950,
		1172826350,
		1173169800,
		1173513300,
		1173856850,
		1174200450,
		1174544100,
		1174887800,
		1175231550,
		1175575350,
		1175919200,
		1176263100,
		1176607050,
		1176951050,
		1177295100,
		1177639200,
		1177983350,
		1178327550,
		1178671800,
		1179016100,
		1179360450,
		1179704850,
		1180049300,
		1180393800,
		1180738350,
		1181082950,
		1181427600,
		1181772300,
		1182117050,
		1182461850,
		1182806700,
		1183151600,
		1183496550,
		1183841550,
		1184186600,
		1184531700,
		1184876850,
		1185222050,
		1185567300,
		1185912600,
		1186257950,
		1186603350,
		1186948800,
		1187294300,
		1187639850,
		1187985450,
		1188331100,
		1188676800,
		1189022550,
		1189368350,
		1189714200,
		1190060100,
		1190406050,
		1190752050,
		1191098100,
		1191444200,
		1191790350,
		1192136550,
		1192482800,
		1192829100,
		1193175450,
		1193521850,
		1193868300,
		1194214800,
		1194561350,
		1194907950,
		1195254600,
		1195601300,
		1195948050,
		1196294850,
		1196641700,
		1196988600,
		1197335550,
		1197682550,
		1198029600,
		1198376700,
		1198723850,
		1199071050,
		1199418300,
		1199765600,
		1200112950,
		1200460350,
		1200807800,
		1201155300,
		1201502850,
		1201850450,
		1202198100,
		1202545800,
		1202893550,
		1203241350,
		1203589200,
		1203937100,
		1204285050,
		1204633050,
		1204981100,
		1205329200,
		1205677350,
		1206025550,
		1206373800,
		1206722100,
		1207070450,
		1207418850,
		1207767300,
		1208115800,
		1208464350,
		1208812950,
		1209161600,
		1209510300,
		1209859050,
		1210207850,
		1210556700,
		1210905600,
		1211254550,
		1211603550,
		1211952600,
		1212301700,
		1212650850,
		1213000050,
		1213349300,
		1213698600,
		1214047950,
		1214397350,
		1214746800,
		1215096300,
		1215445850,
		1215795450,
		1216145100,
		1216494800,
		1216844550,
		1217194350,
		1217544200,
		1217894100,
		1218244050,
		1218594050,
		1218944100,
		1219294200,
		1219644350,
		1219994550,
		1220344800,
		1220695100,
		1221045450,
		1221395850,
		1221746300,
		1222096800,
		1222447350,
		1222797950,
		1223148600,
		1223499300,
		1223850050,
		1224200850,
		1224551700,
		1224902600,
		1225253550,
		1225604550,
		1225955600,
		1226306700,
		1226657850,
		1227009050,
		1227360300,
		1227711600,
		1228062950,
		1228414350,
		1228765800,
		1229117300,
		1229468850,
		1229820450,
		1230172100,
		1230523800,
		1230875550,
		1231227350,
		1231579200,
		1231931100,
		1232283050,
		1232635050,
		1232987100,
		1233339200,
		1233691350,
		1234043550,
		1234395800,
		1234748100,
		1235100450,
		1235452850,
		1235805300,
		1236157800,
		1236510350,
		1236862950,
		1237215600,
		1237568300,
		1237921050,
		1238273850,
		1238626700,
		1238979600,
		1239332550,
		1239685550,
		1240038600,
		1240391700,
		1240744850,
		1241098050,
		1241451300,
		1241804600,
		1242157950,
		1242511350,
		1242864800,
		1243218300,
		1243571850,
		1243925450,
		1244279100,
		1244632800,
		1244986550,
		1245340350,
		1245694200,
		1246048100,
		1246402050,
		1246756050,
		1247110100,
		1247464200,
		1247818350,
		1248172550,
		1248526800,
		1248881100,
		1249235450,
		1249589850,
		1249944300,
		1250298800,
		1250653350,
		1251007950,
		1251362600,
		1251717300,
		1252072050,
		1252426850,
		1252781700,
		1253136600,
		1253491550,
		1253846550,
		1254201600,
		1254556700,
		1254911850,
		1255267050,
		1255622300,
		1255977600,
		1256332950,
		1256688350,
		1257043800,
		1257399300,
		1257754850,
		1258110450,
		1258466100,
		1258821800,
		1259177550,
		1259533350,
		1259889200,
		1260245100,
		1260601050,
		1260957050,
		1261313100,
		1261669200,
		1262025350,
		1262381550,
		1262737800,
		1263094100,
		1263450450,
		1263806850,
		1264163300,
		1264519800,
		1264876350,
		1265232950,
		1265589600,
		1265946300,
		1266303050,
		1266659850,
		1267016700,
		1267373600,
		1267730550,
		1268087550,
		1268444600,
		1268801700,
		1269158850,
		1269516050,
		1269873300,
		1270230600,
		1270587950,
		1270945350,
		1271302800,
		1271660300,
		1272017850,
		1272375450,
		1272733100,
		1273090800,
		1273448550,
		1273806350,
		1274164200,
		1274522100,
		1274880050,
		1275238050,
		1275596100,
		1275954200,
		1276312350,
		1276670550,
		1277028800,
		1277387100,
		1277745450,
		1278103850,
		1278462300,
		1278820800,
		1279179350,
		1279537950,
		1279896600,
		1280255300,
		1280614050,
		1280972850,
		1281331700,
		1281690600,
		1282049550,
		1282408550,
		1282767600,
		1283126700,
		1283485850,
		1283845050,
		1284204300,
		1284563600,
		1284922950,
		1285282350,
		1285641800,
		1286001300,
		1286360850,
		1286720450,
		1287080100,
		1287439800,
		1287799550,
		1288159350,
		1288519200,
		1288879100,
		1289239050,
		1289599050,
		1289959100,
		1290319200,
		1290679350,
		1291039550,
		1291399800,
		1291760100,
		1292120450,
		1292480850,
		1292841300,
		1293201800,
		1293562350,
		1293922950,
		1294283600,
		1294644300,
		1295005050,
		1295365850,
		1295726700,
		1296087600,
		1296448550,
		1296809550,
		1297170600,
		1297531700,
		1297892850,
		1298254050,
		1298615300,
		1298976600,
		1299337950,
		1299699350,
		1300060800,
		1300422300,
		1300783850,
		1301145450,
		1301507100,
		1301868800,
		1302230550,
		1302592350,
		1302954200,
		1303316100,
		1303678050,
		1304040050,
		1304402100,
		1304764200,
		1305126350,
		1305488550,
		1305850800,
		1306213100,
		1306575450,
		1306937850,
		1307300300,
		1307662800,
		1308025350,
		1308387950,
		1308750600,
		1309113300,
		1309476050,
		1309838850,
		1310201700,
		1310564600,
		1310927550,
		1311290550,
		1311653600,
		1312016700,
		1312379850,
		1312743050,
		1313106300,
		1313469600,
		1313832950,
		1314196350,
		1314559800,
		1314923300,
		1315286850,
		1315650450,
		1316014100,
		1316377800,
		1316741550,
		1317105350,
		1317469200,
		1317833100,
		1318197050,
		1318561050,
		1318925100,
		1319289200,
		1319653350,
		1320017550,
		1320381800,
		1320746100,
		1321110450,
		1321474850,
		1321839300,
		1322203800,
		1322568350,
		1322932950,
		1323297600,
		1323662300,
		1324027050,
		1324391850,
		1324756700,
		1325121600,
		1325486550,
		1325851550,
		1326216600,
		1326581700,
		1326946850,
		1327312050,
		1327677300,
		1328042600,
		1328407950,
		1328773350,
		1329138800,
		1329504300,
		1329869850,
		1330235450,
		1330601100,
		1330966800,
		1331332550,
		1331698350,
		1332064200,
		1332430100,
		1332796050,
		1333162050,
		1333528100,
		1333894200,
		1334260350,
		1334626550,
		1334992800,
		1335359100,
		1335725450,
		1336091850,
		1336458300,
		1336824800,
		1337191350,
		1337557950,
		1337924600,
		1338291300,
		1338658050,
		1339024850,
		1339391700,
		1339758600,
		1340125550,
		1340492550,
		1340859600,
		1341226700,
		1341593850,
		1341961050,
		1342328300,
		1342695600,
		1343062950,
		1343430350,
		1343797800,
		1344165300,
		1344532850,
		1344900450,
		1345268100,
		1345635800,
		1346003550,
		1346371350,
		1346739200,
		1347107100,
		1347475050,
		1347843050,
		1348211100,
		1348579200,
		1348947350,
		1349315550,
		1349683800,
		1350052100,
		1350420450,
		1350788850,
		1351157300,
		1351525800,
		1351894350,
		1352262950,
		1352631600,
		1353000300,
		1353369050,
		1353737850,
		1354106700,
		1354475600,
		1354844550,
		1355213550,
		1355582600,
		1355951700,
		1356320850,
		1356690050,
		1357059300,
		1357428600,
		1357797950,
		1358167350,
		1358536800,
		1358906300,
		1359275850,
		1359645450,
		1360015100,
		1360384800,
		1360754550,
		1361124350,
		1361494200,
		1361864100,
		1362234050,
		1362604050,
		1362974100,
		1363344200,
		1363714350,
		1364084550,
		1364454800,
		1364825100,
		1365195450,
		1365565850,
		1365936300,
		1366306800,
		1366677350,
		1367047950,
		1367418600,
		1367789300,
		1368160050,
		1368530850,
		1368901700,
		1369272600,
		1369643550,
		1370014550,
		1370385600,
		1370756700,
		1371127850,
		1371499050,
		1371870300,
		1372241600,
		1372612950,
		1372984350,
		1373355800,
		1373727300,
		1374098850,
		1374470450,
		1374842100,
		1375213800,
		1375585550,
		1375957350,
		1376329200,
		1376701100,
		1377073050,
		1377445050,
		1377817100,
		1378189200,
		1378561350,
		1378933550,
		1379305800,
		1379678100,
		1380050450,
		1380422850,
		1380795300,
		1381167800,
		1381540350,
		1381912950,
		1382285600,
		1382658300,
		1383031050,
		1383403850,
		1383776700,
		1384149600,
		1384522550,
		1384895550,
		1385268600,
		1385641700,
		1386014850,
		1386388050,
		1386761300,
		1387134600,
		1387507950,
		1387881350,
		1388254800,
		1388628300,
		1389001850,
		1389375450,
		1389749100,
		1390122800,
		1390496550,
		1390870350,
		1391244200,
		1391618100,
		1391992050,
		1392366050,
		1392740100,
		1393114200,
		1393488350,
		1393862550,
		1394236800,
		1394611100,
		1394985450,
		1395359850,
		1395734300,
		1396108800,
		1396483350,
		1396857950,
		1397232600,
		1397607300,
		1397982050,
		1398356850,
		1398731700,
		1399106600,
		1399481550,
		1399856550,
		1400231600,
		1400606700,
		1400981850,
		1401357050,
		1401732300,
		1402107600,
		1402482950,
		1402858350,
		1403233800,
		1403609300,
		1403984850,
		1404360450,
		1404736100,
		1405111800,
		1405487550,
		1405863350,
		1406239200,
		1406615100,
		1406991050,
		1407367050,
		1407743100,
		1408119200,
		1408495350,
		1408871550,
		1409247800,
		1409624100,
		1410000450,
		1410376850,
		1410753300,
		1411129800,
		1411506350,
		1411882950,
		1412259600,
		1412636300,
		1413013050,
		1413389850,
		1413766700,
		1414143600,
		1414520550,
		1414897550,
		1415274600,
		1415651700,
		1416028850,
		1416406050,
		1416783300,
		1417160600,
		1417537950,
		1417915350,
		1418292800,
		1418670300,
		1419047850,
		1419425450,
		1419803100,
		1420180800,
		1420558550,
		1420936350,
		1421314200,
		1421692100,
		1422070050,
		1422448050,
		1422826100,
		1423204200,
		1423582350,
		1423960550,
		1424338800,
		1424717100,
		1425095450,
		1425473850,
		1425852300,
		1426230800,
		1426609350,
		1426987950,
		1427366600,
		1427745300,
		1428124050,
		1428502850,
		1428881700,
		1429260600,
		1429639550,
		1430018550,
		1430397600,
		1430776700,
		1431155850,
		1431535050,
		1431914300,
		1432293600,
		1432672950,
		1433052350,
		1433431800,
		1433811300,
		1434190850,
		1434570450,
		1434950100,
		1435329800,
		1435709550,
		1436089350,
		1436469200,
		1436849100,
		1437229050,
		1437609050,
		1437989100,
		1438369200,
		1438749350,
		1439129550,
		1439509800,
		1439890100,
		1440270450,
		1440650850,
		1441031300,
		1441411800,
		1441792350,
		1442172950,
		1442553600,
		1442934300,
		1443315050,
		1443695850,
		1444076700,
		1444457600,
		1444838550,
		1445219550,
		1445600600,
		1445981700,
		1446362850,
		1446744050,
		1447125300,
		1447506600,
		1447887950,
		1448269350,
		1448650800,
		1449032300,
		1449413850,
		1449795450,
		1450177100,
		1450558800,
		1450940550,
		1451322350,
		1451704200,
		1452086100,
		1452468050,
		1452850050,
		1453232100,
		1453614200,
		1453996350,
		1454378550,
		1454760800,
		1455143100,
		1455525450,
		1455907850,
		1456290300,
		1456672800,
		1457055350,
		1457437950,
		1457820600,
		1458203300,
		1458586050,
		1458968850,
		1459351700,
		1459734600,
		1460117550,
		1460500550,
		1460883600,
		1461266700,
		1461649850,
		1462033050,
		1462416300,
		1462799600,
		1463182950,
		1463566350,
		1463949800,
		1464333300,
		1464716850,
		1465100450,
		1465484100,
		1465867800,
		1466251550,
		1466635350,
		1467019200,
		1467403100,
		1467787050,
		1468171050,
		1468555100,
		1468939200,
		1469323350,
		1469707550,
		1470091800,
		1470476100,
		1470860450,
		1471244850,
		1471629300,
		1472013800,
		1472398350,
		1472782950,
		1473167600,
		1473552300,
		1473937050,
		1474321850,
		1474706700,
		1475091600,
		1475476550,
		1475861550,
		1476246600,
		1476631700,
		1477016850,
		1477402050,
		1477787300,
		1478172600,
		1478557950,
		1478943350,
		1479328800,
		1479714300,
		1480099850,
		1480485450,
		1480871100,
		1481256800,
		1481642550,
		1482028350,
		1482414200,
		1482800100,
		1483186050,
		1483572050,
		1483958100,
		1484344200,
		1484730350,
		1485116550,
		1485502800,
		1485889100,
		1486275450,
		1486661850,
		1487048300,
		1487434800,
		1487821350,
		1488207950,
		1488594600,
		1488981300,
		1489368050,
		1489754850,
		1490141700,
		1490528600,
		1490915550,
		1491302550,
		1491689600,
		1492076700,
		1492463850,
		1492851050,
		1493238300,
		1493625600,
		1494012950,
		1494400350,
		1494787800,
		1495175300,
		1495562850,
		1495950450,
		1496338100,
		1496725800,
		1497113550,
		1497501350,
		1497889200,
		1498277100,
		1498665050,
		1499053050,
		1499441100,
		1499829200,
		1500217350,
		1500605550,
		1500993800,
		1501382100,
		1501770450,
		1502158850,
		1502547300,
		1502935800,
		1503324350,
		1503712950,
		1504101600,
		1504490300,
		1504879050,
		1505267850,
		1505656700,
		1506045600,
		1506434550,
		1506823550,
		1507212600,
		1507601700,
		1507990850,
		1508380050,
		1508769300,
		1509158600,
		1509547950,
		1509937350,
		1510326800,
		1510716300,
		1511105850,
		1511495450,
		1511885100,
		1512274800,
		1512664550,
		1513054350,
		1513444200,
		1513834100,
		1514224050,
		1514614050,
		1515004100,
		1515394200,
		1515784350,
		1516174550,
		1516564800,
		1516955100,
		1517345450,
		1517735850,
		1518126300,
		1518516800,
		1518907350,
		1519297950,
		1519688600,
		1520079300,
		1520470050,
		1520860850,
		1521251700,
		1521642600,
		1522033550,
		1522424550,
		1522815600,
		1523206700,
		1523597850,
		1523989050,
		1524380300,
		1524771600,
		1525162950,
		1525554350,
		1525945800,
		1526337300,
		1526728850,
		1527120450,
		1527512100,
		1527903800,
		1528295550,
		1528687350,
		1529079200,
		1529471100,
		1529863050,
		1530255050,
		1530647100,
		1531039200,
		1531431350,
		1531823550,
		1532215800,
		1532608100,
		1533000450,
		1533392850,
		1533785300,
		1534177800,
		1534570350,
		1534962950,
		1535355600,
		1535748300,
		1536141050,
		1536533850,
		1536926700,
		1537319600,
		1537712550,
		1538105550,
		1538498600,
		1538891700,
		1539284850,
		1539678050,
		1540071300,
		1540464600,
		1540857950,
		1541251350,
		1541644800,
		1542038300,
		1542431850,
		1542825450,
		1543219100,
		1543612800,
		1544006550,
		1544400350,
		1544794200,
		1545188100,
		1545582050,
		1545976050,
		1546370100,
		1546764200,
		1547158350,
		1547552550,
		1547946800,
		1548341100,
		1548735450,
		1549129850,
		1549524300,
		1549918800,
		1550313350,
		1550707950,
		1551102600,
		1551497300,
		1551892050,
		1552286850,
		1552681700,
		1553076600,
		1553471550,
		1553866550,
		1554261600,
		1554656700,
		1555051850,
		1555447050,
		1555842300,
		1556237600,
		1556632950,
		1557028350,
		1557423800,
		1557819300,
		1558214850,
		1558610450,
		1559006100,
		1559401800,
		1559797550,
		1560193350,
		1560589200,
		1560985100,
		1561381050,
		1561777050,
		1562173100,
		1562569200,
		1562965350,
		1563361550,
		1563757800,
		1564154100,
		1564550450,
		1564946850,
		1565343300,
		1565739800,
		1566136350,
		1566532950,
		1566929600,
		1567326300,
		1567723050,
		1568119850,
		1568516700,
		1568913600,
		1569310550,
		1569707550,
		1570104600,
		1570501700,
		1570898850,
		1571296050,
		1571693300,
		1572090600,
		1572487950,
		1572885350,
		1573282800,
		1573680300,
		1574077850,
		1574475450,
		1574873100,
		1575270800,
		1575668550,
		1576066350,
		1576464200,
		1576862100,
		1577260050,
		1577658050,
		1578056100,
		1578454200,
		1578852350,
		1579250550,
		1579648800,
		1580047100,
		1580445450,
		1580843850,
		1581242300,
		1581640800,
		1582039350,
		1582437950,
		1582836600,
		1583235300,
		1583634050,
		1584032850,
		1584431700,
		1584830600,
		1585229550,
		1585628550,
		1586027600,
		1586426700,
		1586825850,
		1587225050,
		1587624300,
		1588023600,
		1588422950,
		1588822350,
		1589221800,
		1589621300,
		1590020850,
		1590420450,
		1590820100,
		1591219800,
		1591619550,
		1592019350,
		1592419200,
		1592819100,
		1593219050,
		1593619050,
		1594019100,
		1594419200,
		1594819350,
		1595219550,
		1595619800,
		1596020100,
		1596420450,
		1596820850,
		1597221300,
		1597621800,
		1598022350,
		1598422950,
		1598823600,
		1599224300,
		1599625050,
		1600025850,
		1600426700,
		1600827600,
		1601228550,
		1601629550,
		1602030600,
		1602431700,
		1602832850,
		1603234050,
		1603635300,
		1604036600,
		1604437950,
		1604839350,
		1605240800,
		1605642300,
		1606043850,
		1606445450,
		1606847100,
		1607248800,
		1607650550,
		1608052350,
		1608454200,
		1608856100,
		1609258050,
		1609660050,
		1610062100,
		1610464200,
		1610866350,
		1611268550,
		1611670800,
		1612073100,
		1612475450,
		1612877850,
		1613280300,
		1613682800,
		1614085350,
		1614487950,
		1614890600,
		1615293300,
		1615696050,
		1616098850,
		1616501700,
		1616904600,
		1617307550,
		1617710550,
		1618113600,
		1618516700,
		1618919850,
		1619323050,
		1619726300,
		1620129600,
		1620532950,
		1620936350,
		1621339800,
		1621743300,
		1622146850,
		1622550450,
		1622954100,
		1623357800,
		1623761550,
		1624165350,
		1624569200,
		1624973100,
		1625377050,
		1625781050,
		1626185100,
		1626589200,
		1626993350,
		1627397550,
		1627801800,
		1628206100,
		1628610450,
		1629014850,
		1629419300,
		1629823800,
		1630228350,
		1630632950,
		1631037600,
		1631442300,
		1631847050,
		1632251850,
		1632656700,
		1633061600,
		1633466550,
		1633871550,
		1634276600,
		1634681700,
		1635086850,
		1635492050,
		1635897300,
		1636302600,
		1636707950,
		1637113350,
		1637518800,
		1637924300,
		1638329850,
		1638735450,
		1639141100,
		1639546800,
		1639952550,
		1640358350,
		1640764200,
		1641170100,
		1641576050,
		1641982050,
		1642388100,
		1642794200,
		1643200350,
		1643606550,
		1644012800,
		1644419100,
		1644825450,
		1645231850,
		1645638300,
		1646044800,
		1646451350,
		1646857950,
		1647264600,
		1647671300,
		1648078050,
		1648484850,
		1648891700,
		1649298600,
		1649705550,
		1650112550,
		1650519600,
		1650926700,
		1651333850,
		1651741050,
		1652148300,
		1652555600,
		1652962950,
		1653370350,
		1653777800,
		1654185300,
		1654592850,
		1655000450,
		1655408100,
		1655815800,
		1656223550,
		1656631350,
		1657039200,
		1657447100,
		1657855050,
		1658263050,
		1658671100,
		1659079200,
		1659487350,
		1659895550,
		1660303800,
		1660712100,
		1661120450,
		1661528850,
		1661937300,
		1662345800,
		1662754350,
		1663162950,
		1663571600,
		1663980300,
		1664389050,
		1664797850,
		1665206700,
		1665615600,
		1666024550,
		1666433550,
		1666842600,
		1667251700,
		1667660850,
		1668070050,
		1668479300,
		1668888600,
		1669297950,
		1669707350,
		1670116800,
		1670526300,
		1670935850,
		1671345450,
		1671755100,
		1672164800,
		1672574550,
		1672984350,
		1673394200,
		1673804100,
		1674214050,
		1674624050,
		1675034100,
		1675444200,
		1675854350,
		1676264550,
		1676674800,
		1677085100,
		1677495450,
		1677905850,
		1678316300,
		1678726800,
		1679137350,
		1679547950,
		1679958600,
		1680369300,
		1680780050,
		1681190850,
		1681601700,
		1682012600,
		1682423550,
		1682834550,
		1683245600,
		1683656700,
		1684067850,
		1684479050,
		1684890300,
		1685301600,
		1685712950,
		1686124350,
		1686535800,
		1686947300,
		1687358850,
		1687770450,
		1688182100,
		1688593800,
		1689005550,
		1689417350,
		1689829200,
		1690241100,
		1690653050,
		1691065050,
		1691477100,
		1691889200,
		1692301350,
		1692713550,
		1693125800,
		1693538100,
		1693950450,
		1694362850,
		1694775300,
		1695187800,
		1695600350,
		1696012950,
		1696425600,
		1696838300,
		1697251050,
		1697663850,
		1698076700,
		1698489600,
		1698902550,
		1699315550,
		1699728600,
		1700141700,
		1700554850,
		1700968050,
		1701381300,
		1701794600,
		1702207950,
		1702621350,
		1703034800,
		1703448300,
		1703861850,
		1704275450,
		1704689100,
		1705102800,
		1705516550,
		1705930350,
		1706344200,
		1706758100,
		1707172050,
		1707586050,
		1708000100,
		1708414200,
		1708828350,
		1709242550,
		1709656800,
		1710071100,
		1710485450,
		1710899850,
		1711314300,
		1711728800,
		1712143350,
		1712557950,
		1712972600,
		1713387300,
		1713802050,
		1714216850,
		1714631700,
		1715046600,
		1715461550,
		1715876550,
		1716291600,
		1716706700,
		1717121850,
		1717537050,
		1717952300,
		1718367600,
		1718782950,
		1719198350,
		1719613800,
		1720029300,
		1720444850,
		1720860450,
		1721276100,
		1721691800,
		1722107550,
		1722523350,
		1722939200,
		1723355100,
		1723771050,
		1724187050,
		1724603100,
		1725019200,
		1725435350,
		1725851550,
		1726267800,
		1726684100,
		1727100450,
		1727516850,
		1727933300,
		1728349800,
		1728766350,
		1729182950,
		1729599600,
		1730016300,
		1730433050,
		1730849850,
		1731266700,
		1731683600,
		1732100550,
		1732517550,
		1732934600,
		1733351700,
		1733768850,
		1734186050,
		1734603300,
		1735020600,
		1735437950,
		1735855350,
		1736272800,
		1736690300,
		1737107850,
		1737525450,
		1737943100,
		1738360800,
		1738778550,
		1739196350,
		1739614200,
		1740032100,
		1740450050,
		1740868050,
		1741286100,
		1741704200,
		1742122350,
		1742540550,
		1742958800,
		1743377100,
		1743795450,
		1744213850,
		1744632300,
		1745050800,
		1745469350,
		1745887950,
		1746306600,
		1746725300,
		1747144050,
		1747562850,
		1747981700,
		1748400600,
		1748819550,
		1749238550,
		1749657600,
		1750076700,
		1750495850,
		1750915050,
		1751334300,
		1751753600,
		1752172950,
		1752592350,
		1753011800,
		1753431300,
		1753850850,
		1754270450,
		1754690100,
		1755109800,
		1755529550,
		1755949350,
		1756369200,
		1756789100,
		1757209050,
		1757629050,
		1758049100,
		1758469200,
		1758889350,
		1759309550,
		1759729800,
		1760150100,
		1760570450,
		1760990850,
		1761411300,
		1761831800,
		1762252350,
		1762672950,
		1763093600,
		1763514300,
		1763935050,
		1764355850,
		1764776700,
		1765197600,
		1765618550,
		1766039550,
		1766460600,
		1766881700,
		1767302850,
		1767724050,
		1768145300,
		1768566600,
		1768987950,
		1769409350,
		1769830800,
		1770252300,
		1770673850,
		1771095450,
		1771517100,
		1771938800,
		1772360550,
		1772782350,
		1773204200,
		1773626100,
		1774048050,
		1774470050,
		1774892100,
		1775314200,
		1775736350,
		1776158550,
		1776580800,
		1777003100,
		1777425450,
		1777847850,
		1778270300,
		1778692800,
		1779115350,
		1779537950,
		1779960600,
		1780383300,
		1780806050,
		1781228850,
		1781651700,
		1782074600,
		1782497550,
		1782920550,
		1783343600,
		1783766700,
		1784189850,
		1784613050,
		1785036300,
		1785459600,
		1785882950,
		1786306350,
		1786729800,
		1787153300,
		1787576850,
	}
	--I just couldn't find the right global, so that's why you see "RPtoRank" list here
	--aqwsdsad:set_value()

	local aqwsdsad = DJXX:add_input_int("设置等级(1-8000)")
    DJXX:add_sameline()   ------同行
	DJXX:add_button("修改当前角色等级", function()
			if aqwsdsad:get_value() > 0 and aqwsdsad:get_value() < 8001 then
				stats.set_int(MPX .. "CHAR_SET_RP_GIFT_ADMIN", RPtoRank[aqwsdsad:get_value()])
				gui.show_message("刷等级:", "更换战局生效!已修改当前角色等级为:"..aqwsdsad:get_value() )
			else
			--if aqwsdsad:get_value() < 0 or aqwsdsad:get_value() > 8000 then
				gui.show_message("刷等级:", "输入等级错误!请输入1-8000级!")
			end
	end)

--解锁选项------------------------------------------------------------------------------------- 
	JSXX:add_text("使用解锁后,最好更换战局以生效!全部解锁可能不全,可以将全部解锁右边的几个都点几下!")

    --全部解锁----------------------------------------------------------------------------------

        JSXX:add_button("全部解锁", function()
	        stats.set_int(MPX .. "AWD_FM_DM_WINS", 50)
	        stats.set_int(MPX .. "AWD_FM_TDM_WINS", 50)
	        stats.set_int(MPX .. "AWD_FM_TDM_MVP", 50)
	        stats.set_int(MPX .. "AWD_RACES_WON", 50)
	        stats.set_int(MPX .. "AWD_FMWINAIRRACE", 25)
	        stats.set_int(MPX .. "AWD_FMWINSEARACE", 25)
	        stats.set_int(MPX .. "AWD_FM_GTA_RACES_WON", 50)
	        stats.set_bool(MPX .. "AWD_FMKILL3ANDWINGTARACE", true)
	        stats.set_int(MPX .. "AWD_FMRALLYWONDRIVE", 25)
	        stats.set_int(MPX .. "AWD_FMRALLYWONNAV", 25)
	        stats.set_bool(MPX .. "AWD_FMWINCUSTOMRACE", true)
	        stats.set_int(MPX .. "AWD_FMWINRACETOPOINTS", 25)
	        stats.set_bool(MPX .. "CL_RACE_MODDED_CAR", true)
	        stats.set_int(MPX .. "AWD_FM_RACE_LAST_FIRST", 25)
	        stats.set_bool(MPX .. "AWD_FMRACEWORLDRECHOLDER", true)
	        stats.set_int(MPX .. "AWD_FM_RACES_FASTEST_LAP", 50)
	        stats.set_bool(MPX .. "AWD_FMWINALLRACEMODES", true)
	        stats.set_int(MPX .. "AWD_FMHORDWAVESSURVIVE", 10)
	        stats.set_int(MPX .. "NUMBER_SLIPSTREAMS_IN_RACE", 100)
	        stats.set_int(MPX .. "NUMBER_TURBO_STARTS_IN_RACE", 50)
	        stats.set_int(MPX .. "AWD_NO_ARMWRESTLING_WINS", 25)
	        stats.set_int(MPX .. "MOST_ARM_WRESTLING_WINS", 25)
	        stats.set_int(MPX .. "AWD_WIN_AT_DARTS", 25)
	        stats.set_int(MPX .. "AWD_FM_GOLF_WON", 25)
	        stats.set_int(MPX .. "AWD_FM_TENNIS_WON", 25)
	        stats.set_bool(MPX .. "AWD_FM_TENNIS_5_SET_WINS", true)
	        stats.set_bool(MPX .. "AWD_FM_TENNIS_STASETWIN", true)
	        stats.set_int(MPX .. "AWD_FM_SHOOTRANG_CT_WON", 25)
	        stats.set_int(MPX .. "AWD_FM_SHOOTRANG_RT_WON", 25)
	        stats.set_int(MPX .. "AWD_FM_SHOOTRANG_TG_WON", 25)
	        stats.set_bool(MPX .. "AWD_FM_SHOOTRANG_GRAN_WON", true)
	        stats.set_bool(MPX .. "AWD_FMWINEVERYGAMEMODE", true)
	        stats.set_int(MPX .. "AWD_WIN_CAPTURES", 50)
	        stats.set_int(MPX .. "AWD_WIN_CAPTURE_DONT_DYING", 25)
	        stats.set_int(MPX .. "AWD_WIN_LAST_TEAM_STANDINGS", 50)
	        stats.set_int(MPX .. "AWD_ONLY_PLAYER_ALIVE_LTS", 50)
	        stats.set_int(MPX .. "AWD_KILL_TEAM_YOURSELF_LTS", 25)
	        stats.set_int(MPX .. "AIR_LAUNCHES_OVER_40M", 25)
	        stats.set_int(MPX .. "AWD_CARS_EXPORTED", 50)
	        stats.set_int(MPX .. "AWD_LESTERDELIVERVEHICLES", 25)
	        stats.set_int(MPX .. "TOTAL_RACES_WON", 500)
	        stats.set_int(MPX .. "TOTAL_RACES_LOST", 250)
	        stats.set_int(MPX .. "TOTAL_CUSTOM_RACES_WON", 500)
	        stats.set_int(MPX .. "TOTAL_DEATHMATCH_LOST", 250)
	        stats.set_int(MPX .. "TOTAL_DEATHMATCH_WON", 500)
	        stats.set_int(MPX .. "TOTAL_TDEATHMATCH_LOST", 250)
	        stats.set_int(MPX .. "TOTAL_TDEATHMATCH_WON", 500)
	        stats.set_int(MPX .. "SHOOTINGRANGE_WINS", 500)
	        stats.set_int(MPX .. "SHOOTINGRANGE_LOSSES", 250)
	        stats.set_int(MPX .. "TENNIS_MATCHES_WON", 500)
	        stats.set_int(MPX .. "TENNIS_MATCHES_LOST", 250)
	        stats.set_int(MPX .. "GOLF_WINS", 500)
	        stats.set_int(MPX .. "GOLF_LOSSES", 250)
	        stats.set_int(MPX .. "DARTS_TOTAL_WINS", 500)
	        stats.set_int(MPX .. "DARTS_TOTAL_MATCHES", 750)
	        stats.set_int(MPX .. "SHOOTINGRANGE_TOTAL_MATCH", 800)
	        stats.set_int(MPX .. "BJ_WINS", 500)
	        stats.set_int(MPX .. "BJ_LOST", 250)
	        stats.set_int(MPX .. "RACE_2_POINT_WINS", 500)
	        stats.set_int(MPX .. "RACE_2_POINT_LOST", 250)
	        stats.set_int(MPX .. "KILLS_PLAYERS", 3593)
	        stats.set_int(MPX .. "DEATHS_PLAYER", 1002)
	        stats.set_int(MPX .. "MISSIONS_CREATED", 500)
	        stats.set_int(MPX .. "LTS_CREATED", 500)
	        stats.set_int(MPX .. "FM_MISSION_LIKES", 1500)
	        stats.set_bool(MPX .. "AWD_FM25DIFFERENTDM", true)
	        stats.set_int(MPX .. "CR_DIFFERENT_DM", 25)
	        stats.set_bool(MPX .. "AWD_FM25DIFFERENTRACES", true)
	        stats.set_int(MPX .. "CR_DIFFERENT_RACES", 25)
	        stats.set_int(MPX .. "AWD_PARACHUTE_JUMPS_20M", 25)
	        stats.set_int(MPX .. "AWD_PARACHUTE_JUMPS_50M", 25)
	        stats.set_int(MPX .. "AWD_FMBASEJMP", 25)
	        stats.set_bool(MPX .. "AWD_FMATTGANGHQ", true)
	        stats.set_bool(MPX .. "AWD_FM6DARTCHKOUT", true)
	        stats.set_int(MPX .. "AWD_FM_GOLF_BIRDIES", 25)
	        stats.set_bool(MPX .. "AWD_FM_GOLF_HOLE_IN_1", true)
	        stats.set_int(MPX .. "AWD_FM_TENNIS_ACE", 25)
	        stats.set_int(MPX .. "AWD_FMBBETWIN", 50000)
	        stats.set_int(MPX .. "AWD_LAPDANCES", 25)
	        stats.set_int(MPX .. "AWD_FMCRATEDROPS", 25)
	        stats.set_bool(MPX .. "AWD_FMPICKUPDLCCRATE1ST", true)
	        stats.set_bool(MPX .. "AWD_FM25DIFITEMSCLOTHES", true)
	        stats.set_int(MPX .. "AWD_NO_HAIRCUTS", 25)
	        stats.set_bool(MPX .. "AWD_BUY_EVERY_GUN", true)
	        stats.set_bool(MPX .. "AWD_DRIVELESTERCAR5MINS", true)
	        stats.set_bool(MPX .. "AWD_FMTATTOOALLBODYPARTS", true)
	        stats.set_int(MPX .. "AWD_DROPOFF_CAP_PACKAGES", 100)
	        stats.set_int(MPX .. "AWD_PICKUP_CAP_PACKAGES", 100)
	        stats.set_int(MPX .. "AWD_MENTALSTATE_TO_NORMAL", 50)
	        stats.set_bool(MPX .. "AWD_STORE_20_CAR_IN_GARAGES", true)
	        stats.set_int(MPX .. "AWD_TRADE_IN_YOUR_PROPERTY", 25)
	        stats.set_bool(MPX .. "AWD_DAILYOBJWEEKBONUS", true)
	        stats.set_bool(MPX .. "AWD_DAILYOBJMONTHBONUS", true)
	        stats.set_int(MPX .. "AWD_FM_CR_DM_MADE", 25)
	        stats.set_int(MPX .. "AWD_FM_CR_RACES_MADE", 25)
	        stats.set_int(MPX .. "AWD_FM_CR_PLAYED_BY_PEEP", 1598)
	        stats.set_int(MPX .. "AWD_FM_CR_MISSION_SCORE", 100)
	        stats.set_bool(MPX .. "CL_DRIVE_RALLY", true)
	        stats.set_bool(MPX .. "CL_PLAY_GTA_RACE", true)
	        stats.set_bool(MPX .. "CL_PLAY_BOAT_RACE", true)
	        stats.set_bool(MPX .. "CL_PLAY_FOOT_RACE", true)
	        stats.set_bool(MPX .. "CL_PLAY_TEAM_DM", true)
	        stats.set_bool(MPX .. "CL_PLAY_VEHICLE_DM", true)
	        stats.set_bool(MPX .. "CL_PLAY_MISSION_CONTACT", true)
	        stats.set_bool(MPX .. "CL_PLAY_A_PLAYLIST", true)
	        stats.set_bool(MPX .. "CL_PLAY_POINT_TO_POINT", true)
	        stats.set_bool(MPX .. "CL_PLAY_ONE_ON_ONE_DM", true)
	        stats.set_bool(MPX .. "CL_PLAY_ONE_ON_ONE_RACE", true)
	        stats.set_bool(MPX .. "CL_SURV_A_BOUNTY", true)
	        stats.set_bool(MPX .. "CL_SET_WANTED_LVL_ON_PLAY", true)
	        stats.set_bool(MPX .. "CL_GANG_BACKUP_GANGS", true)
	        stats.set_bool(MPX .. "CL_GANG_BACKUP_LOST", true)
	        stats.set_bool(MPX .. "CL_GANG_BACKUP_VAGOS", true)
	        stats.set_bool(MPX .. "CL_CALL_MERCENARIES", true)
	        stats.set_bool(MPX .. "CL_PHONE_MECH_DROP_CAR", true)
	        stats.set_bool(MPX .. "CL_GONE_OFF_RADAR", true)
	        stats.set_bool(MPX .. "CL_FILL_TITAN", true)
	        stats.set_bool(MPX .. "CL_MOD_CAR_USING_APP", true)
	        stats.set_bool(MPX .. "CL_MOD_CAR_USING_APP", true)
	        stats.set_bool(MPX .. "CL_BUY_INSURANCE", true)
	        stats.set_bool(MPX .. "CL_BUY_GARAGE", true)
	        stats.set_bool(MPX .. "CL_ENTER_FRIENDS_HOUSE", true)
	        stats.set_bool(MPX .. "CL_CALL_STRIPPER_HOUSE", true)
	        stats.set_bool(MPX .. "CL_CALL_FRIEND", true)
	        stats.set_bool(MPX .. "CL_SEND_FRIEND_REQUEST", true)
	        stats.set_bool(MPX .. "CL_W_WANTED_PLAYER_TV", true)
	        stats.set_bool(MPX .. "FM_INTRO_CUT_DONE", true)
	        stats.set_bool(MPX .. "FM_INTRO_MISS_DONE", true)
	        stats.set_bool(MPX .. "SHOOTINGRANGE_SEEN_TUT", true)
	        stats.set_bool(MPX .. "TENNIS_SEEN_TUTORIAL", true)
	        stats.set_bool(MPX .. "DARTS_SEEN_TUTORIAL", true)
	        stats.set_bool(MPX .. "ARMWRESTLING_SEEN_TUTORIAL", true)
	        stats.set_bool(MPX .. "HAS_WATCHED_BENNY_CUTSCE", true)
	        stats.set_int(MPX .. "NO_PHOTOS_TAKEN", 100)
	        stats.set_int(MPX .. "BOUNTSONU", 200)
	        stats.set_int(MPX .. "BOUNTPLACED", 500)
	        stats.set_int(MPX .. "BETAMOUNT", 500)
	        stats.set_int(MPX .. "CRARMWREST", 500)
	        stats.set_int(MPX .. "CRBASEJUMP", 500)
	        stats.set_int(MPX .. "CRDARTS", 500)
	        stats.set_int(MPX .. "CRDM", 500)
	        stats.set_int(MPX .. "CRGANGHIDE", 500)
	        stats.set_int(MPX .. "CRGOLF", 500)
	        stats.set_int(MPX .. "CRHORDE", 500)
	        stats.set_int(MPX .. "CRMISSION", 500)
	        stats.set_int(MPX .. "CRSHOOTRNG", 500)
	        stats.set_int(MPX .. "CRTENNIS", 500)
	        stats.set_int(MPX .. "NO_TIMES_CINEMA", 500)
	        stats.set_int(MPX .. "CHAR_WEAP_UNLOCKED", -1)
	        stats.set_int(MPX .. "CHAR_WEAP_UNLOCKED2", -1)
	        stats.set_int(MPX .. "CHAR_WEAP_UNLOCKED3", -1)
	        stats.set_int(MPX .. "CHAR_WEAP_UNLOCKED4", -1)
	        stats.set_int(MPX .. "CHAR_WEAP_ADDON_1_UNLCK", -1)
	        stats.set_int(MPX .. "CHAR_WEAP_ADDON_2_UNLCK", -1)
	        stats.set_int(MPX .. "CHAR_WEAP_ADDON_3_UNLCK", -1)
	        stats.set_int(MPX .. "CHAR_WEAP_ADDON_4_UNLCK", -1)
	        stats.set_int(MPX .. "CHAR_WEAP_FREE", -1)
	        stats.set_int(MPX .. "CHAR_WEAP_FREE2", -1)
	        stats.set_int(MPX .. "CHAR_FM_WEAP_FREE", -1)
	        stats.set_int(MPX .. "CHAR_FM_WEAP_FREE2", -1)
	        stats.set_int(MPX .. "CHAR_FM_WEAP_FREE3", -1)
	        stats.set_int(MPX .. "CHAR_FM_WEAP_FREE4", -1)
	        stats.set_int(MPX .. "CHAR_WEAP_PURCHASED", -1)
	        stats.set_int(MPX .. "CHAR_WEAP_PURCHASED2", -1)
	        stats.set_int(MPX .. "WEAPON_PICKUP_BITSET", -1)
	        stats.set_int(MPX .. "WEAPON_PICKUP_BITSET2", -1)
	        stats.set_int(MPX .. "CHAR_FM_WEAP_UNLOCKED", -1)
	        stats.set_int(MPX .. "NO_WEAPONS_UNLOCK", -1)
	        stats.set_int(MPX .. "NO_WEAPON_MODS_UNLOCK", -1)
	        stats.set_int(MPX .. "NO_WEAPON_CLR_MOD_UNLOCK", -1)
	        stats.set_int(MPX .. "CHAR_FM_WEAP_UNLOCKED2", -1)
	        stats.set_int(MPX .. "CHAR_FM_WEAP_UNLOCKED3", -1)
	        stats.set_int(MPX .. "CHAR_FM_WEAP_UNLOCKED4", -1)
	        stats.set_int(MPX .. "CHAR_KIT_1_FM_UNLCK", -1)
	        stats.set_int(MPX .. "CHAR_KIT_2_FM_UNLCK", -1)
	        stats.set_int(MPX .. "CHAR_KIT_3_FM_UNLCK", -1)
	        stats.set_int(MPX .. "CHAR_KIT_4_FM_UNLCK", -1)
	        stats.set_int(MPX .. "CHAR_KIT_5_FM_UNLCK", -1)
	        stats.set_int(MPX .. "CHAR_KIT_6_FM_UNLCK", -1)
	        stats.set_int(MPX .. "CHAR_KIT_7_FM_UNLCK", -1)
	        stats.set_int(MPX .. "CHAR_KIT_8_FM_UNLCK", -1)
	        stats.set_int(MPX .. "CHAR_KIT_9_FM_UNLCK", -1)
	        stats.set_int(MPX .. "CHAR_KIT_10_FM_UNLCK", -1)
	        stats.set_int(MPX .. "CHAR_KIT_11_FM_UNLCK", -1)
	        stats.set_int(MPX .. "CHAR_KIT_12_FM_UNLCK", -1)
	        stats.set_int(MPX .. "CHAR_KIT_FM_PURCHASE", -1)
	        stats.set_int(MPX .. "CHAR_WEAP_FM_PURCHASE", -1)
	        stats.set_int(MPX .. "CHAR_WEAP_FM_PURCHASE2", -1)
	        stats.set_int(MPX .. "CHAR_WEAP_FM_PURCHASE3", -1)
	        stats.set_int(MPX .. "CHAR_WEAP_FM_PURCHASE4", -1)
	        stats.set_int(MPX .. "FIREWORK_TYPE_1_WHITE", 1000)
	        stats.set_int(MPX .. "FIREWORK_TYPE_1_RED", 1000)
	        stats.set_int(MPX .. "FIREWORK_TYPE_1_BLUE", 1000)
	        stats.set_int(MPX .. "FIREWORK_TYPE_2_WHITE", 1000)
	        stats.set_int(MPX .. "FIREWORK_TYPE_2_RED", 1000)
	        stats.set_int(MPX .. "FIREWORK_TYPE_2_BLUE", 1000)
	        stats.set_int(MPX .. "FIREWORK_TYPE_3_WHITE", 1000)
	        stats.set_int(MPX .. "FIREWORK_TYPE_3_RED", 1000)
	        stats.set_int(MPX .. "FIREWORK_TYPE_3_BLUE", 1000)
	        stats.set_int(MPX .. "FIREWORK_TYPE_4_WHITE", 1000)
	        stats.set_int(MPX .. "FIREWORK_TYPE_4_RED", 1000)
	        stats.set_int(MPX .. "FIREWORK_TYPE_4_BLUE", 1000)
	        stats.set_int(MPX .. "WEAP_FM_ADDON_PURCH", -1)
	        for i = 2, 19 do
		        stats.set_int(MPX .. "WEAP_FM_ADDON_PURCH" .. i, -1)
	        end
	        for j = 1, 19 do
		        stats.set_int(MPX .. "CHAR_FM_WEAP_ADDON_" .. j .. "_UNLCK", -1)
	        end
	        for m = 1, 41 do
		        stats.set_int(MPX .. "CHAR_KIT_" .. m .. "_FM_UNLCK", -1)
	        end
	        for l = 2, 41 do
		        stats.set_int(MPX .. "CHAR_KIT_FM_PURCHASE" .. l, -1)
	        end
	        stats.set_int(MPX .. "AWD_FMTIME5STARWANTED", 120)
	        stats.set_int(MPX .. "AWD_5STAR_WANTED_AVOIDANCE", 50)
	        stats.set_int(MPX .. "AWD_FMSHOOTDOWNCOPHELI", 25)
	        stats.set_int(MPX .. "AWD_VEHICLES_JACKEDR", 500)
	        stats.set_int(MPX .. "AWD_SECURITY_CARS_ROBBED", 25)
	        stats.set_int(MPX .. "AWD_HOLD_UP_SHOPS", 20)
	        stats.set_int(MPX .. "AWD_ODISTRACTCOPSNOEATH", 25)
	        stats.set_int(MPX .. "AWD_ENEMYDRIVEBYKILLS", 100)
	        stats.set_int(MPX .. "CHAR_WANTED_LEVEL_TIME5STAR", 18000000)
	        stats.set_int(MPX .. "CARS_COPS_EXPLODED", 300)
	        stats.set_int(MPX .. "BIKES_EXPLODED", 100)
	        stats.set_int(MPX .. "BOATS_EXPLODED", 168)
	        stats.set_int(MPX .. "HELIS_EXPLODED", 98)
	        stats.set_int(MPX .. "PLANES_EXPLODED", 138)
	        stats.set_int(MPX .. "QUADBIKE_EXPLODED", 50)
	        stats.set_int(MPX .. "BICYCLE_EXPLODED", 48)
	        stats.set_int(MPX .. "SUBMARINE_EXPLODED", 28)
	        stats.set_int(MPX .. "TIRES_POPPED_BY_GUNSHOT", 500)
	        stats.set_int(MPX .. "NUMBER_CRASHES_CARS", 300)
	        stats.set_int(MPX .. "NUMBER_CRASHES_BIKES", 300)
	        stats.set_int(MPX .. "BAILED_FROM_VEHICLE", 300)
	        stats.set_int(MPX .. "NUMBER_CRASHES_QUADBIKES", 300)
	        stats.set_int(MPX .. "NUMBER_STOLEN_COP_VEHICLE", 300)
	        stats.set_int(MPX .. "NUMBER_STOLEN_CARS", 300)
	        stats.set_int(MPX .. "NUMBER_STOLEN_BIKES", 300)
	        stats.set_int(MPX .. "NUMBER_STOLEN_BOATS", 300)
	        stats.set_int(MPX .. "NUMBER_STOLEN_HELIS", 300)
	        stats.set_int(MPX .. "NUMBER_STOLEN_PLANES", 300)
	        stats.set_int(MPX .. "NUMBER_STOLEN_QUADBIKES", 300)
	        stats.set_int(MPX .. "NUMBER_STOLEN_BICYCLES", 300)
	        stats.set_int(MPX .. "MC_CONTRIBUTION_POINTS", 1000)
	        stats.set_int(MPX .. "MEMBERSMARKEDFORDEATH", 700)
	        stats.set_int(MPX .. "MCKILLS", 500)
	        stats.set_int(MPX .. "MCDEATHS", 700)
	        stats.set_int(MPX .. "RIVALPRESIDENTKILLS", 700)
	        stats.set_int(MPX .. "RIVALCEOANDVIPKILLS", 700)
	        stats.set_int(MPX .. "CLUBHOUSECONTRACTSCOMPLETE", 700)
	        stats.set_int(MPX .. "CLUBHOUSECONTRACTEARNINGS", 32698547)
	        stats.set_int(MPX .. "CLUBCHALLENGESCOMPLETED", 700)
	        stats.set_int(MPX .. "MEMBERCHALLENGESCOMPLETED", 700)
	        stats.set_int(MPX .. "GHKILLS", 500)
	        stats.set_int(MPX .. "HORDELVL", 10)
	        stats.set_int(MPX .. "HORDKILLS", 500)
	        stats.set_int(MPX .. "UNIQUECRATES", 500)
	        stats.set_int(MPX .. "BJWINS", 500)
	        stats.set_int(MPX .. "HORDEWINS", 500)
	        stats.set_int(MPX .. "MCMWINS", 500)
	        stats.set_int(MPX .. "GANGHIDWINS", 500)
	        stats.set_int(MPX .. "KILLS", 800)
	        stats.set_int(MPX .. "HITS_PEDS_VEHICLES", 100)
	        stats.set_int(MPX .. "SHOTS", 1000)
	        stats.set_int(MPX .. "HEADSHOTS", 100)
	        stats.set_int(MPX .. "KILLS_ARMED", 650)
	        stats.set_int(MPX .. "SUCCESSFUL_COUNTERS", 100)
	        stats.set_int(MPX .. "KILLS_PLAYERS", 3593)
	        stats.set_int(MPX .. "DEATHS_PLAYER", 1002)
	        stats.set_int(MPX .. "KILLS_STEALTH", 100)
	        stats.set_int(MPX .. "KILLS_INNOCENTS", 500)
	        stats.set_int(MPX .. "KILLS_ENEMY_GANG_MEMBERS", 500)
	        stats.set_int(MPX .. "KILLS_FRIENDLY_GANG_MEMBERS", 500)
	        stats.set_int(MPX .. "KILLS_BY_OTHERS", 100)
	        stats.set_int(MPX .. "BIGGEST_VICTIM_KILLS", 500)
	        stats.set_int(MPX .. "ARCHENEMY_KILLS", 500)
	        stats.set_int(MPX .. "KILLS_COP", 4500)
	        stats.set_int(MPX .. "KILLS_SWAT", 500)
	        stats.set_int(MPX .. "STARS_ATTAINED", 5000)
	        stats.set_int(MPX .. "STARS_EVADED", 4000)
	        stats.set_int(MPX .. "VEHEXPORTED", 500)
	        stats.set_int(MPX .. "TOTAL_NO_SHOPS_HELD_UP", 100)
	        stats.set_int(MPX .. "CR_GANGATTACK_CITY", 1000)
	        stats.set_int(MPX .. "CR_GANGATTACK_COUNTRY", 1000)
	        stats.set_int(MPX .. "CR_GANGATTACK_LOST", 1000)
	        stats.set_int(MPX .. "CR_GANGATTACK_VAGOS", 1000)
	        stats.set_int(MPX .. "NO_NON_CONTRACT_RACE_WIN", 500)
	        stats.set_int(MPX .. "DIED_IN_DROWNING", 833)
	        stats.set_int(MPX .. "DIED_IN_DROWNINGINVEHICLE", 833)
	        stats.set_int(MPX .. "DIED_IN_EXPLOSION", 833)
	        stats.set_int(MPX .. "DIED_IN_FALL", 833)
	        stats.set_int(MPX .. "DIED_IN_FIRE", 833)
	        stats.set_int(MPX .. "DIED_IN_ROAD", 833)
	        stats.set_int(MPX .. "GRENADE_ENEMY_KILLS", 50)
	        stats.set_int(MPX .. "MICROSMG_ENEMY_KILLS", 500)
	        stats.set_int(MPX .. "SMG_ENEMY_KILLS", 500)
	        stats.set_int(MPX .. "ASLTSMG_ENEMY_KILLS", 500)
	        stats.set_int(MPX .. "CRBNRIFLE_ENEMY_KILLS", 500)
	        stats.set_int(MPX .. "ADVRIFLE_ENEMY_KILLS", 500)
	        stats.set_int(MPX .. "MG_ENEMY_KILLS", 500)
	        stats.set_int(MPX .. "CMBTMG_ENEMY_KILLS", 500)
	        stats.set_int(MPX .. "ASLTMG_ENEMY_KILLS", 500)
	        stats.set_int(MPX .. "RPG_ENEMY_KILLS", 500)
	        stats.set_int(MPX .. "PISTOL_ENEMY_KILLS", 500)
	        stats.set_int(MPX .. "PLAYER_HEADSHOTS", 500)
	        stats.set_int(MPX .. "SAWNOFF_ENEMY_KILLS", 500)
	        stats.set_int(MPX .. "STKYBMB_ENEMY_KILLS", 50)
	        stats.set_int(MPX .. "UNARMED_ENEMY_KILLS", 50)
	        stats.set_int(MPX .. "SNIPERRFL_ENEMY_KILLS", 500)
	        stats.set_int(MPX .. "HVYSNIPER_ENEMY_KILLS", 500)
	        stats.set_int(MPX .. "AWD_50_VEHICLES_BLOWNUP", 500)
	        stats.set_int(MPX .. "CARS_EXPLODED", 500)
	        stats.set_int(MPX .. "AWD_CAR_EXPORT", 100)
	        stats.set_int(MPX .. "AWD_FMDRIVEWITHOUTCRASH", 30)
	        stats.set_int(MPX .. "AWD_PASSENGERTIME", 4)
	        stats.set_int(MPX .. "AWD_TIME_IN_HELICOPTER", 4)
	        stats.set_int(MPX .. "AWD_VEHICLE_JUMP_OVER_40M", 25)
	        stats.set_int(MPX .. "MOST_FLIPS_IN_ONE_JUMP", 5)
	        stats.set_int(MPX .. "MOST_SPINS_IN_ONE_JUMP", 5)
	        stats.set_int(MPX .. "CHAR_FM_VEHICLE_1_UNLCK", -1)
	        stats.set_int(MPX .. "CHAR_FM_VEHICLE_2_UNLCK", -1)
	        stats.set_int(MPX .. "NO_CARS_REPAIR", 1000)
	        stats.set_int(MPX .. "VEHICLES_SPRAYED", 500)
	        stats.set_int(MPX .. "NUMBER_NEAR_MISS_NOCRASH", 500)
	        stats.set_int(MPX .. "USJS_FOUND", 50)
	        stats.set_int(MPX .. "USJS_COMPLETED", 50)
	        stats.set_int(MPX .. "USJS_TOTAL_COMPLETED", 50)
	        stats.set_int(MPX .. "CRDEADLINE", 5)
	        stats.set_int(MPX .. "FAVOUTFITBIKETIMECURRENT", 2069146067)
	        stats.set_int(MPX .. "FAVOUTFITBIKETIME1ALLTIME", 2069146067)
	        stats.set_int(MPX .. "FAVOUTFITBIKETYPECURRENT", 2069146067)
	        stats.set_int(MPX .. "FAVOUTFITBIKETYPEALLTIME", 2069146067)
	        stats.set_int(MPX .. "LONGEST_WHEELIE_DIST", 1000)
	        stats.set_int(MPX .. "RACES_WON", 50)
	        stats.set_int(MPX .. "COUNT_HOTRING_RACE", 20)
	        stats.set_bool(MPX .. "AWD_FMFURTHESTWHEELIE", true)
	        stats.set_bool(MPX .. "AWD_FMFULLYMODDEDCAR", true)
	        stats.set_int(MPX .. "AWD_100_HEADSHOTS", 500)
	        stats.set_int(MPX .. "AWD_FMOVERALLKILLS", 1000)
	        stats.set_int(MPX .. "AWD_FMKILLBOUNTY", 25)
	        stats.set_int(MPX .. "AWD_FM_DM_3KILLSAMEGUY", 50)
	        stats.set_int(MPX .. "AWD_FM_DM_KILLSTREAK", 100)
	        stats.set_int(MPX .. "AWD_FM_DM_STOLENKILL", 50)
	        stats.set_int(MPX .. "AWD_FM_DM_TOTALKILLS", 500)
	        stats.set_bool(MPX .. "AWD_FMKILLSTREAKSDM", true)
	        stats.set_bool(MPX .. "AWD_FMMOSTKILLSGANGHIDE", true)
	        stats.set_bool(MPX .. "AWD_FMMOSTKILLSSURVIVE", true)
	        stats.set_int(MPX .. "AWD_FMREVENGEKILLSDM", 50)
	        stats.set_int(MPX .. "AWD_KILL_CARRIER_CAPTURE", 100)
	        stats.set_int(MPX .. "AWD_NIGHTVISION_KILLS", 100)
	        stats.set_int(MPX .. "AWD_KILL_PSYCHOPATHS", 100)
	        stats.set_int(MPX .. "AWD_TAKEDOWNSMUGPLANE", 50)
	        stats.set_int(MPX .. "AWD_100_KILLS_PISTOL", 500)
	        stats.set_int(MPX .. "AWD_100_KILLS_SMG", 500)
	        stats.set_int(MPX .. "AWD_100_KILLS_SHOTGUN", 500)
	        stats.set_int(MPX .. "ASLTRIFLE_ENEMY_KILLS", 500)
	        stats.set_int(MPX .. "AWD_100_KILLS_SNIPER", 500)
	        stats.set_int(MPX .. "MG_ENEMY_KILLS", 500)
	        stats.set_int(MPX .. "AWD_25_KILLS_STICKYBOMBS", 50)
	        stats.set_int(MPX .. "AWD_50_KILLS_GRENADES", 50)
	        stats.set_int(MPX .. "AWD_50_KILLS_ROCKETLAUNCH", 50)
	        stats.set_int(MPX .. "AWD_20_KILLS_MELEE", 50)
	        stats.set_int(MPX .. "AWD_CAR_BOMBS_ENEMY_KILLS", 25)
	        stats.set_int(MPX .. "MELEEKILLS", 700)
	        stats.set_int(MPX .. "HITS", 10000)
	        stats.set_int(MPX .. "DEATHS", 499)
	        stats.set_int(MPX .. "HIGHEST_SKITTLES", 900)
	        stats.set_int(MPX .. "NUMBER_NEAR_MISS", 1000)
	        stats.set_int(MPX .. "AWD_FINISH_HEISTS", 50)
	        stats.set_int(MPX .. "AWD_FINISH_HEIST_SETUP_JOB", 50)
	        stats.set_int(MPX .. "AWD_COMPLETE_HEIST_NOT_DIE", -1)
	        stats.set_bool(MPX .. "AWD_FINISH_HEIST_NO_DAMAGE", true)
	        stats.set_int(MPX .. "AWD_WIN_GOLD_MEDAL_HEISTS", 25)
	        stats.set_int(MPX .. "AWD_DO_HEIST_AS_MEMBER", 25)
	        stats.set_int(MPX .. "AWD_DO_HEIST_AS_THE_LEADER", 25)
	        stats.set_bool(MPX .. "AWD_SPLIT_HEIST_TAKE_EVENLY", true)
	        stats.set_bool(MPX .. "AWD_ACTIVATE_2_PERSON_KEY", true)
	        stats.set_int(MPX .. "AWD_CONTROL_CROWDS", 25)
	        stats.set_bool(MPX .. "AWD_ALL_ROLES_HEIST", true)
	        stats.set_int(MPX .. "HEIST_COMPLETION", 25)
	        stats.set_int(MPX .. "HEISTS_ORGANISED", -1)
	        stats.set_int(MPX .. "HEIST_START", -1)
	        stats.set_int(MPX .. "HEIST_END", -1)
	        stats.set_int(MPX .. "CUTSCENE_MID_PRISON", -1)
	        stats.set_int(MPX .. "CUTSCENE_MID_HUMANE", -1)
	        stats.set_int(MPX .. "CUTSCENE_MID_NARC", -1)
	        stats.set_int(MPX .. "CUTSCENE_MID_ORNATE", -1)
	        stats.set_int(MPX .. "CR_FLEECA_PREP_1", -1)
	        stats.set_int(MPX .. "CR_FLEECA_PREP_2", -1)
	        stats.set_int(MPX .. "CR_FLEECA_FINALE", -1)
	        stats.set_int(MPX .. "CR_PRISON_PLANE", -1)
	        stats.set_int(MPX .. "CR_PRISON_BUS", -1)
	        stats.set_int(MPX .. "CR_PRISON_STATION", -1)
	        stats.set_int(MPX .. "CR_PRISON_UNFINISHED_BIZ", -1)
	        stats.set_int(MPX .. "CR_PRISON_FINALE", -1)
	        stats.set_int(MPX .. "CR_HUMANE_KEY_CODES", -1)
	        stats.set_int(MPX .. "CR_HUMANE_ARMORDILLOS", -1)
	        stats.set_int(MPX .. "CR_HUMANE_EMP", -1)
	        stats.set_int(MPX .. "CR_HUMANE_VALKYRIE", -1)
	        stats.set_int(MPX .. "CR_HUMANE_FINALE", -1)
	        stats.set_int(MPX .. "CR_NARC_COKE", -1)
	        stats.set_int(MPX .. "CR_NARC_TRASH_TRUCK", -1)
	        stats.set_int(MPX .. "CR_NARC_BIKERS", -1)
	        stats.set_int(MPX .. "CR_NARC_WEED", -1)
	        stats.set_int(MPX .. "CR_NARC_STEAL_METH", -1)
	        stats.set_int(MPX .. "CR_NARC_FINALE", -1)
	        stats.set_int(MPX .. "CR_PACIFIC_TRUCKS", -1)
	        stats.set_int(MPX .. "CR_PACIFIC_WITSEC", -1)
	        stats.set_int(MPX .. "CR_PACIFIC_HACK", -1)
	        stats.set_int(MPX .. "CR_PACIFIC_BIKES", -1)
	        stats.set_int(MPX .. "CR_PACIFIC_CONVOY", -1)
	        stats.set_int(MPX .. "CR_PACIFIC_FINALE", -1)
	        stats.set_int(MPX .. "HEIST_ACH_TRACKER", -1)
	        stats.set_int(MPX .. "WIN_GOLD_MEDAL_HEISTS", 25)
	        stats.set_bool(MPX .. "AWD_FLEECA_FIN", true)
	        stats.set_bool(MPX .. "AWD_PRISON_FIN", true)
	        stats.set_bool(MPX .. "AWD_HUMANE_FIN", true)
	        stats.set_bool(MPX .. "AWD_SERIESA_FIN", true)
	        stats.set_bool(MPX .. "AWD_PACIFIC_FIN", true)
	        stats.set_bool(MPX .. "AWD_HST_ORDER", true)
	        stats.set_bool(MPX .. "AWD_COMPLET_HEIST_MEM", true)
	        stats.set_bool(MPX .. "AWD_COMPLET_HEIST_1STPER", true)
	        stats.set_bool(MPX .. "AWD_HST_SAME_TEAM", true)
	        stats.set_bool(MPX .. "AWD_HST_ULT_CHAL", true)
	        stats.set_bool(MPX .. "AWD_MATCHING_OUTFIT_HEIST", true)
	        stats.set_bool(MPX .. "HEIST_PLANNING_DONE_PRINT", true)
	        stats.set_bool(MPX .. "HEIST_PLANNING_DONE_HELP_0", true)
	        stats.set_bool(MPX .. "HEIST_PLANNING_DONE_HELP_1", true)
	        stats.set_bool(MPX .. "HEIST_PRE_PLAN_DONE_HELP_0", true)
	        stats.set_bool(MPX .. "HEIST_CUTS_DONE_FINALE", true)
	        stats.set_bool(MPX .. "HEIST_IS_TUTORIAL", true)
	        stats.set_bool(MPX .. "HEIST_STRAND_INTRO_DONE", true)
	        stats.set_bool(MPX .. "HEIST_CUTS_DONE_ORNATE", true)
	        stats.set_bool(MPX .. "HEIST_CUTS_DONE_PRISON", true)
	        stats.set_bool(MPX .. "HEIST_CUTS_DONE_BIOLAB", true)
	        stats.set_bool(MPX .. "HEIST_CUTS_DONE_NARCOTIC", true)
	        stats.set_bool(MPX .. "HEIST_CUTS_DONE_TUTORIAL", true)
	        stats.set_bool(MPX .. "HEIST_AWARD_DONE_PREP", true)
	        stats.set_bool(MPX .. "HEIST_AWARD_BOUGHT_IN", true)
	        stats.set_int(MPX .. "HEIST_PLANNING_STAGE", -1)
	        stats.set_int(MPX .. "GANGOPS_HEIST_STATUS", -1)
	        stats.set_int(MPX .. "GANGOPS_HEIST_STATUS", -229384)
	        stats.set_int(MPX .. "GANGOPS_FM_MISSION_PROG", -1)
	        stats.set_int(MPX .. "GANGOPS_FLOW_MISSION_PROG", -1)
	        stats.set_int(MPX .. "GANGOPS_ALLINORDER", 100)
	        stats.set_int(MPX .. "GANGOPS_LOYALTY", 100)
	        stats.set_int(MPX .. "GANGOPS_CRIMMASMD", 100)
	        stats.set_int(MPX .. "GANGOPS_LOYALTY2", 100)
	        stats.set_int(MPX .. "GANGOPS_LOYALTY3", 100)
	        stats.set_int(MPX .. "GANGOPS_CRIMMASMD2", 100)
	        stats.set_int(MPX .. "GANGOPS_CRIMMASMD3", 100)
	        stats.set_int(MPX .. "GANGOPS_SUPPORT", 100)
	        stats.set_int(MPX .. "CR_GANGOP_MORGUE", 10)
	        stats.set_int(MPX .. "CR_GANGOP_DELUXO", 10)
	        stats.set_int(MPX .. "CR_GANGOP_SERVERFARM", 10)
	        stats.set_int(MPX .. "CR_GANGOP_IAABASE_FIN", 10)
	        stats.set_int(MPX .. "CR_GANGOP_STEALOSPREY", 10)
	        stats.set_int(MPX .. "CR_GANGOP_FOUNDRY", 10)
	        stats.set_int(MPX .. "CR_GANGOP_RIOTVAN", 10)
	        stats.set_int(MPX .. "CR_GANGOP_SUBMARINECAR", 10)
	        stats.set_int(MPX .. "CR_GANGOP_SUBMARINE_FIN", 10)
	        stats.set_int(MPX .. "CR_GANGOP_PREDATOR", 10)
	        stats.set_int(MPX .. "CR_GANGOP_BMLAUNCHER", 10)
	        stats.set_int(MPX .. "CR_GANGOP_BCCUSTOM", 10)
	        stats.set_int(MPX .. "CR_GANGOP_STEALTHTANKS", 10)
	        stats.set_int(MPX .. "CR_GANGOP_SPYPLANE", 10)
	        stats.set_int(MPX .. "CR_GANGOP_FINALE", 10)
	        stats.set_int(MPX .. "CR_GANGOP_FINALE_P2", 10)
	        stats.set_int(MPX .. "CR_GANGOP_FINALE_P3", 10)
	        stats.set_bool(MPX .. "AWD_GANGOPS_IAA", true)
	        stats.set_bool(MPX .. "AWD_GANGOPS_SUBMARINE", true)
	        stats.set_bool(MPX .. "AWD_GANGOPS_MISSILE", true)
	        stats.set_bool(MPX .. "AWD_GANGOPS_ALLINORDER", true)
	        stats.set_bool(MPX .. "AWD_GANGOPS_LOYALTY", true)
	        stats.set_bool(MPX .. "AWD_GANGOPS_LOYALTY2", true)
	        stats.set_bool(MPX .. "AWD_GANGOPS_LOYALTY3", true)
	        stats.set_bool(MPX .. "AWD_GANGOPS_CRIMMASMD", true)
	        stats.set_bool(MPX .. "AWD_GANGOPS_CRIMMASMD2", true)
	        stats.set_bool(MPX .. "AWD_GANGOPS_CRIMMASMD3", true)
	        stats.set_bool(MPX .. "AWD_GANGOPS_SUPPORT", true)
	        for j = 0, 63 do
		        stats.set_bool_masked(MPX .. "GANGOPSPSTAT_BOOL0", true, j, MPX)
	        end
	        stats.set_masked_int(MPX .. "DLCSMUGCHARPSTAT_INT260", 3, 16, 8)
	        stats.set_masked_int(MPX .. "BUSINESSBATPSTAT_INT260", 3, 24, 8)
	        stats.set_masked_int(MPX .. "BUSINESSBATPSTAT_INT260", 3, 32, 8)
	        stats.set_masked_int(MPX .. "BUSINESSBATPSTAT_INT260", 3, 40, 8)
	        stats.set_masked_int(MPX .. "BUSINESSBATPSTAT_INT260", 3, 48, 8)
	        stats.set_int(MPX .. "AWD_DANCE_TO_SOLOMUN", 120)
	        stats.set_int(MPX .. "AWD_DANCE_TO_TALEOFUS", 120)
	        stats.set_int(MPX .. "AWD_DANCE_TO_DIXON", 120)
	        stats.set_int(MPX .. "AWD_DANCE_TO_BLKMAD", 120)
	        stats.set_int(MPX .. "AWD_CLUB_DRUNK", 200)
	        stats.set_int(MPX .. "NIGHTCLUB_VIP_APPEAR", 700)
	        stats.set_int(MPX .. "NIGHTCLUB_JOBS_DONE", 700)
	        stats.set_int(MPX .. "NIGHTCLUB_EARNINGS", 5721002)
	        stats.set_int(MPX .. "HUB_SALES_COMPLETED", 1001)
	        stats.set_int(MPX .. "HUB_EARNINGS", 20721002)
	        stats.set_int(MPX .. "DANCE_COMBO_DURATION_MINS", 3600000)
	        stats.set_int(MPX .. "NIGHTCLUB_PLAYER_APPEAR", 100)
	        stats.set_int(MPX .. "LIFETIME_HUB_GOODS_SOLD", 784672)
	        stats.set_int(MPX .. "LIFETIME_HUB_GOODS_MADE", 507822)
	        stats.set_int(MPX .. "DANCEPERFECTOWNCLUB", 120)
	        stats.set_int(MPX .. "NUMUNIQUEPLYSINCLUB", 120)
	        stats.set_int(MPX .. "DANCETODIFFDJS", 4)
	        stats.set_int(MPX .. "NIGHTCLUB_HOTSPOT_TIME_MS", 3600000)
	        stats.set_int(MPX .. "NIGHTCLUB_CONT_TOTAL", 20)
	        stats.set_int(MPX .. "NIGHTCLUB_CONT_MISSION", -1)
	        stats.set_int(MPX .. "CLUB_CONTRABAND_MISSION", 1000)
	        stats.set_int(MPX .. "HUB_CONTRABAND_MISSION", 1000)
	        stats.set_bool(MPX .. "AWD_CLUB_HOTSPOT", true)
	        stats.set_bool(MPX .. "AWD_CLUB_CLUBBER", true)
	        stats.set_bool(MPX .. "AWD_CLUB_COORD", true)
	        for j = 0, 63 do
		        stats.set_bool_masked(MPX .. "BUSINESSBATPSTAT_BOOL0", true, j, MPX)
		        stats.set_bool_masked(MPX .. "BUSINESSBATPSTAT_BOOL1", true, j, MPX)
	        end
	        if stats.get_masked_int(MPX .. "BUSINESSBATPSTAT_INT380", 0, 8) < 20 then
		        stats.set_masked_int(MPX .. "BUSINESSBATPSTAT_INT380", 20, 0, 8)
	        end
	        stats.set_masked_int(MPX .. "BUSINESSBATPSTAT_INT379", 50, 8, 8)
	        stats.set_masked_int(MPX .. "BUSINESSBATPSTAT_INT379", 100, 16, 8)
	        stats.set_masked_int(MPX .. "BUSINESSBATPSTAT_INT379", 20, 24, 8)
	        stats.set_masked_int(MPX .. "BUSINESSBATPSTAT_INT379", 80, 32, 8)
	        stats.set_masked_int(MPX .. "BUSINESSBATPSTAT_INT379", 60, 40, 8)
	        stats.set_masked_int(MPX .. "BUSINESSBATPSTAT_INT379", 40, 48, 8)
	        stats.set_masked_int(MPX .. "BUSINESSBATPSTAT_INT379", 10, 56, 8)
	        stats.set_int(MPX .. "ARN_BS_TRINKET_TICKERS", -1)
	        stats.set_int(MPX .. "ARN_BS_TRINKET_SAVED", -1)
	        stats.set_int(MPX .. "AWD_WATCH_YOUR_STEP", 50)
	        stats.set_int(MPX .. "AWD_TOWER_OFFENSE", 50)
	        stats.set_int(MPX .. "AWD_READY_FOR_WAR", 50)
	        stats.set_int(MPX .. "AWD_THROUGH_A_LENS", 50)
	        stats.set_int(MPX .. "AWD_SPINNER", 50)
	        stats.set_int(MPX .. "AWD_YOUMEANBOOBYTRAPS", 50)
	        stats.set_int(MPX .. "AWD_MASTER_BANDITO", 50)
	        stats.set_int(MPX .. "AWD_SITTING_DUCK", 50)
	        stats.set_int(MPX .. "AWD_CROWDPARTICIPATION", 50)
	        stats.set_int(MPX .. "AWD_KILL_OR_BE_KILLED", 50)
	        stats.set_int(MPX .. "AWD_MASSIVE_SHUNT", 50)
	        stats.set_int(MPX .. "AWD_YOURE_OUTTA_HERE", 200)
	        stats.set_int(MPX .. "AWD_WEVE_GOT_ONE", 50)
	        stats.set_int(MPX .. "AWD_ARENA_WAGEWORKER", 1000000)
	        stats.set_int(MPX .. "AWD_TIME_SERVED", 1000)
	        stats.set_int(MPX .. "AWD_TOP_SCORE", 55000)
	        stats.set_int(MPX .. "AWD_CAREER_WINNER", 1000)
	        stats.set_int(MPX .. "ARENAWARS_SP", 0)
	        stats.set_int(MPX .. "ARENAWARS_SKILL_LEVEL", 20)
	        stats.set_int(MPX .. "ARENAWARS_SP_LIFETIME", 100)
	        stats.set_int(MPX .. "ARENAWARS_AP", 0)
	        stats.set_int(MPX .. "ARENAWARS_AP_TIER", 1000)
	        stats.set_int(MPX .. "ARENAWARS_AP_LIFETIME", 5055000)
	        stats.set_int(MPX .. "ARENAWARS_CARRER_UNLK", -1)
	        stats.set_int(MPX .. "ARN_W_THEME_SCIFI", 1000)
	        stats.set_int(MPX .. "ARN_W_THEME_APOC", 1000)
	        stats.set_int(MPX .. "ARN_W_THEME_CONS", 1000)
	        stats.set_int(MPX .. "ARN_W_PASS_THE_BOMB", 1000)
	        stats.set_int(MPX .. "ARN_W_DETONATION", 1000)
	        stats.set_int(MPX .. "ARN_W_ARCADE_RACE", 1000)
	        stats.set_int(MPX .. "ARN_W_CTF", 1000)
	        stats.set_int(MPX .. "ARN_W_TAG_TEAM", 1000)
	        stats.set_int(MPX .. "ARN_W_DESTR_DERBY", 1000)
	        stats.set_int(MPX .. "ARN_W_CARNAGE", 1000)
	        stats.set_int(MPX .. "ARN_W_MONSTER_JAM", 1000)
	        stats.set_int(MPX .. "ARN_W_GAMES_MASTERS", 1000)
	        stats.set_int(MPX .. "ARN_L_PASS_THE_BOMB", 500)
	        stats.set_int(MPX .. "ARN_L_DETONATION", 500)
	        stats.set_int(MPX .. "ARN_L_ARCADE_RACE", 500)
	        stats.set_int(MPX .. "ARN_L_CTF", 500)
	        stats.set_int(MPX .. "ARN_L_TAG_TEAM", 500)
	        stats.set_int(MPX .. "ARN_L_DESTR_DERBY", 500)
	        stats.set_int(MPX .. "ARN_L_CARNAGE", 500)
	        stats.set_int(MPX .. "ARN_L_MONSTER_JAM", 500)
	        stats.set_int(MPX .. "ARN_L_GAMES_MASTERS", 500)
	        stats.set_int(MPX .. "NUMBER_OF_CHAMP_BOUGHT", 1000)
	        stats.set_int(MPX .. "ARN_SPECTATOR_KILLS", 1000)
	        stats.set_int(MPX .. "ARN_LIFETIME_KILLS", 1000)
	        stats.set_int(MPX .. "ARN_LIFETIME_DEATHS", 500)
	        stats.set_int(MPX .. "ARENAWARS_CARRER_WINS", 1000)
	        stats.set_int(MPX .. "ARENAWARS_CARRER_WINT", 1000)
	        stats.set_int(MPX .. "ARENAWARS_MATCHES_PLYD", 1000)
	        stats.set_int(MPX .. "ARENAWARS_MATCHES_PLYDT", 1000)
	        stats.set_int(MPX .. "ARN_SPEC_BOX_TIME_MS", 86400000)
	        stats.set_int(MPX .. "ARN_SPECTATOR_DRONE", 1000)
	        stats.set_int(MPX .. "ARN_SPECTATOR_CAMS", 1000)
	        stats.set_int(MPX .. "ARN_SMOKE", 1000)
	        stats.set_int(MPX .. "ARN_DRINK", 1000)
	        stats.set_int(MPX .. "ARN_VEH_MONSTER", 1000)
	        stats.set_int(MPX .. "ARN_VEH_MONSTER", 1000)
	        stats.set_int(MPX .. "ARN_VEH_MONSTER", 1000)
	        stats.set_int(MPX .. "ARN_VEH_CERBERUS", 1000)
	        stats.set_int(MPX .. "ARN_VEH_CERBERUS2", 1000)
	        stats.set_int(MPX .. "ARN_VEH_CERBERUS3", 1000)
	        stats.set_int(MPX .. "ARN_VEH_BRUISER", 1000)
	        stats.set_int(MPX .. "ARN_VEH_BRUISER2", 1000)
	        stats.set_int(MPX .. "ARN_VEH_BRUISER3", 1000)
	        stats.set_int(MPX .. "ARN_VEH_SLAMVAN4", 1000)
	        stats.set_int(MPX .. "ARN_VEH_SLAMVAN5", 1000)
	        stats.set_int(MPX .. "ARN_VEH_SLAMVAN6", 1000)
	        stats.set_int(MPX .. "ARN_VEH_BRUTUS", 1000)
	        stats.set_int(MPX .. "ARN_VEH_BRUTUS2", 1000)
	        stats.set_int(MPX .. "ARN_VEH_BRUTUS3", 1000)
	        stats.set_int(MPX .. "ARN_VEH_SCARAB", 1000)
	        stats.set_int(MPX .. "ARN_VEH_SCARAB2", 1000)
	        stats.set_int(MPX .. "ARN_VEH_SCARAB3", 1000)
	        stats.set_int(MPX .. "ARN_VEH_DOMINATOR4", 1000)
	        stats.set_int(MPX .. "ARN_VEH_DOMINATOR5", 1000)
	        stats.set_int(MPX .. "ARN_VEH_DOMINATOR6", 1000)
	        stats.set_int(MPX .. "ARN_VEH_IMPALER2", 1000)
	        stats.set_int(MPX .. "ARN_VEH_IMPALER3", 1000)
	        stats.set_int(MPX .. "ARN_VEH_IMPALER4", 1000)
	        stats.set_int(MPX .. "ARN_VEH_ISSI4", 1000)
	        stats.set_int(MPX .. "ARN_VEH_ISSI5", 1000)
	        stats.set_int(MPX .. "ARN_VEH_ISSI", 61000)
	        stats.set_int(MPX .. "ARN_VEH_IMPERATOR", 1000)
	        stats.set_int(MPX .. "ARN_VEH_IMPERATOR2", 1000)
	        stats.set_int(MPX .. "ARN_VEH_IMPERATOR3", 1000)
	        stats.set_int(MPX .. "ARN_VEH_ZR380", 1000)
	        stats.set_int(MPX .. "ARN_VEH_ZR3802", 1000)
	        stats.set_int(MPX .. "ARN_VEH_ZR3803", 1000)
	        stats.set_int(MPX .. "ARN_VEH_DEATHBIKE", 1000)
	        stats.set_int(MPX .. "ARN_VEH_DEATHBIKE2", 1000)
	        stats.set_int(MPX .. "ARN_VEH_DEATHBIKE3", 1000)
	        stats.set_bool(MPX .. "AWD_BEGINNER", true)
	        stats.set_bool(MPX .. "AWD_FIELD_FILLER", true)
	        stats.set_bool(MPX .. "AWD_ARMCHAIR_RACER", true)
	        stats.set_bool(MPX .. "AWD_LEARNER", true)
	        stats.set_bool(MPX .. "AWD_SUNDAY_DRIVER", true)
	        stats.set_bool(MPX .. "AWD_THE_ROOKIE", true)
	        stats.set_bool(MPX .. "AWD_BUMP_AND_RUN", true)
	        stats.set_bool(MPX .. "AWD_GEAR_HEAD", true)
	        stats.set_bool(MPX .. "AWD_DOOR_SLAMMER", true)
	        stats.set_bool(MPX .. "AWD_HOT_LAP", true)
	        stats.set_bool(MPX .. "AWD_ARENA_AMATEUR", true)
	        stats.set_bool(MPX .. "AWD_PAINT_TRADER", true)
	        stats.set_bool(MPX .. "AWD_SHUNTER", true)
	        stats.set_bool(MPX .. "AWD_JOCK", true)
	        stats.set_bool(MPX .. "AWD_WARRIOR", true)
	        stats.set_bool(MPX .. "AWD_T_BONE", true)
	        stats.set_bool(MPX .. "AWD_MAYHEM", true)
	        stats.set_bool(MPX .. "AWD_WRECKER", true)
	        stats.set_bool(MPX .. "AWD_CRASH_COURSE", true)
	        stats.set_bool(MPX .. "AWD_ARENA_LEGEND", true)
	        stats.set_bool(MPX .. "AWD_PEGASUS", true)
	        stats.set_bool(MPX .. "AWD_UNSTOPPABLE", true)
	        stats.set_bool(MPX .. "AWD_CONTACT_SPORT", true)
	        stats.set_masked_int(MPX .. "ARENAWARSPSTAT_INT", 1, 35, 8)
	        for i = 0, 8 do
		        for j = 0, 63 do
			        stats.set_bool_masked(MPX .. "ARENAWARSPSTAT_BOOL" .. i, true, j, MPX)
		        end
	        end
	        stats.set_int(MPX .. "AWD_ODD_JOBS", 50)
	        stats.set_int(MPX .. "VCM_FLOW_PROGRESS", -1)
	        stats.set_int(MPX .. "VCM_STORY_PROGRESS", 5)
	        stats.set_bool(MPX .. "AWD_FIRST_TIME1", true)
	        stats.set_bool(MPX .. "AWD_FIRST_TIME2", true)
	        stats.set_bool(MPX .. "AWD_FIRST_TIME3", true)
	        stats.set_bool(MPX .. "AWD_FIRST_TIME4", true)
	        stats.set_bool(MPX .. "AWD_FIRST_TIME5", true)
	        stats.set_bool(MPX .. "AWD_FIRST_TIME6", true)
	        stats.set_bool(MPX .. "AWD_ALL_IN_ORDER", true)
	        stats.set_bool(MPX .. "AWD_SUPPORTING_ROLE", true)
	        stats.set_bool(MPX .. "AWD_LEADER", true)
	        stats.set_bool(MPX .. "AWD_SURVIVALIST", true)
	        Paragon = stats.get_bool(MPX .. "CAS_VEHICLE_REWARD")
	        if Paragon == true then
		        stats.set_bool(MPX .. "CAS_VEHICLE_REWARD", true)
	        else
		        stats.set_bool(MPX .. "CAS_VEHICLE_REWARD", false)
	        end
	        for i = 0, 6 do
		        for j = 0, 63 do
			        stats.set_bool_masked(MPX .. "CASINOPSTAT_BOOL" .. i, true, j, MPX)
		        end
	        end
	        stats.set_int(MPX .. "CAS_HEIST_NOTS", -1)
	        stats.set_int(MPX .. "CAS_HEIST_FLOW", -1)
	        stats.set_int(MPX .. "SIGNAL_JAMMERS_COLLECTED", 50)
	        stats.set_int(MPX .. "AWD_PREPARATION", 40)
	        stats.set_int(MPX .. "AWD_ASLEEPONJOB", 20)
	        stats.set_int(MPX .. "AWD_DAICASHCRAB", 100000)
	        stats.set_int(MPX .. "AWD_BIGBRO", 40)
	        stats.set_int(MPX .. "AWD_SHARPSHOOTER", 40)
	        stats.set_int(MPX .. "AWD_RACECHAMP", 40)
	        stats.set_int(MPX .. "AWD_BATSWORD", 1000000)
	        stats.set_int(MPX .. "AWD_COINPURSE", 950000)
	        stats.set_int(MPX .. "AWD_ASTROCHIMP", 3000000)
	        stats.set_int(MPX .. "AWD_MASTERFUL", 40000)
	        stats.set_int(MPX .. "H3_BOARD_DIALOGUE0", -1)
	        stats.set_int(MPX .. "H3_BOARD_DIALOGUE1", -1)
	        stats.set_int(MPX .. "H3_BOARD_DIALOGUE2", -1)
	        stats.set_int(MPX .. "H3_VEHICLESUSED", -1)
	        stats.set_int(MPX .. "H3_CR_STEALTH_1A", 100)
	        stats.set_int(MPX .. "H3_CR_STEALTH_2B_RAPP", 100)
	        stats.set_int(MPX .. "H3_CR_STEALTH_2C_SIDE", 100)
	        stats.set_int(MPX .. "H3_CR_STEALTH_3A", 100)
	        stats.set_int(MPX .. "H3_CR_STEALTH_4A", 100)
	        stats.set_int(MPX .. "H3_CR_STEALTH_5A", 100)
	        stats.set_int(MPX .. "H3_CR_SUBTERFUGE_1A", 100)
	        stats.set_int(MPX .. "H3_CR_SUBTERFUGE_2A", 100)
	        stats.set_int(MPX .. "H3_CR_SUBTERFUGE_2B", 100)
	        stats.set_int(MPX .. "H3_CR_SUBTERFUGE_3A", 100)
	        stats.set_int(MPX .. "H3_CR_SUBTERFUGE_3B", 100)
	        stats.set_int(MPX .. "H3_CR_SUBTERFUGE_4A", 100)
	        stats.set_int(MPX .. "H3_CR_SUBTERFUGE_5A", 100)
	        stats.set_int(MPX .. "H3_CR_DIRECT_1A", 100)
	        stats.set_int(MPX .. "H3_CR_DIRECT_2A1", 100)
	        stats.set_int(MPX .. "H3_CR_DIRECT_2A2", 100)
	        stats.set_int(MPX .. "H3_CR_DIRECT_2BP", 100)
	        stats.set_int(MPX .. "H3_CR_DIRECT_2C", 100)
	        stats.set_int(MPX .. "H3_CR_DIRECT_3A", 100)
	        stats.set_int(MPX .. "H3_CR_DIRECT_4A", 100)
	        stats.set_int(MPX .. "H3_CR_DIRECT_5A", 100)
	        stats.set_int(MPX .. "CR_ORDER", 100)
	        stats.set_bool(MPX .. "AWD_SCOPEOUT", true)
	        stats.set_bool(MPX .. "AWD_CREWEDUP", true)
	        stats.set_bool(MPX .. "AWD_MOVINGON", true)
	        stats.set_bool(MPX .. "AWD_PROMOCAMP", true)
	        stats.set_bool(MPX .. "AWD_GUNMAN", true)
	        stats.set_bool(MPX .. "AWD_SMASHNGRAB", true)
	        stats.set_bool(MPX .. "AWD_INPLAINSI", true)
	        stats.set_bool(MPX .. "AWD_UNDETECTED", true)
	        stats.set_bool(MPX .. "AWD_ALLROUND", true)
	        stats.set_bool(MPX .. "AWD_ELITETHEIF", true)
	        stats.set_bool(MPX .. "AWD_PRO", true)
	        stats.set_bool(MPX .. "AWD_SUPPORTACT", true)
	        stats.set_bool(MPX .. "AWD_SHAFTED", true)
	        stats.set_bool(MPX .. "AWD_COLLECTOR", true)
	        stats.set_bool(MPX .. "AWD_DEADEYE", true)
	        stats.set_bool(MPX .. "AWD_PISTOLSATDAWN", true)
	        stats.set_bool(MPX .. "AWD_TRAFFICAVOI", true)
	        stats.set_bool(MPX .. "AWD_CANTCATCHBRA", true)
	        stats.set_bool(MPX .. "AWD_WIZHARD", true)
	        stats.set_bool(MPX .. "AWD_APEESCAPE", true)
	        stats.set_bool(MPX .. "AWD_MONKEYKIND", true)
	        stats.set_bool(MPX .. "AWD_AQUAAPE", true)
	        stats.set_bool(MPX .. "AWD_KEEPFAITH", true)
	        stats.set_bool(MPX .. "AWD_TRUELOVE", true)
	        stats.set_bool(MPX .. "AWD_NEMESIS", true)
	        stats.set_bool(MPX .. "AWD_FRIENDZONED", true)
	        stats.set_bool(MPX .. "VCM_FLOW_CS_RSC_SEEN", true)
	        stats.set_bool(MPX .. "VCM_FLOW_CS_BWL_SEEN", true)
	        stats.set_bool(MPX .. "VCM_FLOW_CS_MTG_SEEN", true)
	        stats.set_bool(MPX .. "VCM_FLOW_CS_OIL_SEEN", true)
	        stats.set_bool(MPX .. "VCM_FLOW_CS_DEF_SEEN", true)
	        stats.set_bool(MPX .. "VCM_FLOW_CS_FIN_SEEN", true)
	        stats.set_bool(MPX .. "HELP_FURIA", true)
	        stats.set_bool(MPX .. "HELP_MINITAN", true)
	        stats.set_bool(MPX .. "HELP_YOSEMITE2", true)
	        stats.set_bool(MPX .. "HELP_ZHABA", true)
	        stats.set_bool(MPX .. "HELP_IMORGEN", true)
	        stats.set_bool(MPX .. "HELP_SULTAN2", true)
	        stats.set_bool(MPX .. "HELP_VAGRANT", true)
	        stats.set_bool(MPX .. "HELP_VSTR", true)
	        stats.set_bool(MPX .. "HELP_STRYDER", true)
	        stats.set_bool(MPX .. "HELP_SUGOI", true)
	        stats.set_bool(MPX .. "HELP_KANJO", true)
	        stats.set_bool(MPX .. "HELP_FORMULA", true)
	        stats.set_bool(MPX .. "HELP_FORMULA2", true)
	        stats.set_bool(MPX .. "HELP_JB7002", true)
	        for i = 0, 4 do
		        for j = 0, 63 do
			        stats.set_bool_masked(MPX .. "CASINOHSTPSTAT_BOOL" .. i, true, j, MPX)
		        end
	        end
	        stats.set_int(MPX .. "AWD_PREPARATION", 50)
	        stats.set_int(MPX .. "AWD_ASLEEPONJOB", 20)
	        stats.set_int(MPX .. "AWD_DAICASHCRAB", 100000)
	        stats.set_int(MPX .. "AWD_BIGBRO", 40)
	        stats.set_int(MPX .. "AWD_SHARPSHOOTER", 40)
	        stats.set_int(MPX .. "AWD_RACECHAMP", 40)
	        stats.set_int(MPX .. "AWD_BATSWORD", 1000000)
	        stats.set_int(MPX .. "AWD_COINPURSE", 950000)
	        stats.set_int(MPX .. "AWD_ASTROCHIMP", 3000000)
	        stats.set_int(MPX .. "AWD_MASTERFUL", 40000)
	        stats.set_int(MPX .. "SCGW_NUM_WINS_GANG_0", 50)
	        stats.set_int(MPX .. "SCGW_NUM_WINS_GANG_1", 50)
	        stats.set_int(MPX .. "SCGW_NUM_WINS_GANG_2", 50)
	        stats.set_int(MPX .. "SCGW_NUM_WINS_GANG_3", 50)
	        stats.set_int(MPX .. "CH_ARC_CAB_CLAW_TROPHY", -1)
	        stats.set_int(MPX .. "CH_ARC_CAB_LOVE_TROPHY", -1)
	        stats.set_int(MPX .. "IAP_MAX_MOON_DIST", 2147483647)
	        stats.set_int(MPX .. "SCGW_INITIALS_0", 69644)
	        stats.set_int(MPX .. "SCGW_INITIALS_1", 50333)
	        stats.set_int(MPX .. "SCGW_INITIALS_2", 63512)
	        stats.set_int(MPX .. "SCGW_INITIALS_3", 46136)
	        stats.set_int(MPX .. "SCGW_INITIALS_4", 21638)
	        stats.set_int(MPX .. "SCGW_INITIALS_5", 2133)
	        stats.set_int(MPX .. "SCGW_INITIALS_6", 1215)
	        stats.set_int(MPX .. "SCGW_INITIALS_7", 2444)
	        stats.set_int(MPX .. "SCGW_INITIALS_8", 38023)
	        stats.set_int(MPX .. "SCGW_INITIALS_9", 2233)
	        stats.set_int(MPX .. "FOOTAGE_INITIALS_0", 0)
	        stats.set_int(MPX .. "FOOTAGE_INITIALS_1", 64)
	        stats.set_int(MPX .. "FOOTAGE_INITIALS_2", 8457)
	        stats.set_int(MPX .. "FOOTAGE_INITIALS_3", 91275)
	        stats.set_int(MPX .. "FOOTAGE_INITIALS_4", 53260)
	        stats.set_int(MPX .. "FOOTAGE_INITIALS_5", 78663)
	        stats.set_int(MPX .. "FOOTAGE_INITIALS_6", 25103)
	        stats.set_int(MPX .. "FOOTAGE_INITIALS_7", 102401)
	        stats.set_int(MPX .. "FOOTAGE_INITIALS_8", 12672)
	        stats.set_int(MPX .. "FOOTAGE_INITIALS_9", 74380)
	        stats.set_int(MPX .. "FOOTAGE_SCORE_0", 284544)
	        stats.set_int(MPX .. "FOOTAGE_SCORE_1", 275758)
	        stats.set_int(MPX .. "FOOTAGE_SCORE_2", 100000)
	        stats.set_int(MPX .. "FOOTAGE_SCORE_3", 90000)
	        stats.set_int(MPX .. "FOOTAGE_SCORE_4", 80000)
	        stats.set_int(MPX .. "FOOTAGE_SCORE_5", 70000)
	        stats.set_int(MPX .. "FOOTAGE_SCORE_6", 60000)
	        stats.set_int(MPX .. "FOOTAGE_SCORE_7", 50000)
	        stats.set_int(MPX .. "FOOTAGE_SCORE_8", 40000)
	        stats.set_int(MPX .. "FOOTAGE_SCORE_9", 30000)
	        for i = 0, 9 do
		        stats.set_int(MPX .. "IAP_INITIALS_" .. i, 50)
		        stats.set_int(MPX .. "IAP_SCORE_" .. i, 50)
		        stats.set_int(MPX .. "IAP_SCORE_" .. i, 50)
		        stats.set_int(MPX .. "SCGW_SCORE_" .. i, 50)
		        stats.set_int(MPX .. "DG_DEFENDER_INITIALS_" .. i, 69644)
		        stats.set_int(MPX .. "DG_DEFENDER_SCORE_" .. i, 50)
		        stats.set_int(MPX .. "DG_MONKEY_INITIALS_" .. i, 69644)
		        stats.set_int(MPX .. "DG_MONKEY_SCORE_" .. i, 50)
		        stats.set_int(MPX .. "DG_PENETRATOR_INITIALS_" .. i, 69644)
		        stats.set_int(MPX .. "DG_PENETRATOR_SCORE_" .. i, 50)
		        stats.set_int(MPX .. "GGSM_INITIALS_" .. i, 69644)
		        stats.set_int(MPX .. "GGSM_SCORE_" .. i, 50)
		        stats.set_int(MPX .. "TWR_INITIALS_" .. i, 69644)
		        stats.set_int(MPX .. "TWR_SCORE_" .. i, 50)
	        end
	        stats.set_bool(MPX .. "AWD_SCOPEOUT", true)
	        stats.set_bool(MPX .. "AWD_CREWEDUP", true)
	        stats.set_bool(MPX .. "AWD_MOVINGON", true)
	        stats.set_bool(MPX .. "AWD_PROMOCAMP", true)
	        stats.set_bool(MPX .. "AWD_GUNMAN", true)
	        stats.set_bool(MPX .. "AWD_SMASHNGRAB", true)
	        stats.set_bool(MPX .. "AWD_INPLAINSI", true)
	        stats.set_bool(MPX .. "AWD_UNDETECTED", true)
	        stats.set_bool(MPX .. "AWD_ALLROUND", true)
	        stats.set_bool(MPX .. "AWD_ELITETHEIF", true)
	        stats.set_bool(MPX .. "AWD_PRO", true)
	        stats.set_bool(MPX .. "AWD_SUPPORTACT", true)
	        stats.set_bool(MPX .. "AWD_SHAFTED", true)
	        stats.set_bool(MPX .. "AWD_COLLECTOR", true)
	        stats.set_bool(MPX .. "AWD_DEADEYE", true)
	        stats.set_bool(MPX .. "AWD_PISTOLSATDAWN", true)
	        stats.set_bool(MPX .. "AWD_TRAFFICAVOI", true)
	        stats.set_bool(MPX .. "AWD_CANTCATCHBRA", true)
	        stats.set_bool(MPX .. "AWD_WIZHARD", true)
	        stats.set_bool(MPX .. "AWD_APEESCAP", true)
	        stats.set_bool(MPX .. "AWD_MONKEYKIND", true)
	        stats.set_bool(MPX .. "AWD_AQUAAPE", true)
	        stats.set_bool(MPX .. "AWD_KEEPFAITH", true)
	        stats.set_bool(MPX .. "AWD_TRUELOVE", true)
	        stats.set_bool(MPX .. "AWD_NEMESIS", true)
	        stats.set_bool(MPX .. "AWD_FRIENDZONED", true)
	        stats.set_bool(MPX .. "IAP_CHALLENGE_0", true)
	        stats.set_bool(MPX .. "IAP_CHALLENGE_1", true)
	        stats.set_bool(MPX .. "IAP_CHALLENGE_2", true)
	        stats.set_bool(MPX .. "IAP_CHALLENGE_3", true)
	        stats.set_bool(MPX .. "IAP_CHALLENGE_4", true)
	        stats.set_bool(MPX .. "IAP_GOLD_TANK", true)
	        stats.set_bool(MPX .. "SCGW_WON_NO_DEATHS", true)
	        for j = 290449, 290468 do
		        globals.set_int(j, 1)
	        end
	        for i = 0, 4 do
		        for j = 0, 63 do
			        stats.set_bool_masked(MPX .. "CASINOHSTPSTAT_BOOL" .. i, true, j, MPX)
		        end
	        end
	        for i = 0, 6 do
		        for j = 0, 63 do
			        stats.set_bool_masked(MPX .. "CASINOPSTAT_BOOL" .. i, true, j, MPX)
		        end
	        end
	        stats.set_bool(MPX .. "AWD_KINGOFQUB3D", true)
	        stats.set_bool(MPX .. "AWD_QUBISM", true)
	        stats.set_bool(MPX .. "AWD_QUIBITS", true)
	        stats.set_bool(MPX .. "AWD_GODOFQUB3D", true)
	        stats.set_bool(MPX .. "AWD_ELEVENELEVEN", true)
	        stats.set_bool(MPX .. "AWD_GOFOR11TH", true)
	        stats.set_masked_int(MPX .. "SU20PSTAT_INT", 1, 35, 8)
	        for i = 0, 1 do
		        for j = 0, 63 do
			        stats.set_bool_masked(MPX .. "SU20PSTAT_BOOL" .. i, true, j, MPX)
			        stats.set_bool_masked(MPX .. "SU20TATTOOSTAT_BOOL" .. i, true, j, MPX)
		        end
	        end
	        stats.set_bool(MPX .. "AWD_INTELGATHER", true)
	        stats.set_bool(MPX .. "AWD_COMPOUNDINFILT", true)
	        stats.set_bool(MPX .. "AWD_LOOT_FINDER", true)
	        stats.set_bool(MPX .. "AWD_MAX_DISRUPT", true)
	        stats.set_bool(MPX .. "AWD_THE_ISLAND_HEIST", true)
	        stats.set_bool(MPX .. "AWD_GOING_ALONE", true)
	        stats.set_bool(MPX .. "AWD_TEAM_WORK", true)
	        stats.set_bool(MPX .. "AWD_MIXING_UP", true)
	        stats.set_bool(MPX .. "AWD_TEAM_WORK", true)
	        stats.set_bool(MPX .. "AWD_MIXING_UP", true)
	        stats.set_bool(MPX .. "AWD_PRO_THIEF", true)
	        stats.set_bool(MPX .. "AWD_CAT_BURGLAR", true)
	        stats.set_bool(MPX .. "AWD_ONE_OF_THEM", true)
	        stats.set_bool(MPX .. "AWD_GOLDEN_GUN", true)
	        stats.set_bool(MPX .. "AWD_ELITE_THIEF", true)
	        stats.set_bool(MPX .. "AWD_PROFESSIONAL", true)
	        stats.set_bool(MPX .. "AWD_HELPING_OUT", true)
	        stats.set_bool(MPX .. "AWD_COURIER", true)
	        stats.set_bool(MPX .. "AWD_PARTY_VIBES", true)
	        stats.set_bool(MPX .. "AWD_HELPING_HAND", true)
	        stats.set_bool(MPX .. "AWD_ELEVENELEVEN", true)
	        stats.set_bool(MPX .. "COMPLETE_H4_F_USING_VETIR", true)
	        stats.set_bool(MPX .. "COMPLETE_H4_F_USING_LONGFIN", true)
	        stats.set_bool(MPX .. "COMPLETE_H4_F_USING_ANNIH", true)
	        stats.set_bool(MPX .. "COMPLETE_H4_F_USING_ALKONOS", true)
	        stats.set_bool(MPX .. "COMPLETE_H4_F_USING_PATROLB", true)
	        stats.set_int(MPX .. "AWD_LOSTANDFOUND", 500000)
	        stats.set_int(MPX .. "AWD_SUNSET", 1800000)
	        stats.set_int(MPX .. "AWD_TREASURE_HUNTER", 1000000)
	        stats.set_int(MPX .. "AWD_WRECK_DIVING", 1000000)
	        stats.set_int(MPX .. "AWD_KEINEMUSIK", 1800000)
	        stats.set_int(MPX .. "AWD_PALMS_TRAX", 1800000)
	        stats.set_int(MPX .. "AWD_MOODYMANN", 1800000)
	        stats.set_int(MPX .. "AWD_FILL_YOUR_BAGS", 1000000000)
	        stats.set_int(MPX .. "AWD_WELL_PREPARED", 80)
	        stats.set_int(MPX .. "H4_H4_DJ_MISSIONS", -1)
	        stats.set_int(MPX .. "H4CNF_APPROACH", -1)
	        stats.set_int(MPX .. "H4_MISSIONS", -1)
	        stats.set_int(MPX .. "H4_PLAYTHROUGH_STATUS", 100)
	        for i = 0, 2 do
		        for j = 0, 63 do
			        stats.set_bool_masked(MPX .. "HISLANDPSTAT_BOOL" .. i, true, j, MPX)
		        end
	        end
	        stats.set_int(MPX .. "AWD_CAR_CLUB_MEM", 100)
	        stats.set_int(MPX .. "AWD_SPRINTRACER", 50)
	        stats.set_int(MPX .. "AWD_STREETRACER", 50)
	        stats.set_int(MPX .. "AWD_PURSUITRACER", 50)
	        stats.set_int(MPX .. "AWD_TEST_CAR", 240)
	        stats.set_int(MPX .. "AWD_AUTO_SHOP", 50)
	        stats.set_int(MPX .. "AWD_GROUNDWORK", 40)
	        stats.set_int(MPX .. "AWD_CAR_EXPORT", 100)
	        stats.set_int(MPX .. "AWD_ROBBERY_CONTRACT", 100)
	        stats.set_int(MPX .. "AWD_FACES_OF_DEATH", 100)
	        stats.set_bool(MPX .. "AWD_CAR_CLUB", true)
	        stats.set_bool(MPX .. "AWD_PRO_CAR_EXPORT", true)
	        stats.set_bool(MPX .. "AWD_UNION_DEPOSITORY", true)
	        stats.set_bool(MPX .. "AWD_MILITARY_CONVOY", true)
	        stats.set_bool(MPX .. "AWD_FLEECA_BANK", true)
	        stats.set_bool(MPX .. "AWD_FREIGHT_TRAIN", true)
	        stats.set_bool(MPX .. "AWD_BOLINGBROKE_ASS", true)
	        stats.set_bool(MPX .. "AWD_IAA_RAID", true)
	        stats.set_bool(MPX .. "AWD_METH_JOB", true)
	        stats.set_bool(MPX .. "AWD_BUNKER_RAID", true)
	        stats.set_bool(MPX .. "AWD_STRAIGHT_TO_VIDEO", true)
	        stats.set_bool(MPX .. "AWD_MONKEY_C_MONKEY_DO", true)
	        stats.set_bool(MPX .. "AWD_TRAINED_TO_KILL", true)
	        stats.set_bool(MPX .. "AWD_DIRECTOR", true)
	        for i = 0, 8 do
		        for j = 0, 63 do
			        stats.set_bool_masked(MPX .. "TUNERPSTAT_BOOL" .. i, true, j, MPX)
		        end
	        end
	        stats.set_int(MPX .. "AWD_CONTRACTOR", 50)
	        stats.set_int(MPX .. "AWD_COLD_CALLER", 50)
	        stats.set_int(MPX .. "AWD_PRODUCER", 60)
	        stats.set_int(MPX .. "FIXERTELEPHONEHITSCOMPL", 10)
	        stats.set_int(MPX .. "PAYPHONE_BONUS_KILL_METHOD", 10)
	        stats.set_int(MPX .. "PAYPHONE_BONUS_KILL_METHOD", -1)
	        stats.set_int(MPX .. "FIXER_GENERAL_BS", -1)
	        stats.set_int(MPX .. "FIXER_COMPLETED_BS", -1)
	        stats.set_int(MPX .. "FIXER_STORY_BS", -1)
	        stats.set_int(MPX .. "FIXER_STORY_STRAND", -1)
	        stats.set_int(MPX .. "FIXER_STORY_COOLDOWN", -1)
	        stats.set_int(MPX .. "FIXER_COUNT", 510)
	        stats.set_int(MPX .. "FIXER_SC_VEH_RECOVERED", 85)
	        stats.set_int(MPX .. "FIXER_SC_VAL_RECOVERED", 85)
	        stats.set_int(MPX .. "FIXER_SC_GANG_TERMINATED", 85)
	        stats.set_int(MPX .. "FIXER_SC_VIP_RESCUED", 85)
	        stats.set_int(MPX .. "FIXER_SC_ASSETS_PROTECTED", 85)
	        stats.set_int(MPX .. "FIXER_SC_EQ_DESTROYED", 85)
	        stats.set_int(MPX .. "FIXER_EARNINGS", 19734860)
	        stats.set_bool(MPX .. "AWD_TEEING_OFF", true)
	        stats.set_bool(MPX .. "AWD_PARTY_NIGHT", true)
	        stats.set_bool(MPX .. "AWD_BILLIONAIRE_GAMES", true)
	        stats.set_bool(MPX .. "AWD_HOOD_PASS", true)
	        stats.set_bool(MPX .. "AWD_STUDIO_TOUR", true)
	        stats.set_bool(MPX .. "AWD_DONT_MESS_DRE", true)
	        stats.set_bool(MPX .. "AWD_BACKUP", true)
	        stats.set_bool(MPX .. "AWD_SHORTFRANK_1", true)
	        stats.set_bool(MPX .. "AWD_SHORTFRANK_2", true)
	        stats.set_bool(MPX .. "AWD_SHORTFRANK_3", true)
	        stats.set_bool(MPX .. "AWD_CONTR_KILLER", true)
	        stats.set_bool(MPX .. "AWD_DOGS_BEST_FRIEND", true)
	        stats.set_bool(MPX .. "AWD_MUSIC_STUDIO", true)
	        stats.set_bool(MPX .. "AWD_SHORTLAMAR_1", true)
	        stats.set_bool(MPX .. "AWD_SHORTLAMAR_2", true)
	        stats.set_bool(MPX .. "AWD_SHORTLAMAR_3", true)
	        stats.set_bool(MPX .. "BS_FRANKLIN_DIALOGUE_0", true)
	        stats.set_bool(MPX .. "BS_FRANKLIN_DIALOGUE_1", true)
	        stats.set_bool(MPX .. "BS_FRANKLIN_DIALOGUE_2", true)
	        stats.set_bool(MPX .. "BS_IMANI_D_APP_SETUP", true)
	        stats.set_bool(MPX .. "BS_IMANI_D_APP_STRAND", true)
	        stats.set_bool(MPX .. "BS_IMANI_D_APP_PARTY", true)
	        stats.set_bool(MPX .. "BS_IMANI_D_APP_PARTY_2", true)
	        stats.set_bool(MPX .. "BS_IMANI_D_APP_PARTY_F", true)
	        stats.set_bool(MPX .. "BS_IMANI_D_APP_BILL", true)
	        stats.set_bool(MPX .. "BS_IMANI_D_APP_BILL_2", true)
	        stats.set_bool(MPX .. "BS_IMANI_D_APP_BILL_F", true)
	        stats.set_bool(MPX .. "BS_IMANI_D_APP_HOOD", true)
	        stats.set_bool(MPX .. "BS_IMANI_D_APP_HOOD_2", true)
	        stats.set_bool(MPX .. "BS_IMANI_D_APP_HOOD_F", true)
	        for j = 0, 63 do
		        stats.set_bool_masked(MPX .. "FIXERPSTAT_BOOL0", true, j, MPX)
		        stats.set_bool_masked(MPX .. "FIXERPSTAT_BOOL1", true, j, MPX)
		        stats.set_bool_masked(MPX .. "FIXERTATTOOSTAT_BOOL0", true, j, MPX)
	        end    
        end)
        JSXX:add_sameline()   ------同行
		JSXX:add_button("全部重置", function()
			stats.set_int(MPX .. "AWD_FM_DM_WINS", 0)
			stats.set_int(MPX .. "AWD_FM_TDM_WINS", 0)
			stats.set_int(MPX .. "AWD_FM_TDM_MVP", 0)
			stats.set_int(MPX .. "AWD_RACES_WON", 0)
			stats.set_int(MPX .. "AWD_FMWINAIRRACE", 0)
			stats.set_int(MPX .. "AWD_FMWINSEARACE", 0)
			stats.set_int(MPX .. "AWD_FM_GTA_RACES_WON", 0)
			stats.set_int(MPX .. "AWD_FMRALLYWONDRIVE", 0)
			stats.set_int(MPX .. "AWD_FMRALLYWONNAV", 0)
			stats.set_int(MPX .. "AWD_FMWINRACETOPOINTS", 0)
			stats.set_int(MPX .. "AWD_FM_RACE_LAST_FIRST", 0)
			stats.set_int(MPX .. "AWD_FM_RACES_FASTEST_LAP", 0)
			stats.set_int(MPX .. "AWD_FMHORDWAVESSURVIVE", 0)
			stats.set_int(MPX .. "NUMBER_SLIPSTREAMS_IN_RACE", 0)
			stats.set_int(MPX .. "NUMBER_TURBO_STARTS_IN_RACE", 0)
			stats.set_int(MPX .. "AWD_NO_ARMWRESTLING_WINS", 0)
			stats.set_int(MPX .. "MOST_ARM_WRESTLING_WINS", 0)
			stats.set_int(MPX .. "AWD_WIN_AT_DARTS", 0)
			stats.set_int(MPX .. "AWD_FM_GOLF_WON", 0)
			stats.set_int(MPX .. "AWD_FM_TENNIS_WON", 0)
			stats.set_int(MPX .. "AWD_FM_SHOOTRANG_CT_WON", 0)
			stats.set_int(MPX .. "AWD_FM_SHOOTRANG_RT_WON", 0)
			stats.set_int(MPX .. "AWD_FM_SHOOTRANG_TG_WON", 0)
			stats.set_int(MPX .. "AWD_WIN_CAPTURES", 0)
			stats.set_int(MPX .. "AWD_WIN_CAPTURE_DONT_DYING", 0)
			stats.set_int(MPX .. "AWD_WIN_LAST_TEAM_STANDINGS", 0)
			stats.set_int(MPX .. "AWD_ONLY_PLAYER_ALIVE_LTS", 0)
			stats.set_int(MPX .. "AWD_KILL_TEAM_YOURSELF_LTS", 0)
			stats.set_int(MPX .. "AIR_LAUNCHES_OVER_0M", 0)
			stats.set_int(MPX .. "AWD_CARS_EXPORTED", 0)
			stats.set_int(MPX .. "AWD_LESTERDELIVERVEHICLES", 0)
			stats.set_int(MPX .. "CR_DIFFERENT_DM", 0)
			stats.set_int(MPX .. "CR_DIFFERENT_RACES", 0)
			stats.set_int(MPX .. "AWD_PARACHUTE_JUMPS_0M", 0)
			stats.set_int(MPX .. "AWD_PARACHUTE_JUMPS_0M", 0)
			stats.set_int(MPX .. "AWD_FMBASEJMP", 0)
			stats.set_int(MPX .. "AWD_FM_GOLF_BIRDIES", 0)
			stats.set_int(MPX .. "AWD_FM_TENNIS_ACE", 0)
			stats.set_int(MPX .. "AWD_FMBBETWIN", 0)
			stats.set_int(MPX .. "AWD_LAPDANCES", 0)
			stats.set_int(MPX .. "AWD_FMCRATEDROPS", 0)
			stats.set_int(MPX .. "AWD_NO_HAIRCUTS", 0)
			stats.set_int(MPX .. "AWD_DROPOFF_CAP_PACKAGES", 0)
			stats.set_int(MPX .. "AWD_PICKUP_CAP_PACKAGES", 0)
			stats.set_int(MPX .. "AWD_MENTALSTATE_TO_NORMAL", 0)
			stats.set_int(MPX .. "AWD_TRADE_IN_YOUR_PROPERTY", 0)
			stats.set_int(MPX .. "NO_PHOTOS_TAKEN", 0)
			stats.set_int(MPX .. "BOUNTSONU", 0)
			stats.set_int(MPX .. "BOUNTPLACED", 0)
			stats.set_int(MPX .. "BETAMOUNT", 0)
			stats.set_int(MPX .. "CRARMWREST", 0)
			stats.set_int(MPX .. "CRBASEJUMP", 0)
			stats.set_int(MPX .. "CRDARTS", 0)
			stats.set_int(MPX .. "CRDM", 0)
			stats.set_int(MPX .. "CRGANGHIDE", 0)
			stats.set_int(MPX .. "CRGOLF", 0)
			stats.set_int(MPX .. "CRHORDE", 0)
			stats.set_int(MPX .. "CRMISSION", 0)
			stats.set_int(MPX .. "CRSHOOTRNG", 0)
			stats.set_int(MPX .. "CRTENNIS", 0)
			stats.set_int(MPX .. "NO_TIMES_CINEMA", 0)
			stats.set_int(MPX .. "CHAR_WEAP_UNLOCKED", 0)
			stats.set_int(MPX .. "CHAR_WEAP_UNLOCKED2", 0)
			stats.set_int(MPX .. "CHAR_WEAP_UNLOCKED3", 0)
			stats.set_int(MPX .. "CHAR_WEAP_UNLOCKED0", 0)
			stats.set_int(MPX .. "CHAR_WEAP_ADDON_1_UNLCK", 0)
			stats.set_int(MPX .. "CHAR_WEAP_ADDON_2_UNLCK", 0)
			stats.set_int(MPX .. "CHAR_WEAP_ADDON_3_UNLCK", 0)
			stats.set_int(MPX .. "CHAR_WEAP_ADDON_0_UNLCK", 0)
			stats.set_int(MPX .. "CHAR_WEAP_FREE", 0)
			stats.set_int(MPX .. "CHAR_WEAP_FREE2", 0)
			stats.set_int(MPX .. "CHAR_FM_WEAP_FREE", 0)
			stats.set_int(MPX .. "CHAR_FM_WEAP_FREE2", 0)
			stats.set_int(MPX .. "CHAR_FM_WEAP_FREE3", 0)
			stats.set_int(MPX .. "CHAR_FM_WEAP_FREE0", 0)
			stats.set_int(MPX .. "CHAR_WEAP_PURCHASED", 0)
			stats.set_int(MPX .. "CHAR_WEAP_PURCHASED2", 0)
			stats.set_int(MPX .. "WEAPON_PICKUP_BITSET", 0)
			stats.set_int(MPX .. "WEAPON_PICKUP_BITSET2", 0)
			stats.set_int(MPX .. "CHAR_FM_WEAP_UNLOCKED", 0)
			stats.set_int(MPX .. "NO_WEAPONS_UNLOCK", 0)
			stats.set_int(MPX .. "NO_WEAPON_MODS_UNLOCK", 0)
			stats.set_int(MPX .. "NO_WEAPON_CLR_MOD_UNLOCK", 0)
			stats.set_int(MPX .. "CHAR_FM_WEAP_UNLOCKED2", 0)
			stats.set_int(MPX .. "CHAR_FM_WEAP_UNLOCKED3", 0)
			stats.set_int(MPX .. "CHAR_FM_WEAP_UNLOCKED0", 0)
			stats.set_int(MPX .. "CHAR_KIT_1_FM_UNLCK", 0)
			stats.set_int(MPX .. "CHAR_KIT_2_FM_UNLCK", 0)
			stats.set_int(MPX .. "CHAR_KIT_3_FM_UNLCK", 0)
			stats.set_int(MPX .. "CHAR_KIT_0_FM_UNLCK", 0)
			stats.set_int(MPX .. "CHAR_KIT_5_FM_UNLCK", 0)
			stats.set_int(MPX .. "CHAR_KIT_6_FM_UNLCK", 0)
			stats.set_int(MPX .. "CHAR_KIT_7_FM_UNLCK", 0)
			stats.set_int(MPX .. "CHAR_KIT_8_FM_UNLCK", 0)
			stats.set_int(MPX .. "CHAR_KIT_9_FM_UNLCK", 0)
			stats.set_int(MPX .. "CHAR_KIT_0_FM_UNLCK", 0)
			stats.set_int(MPX .. "CHAR_KIT_11_FM_UNLCK", 0)
			stats.set_int(MPX .. "CHAR_KIT_12_FM_UNLCK", 0)
			stats.set_int(MPX .. "CHAR_KIT_FM_PURCHASE", 0)
			stats.set_int(MPX .. "CHAR_WEAP_FM_PURCHASE", 0)
			stats.set_int(MPX .. "CHAR_WEAP_FM_PURCHASE2", 0)
			stats.set_int(MPX .. "CHAR_WEAP_FM_PURCHASE3", 0)
			stats.set_int(MPX .. "CHAR_WEAP_FM_PURCHASE0", 0)
			stats.set_int(MPX .. "FIREWORK_TYPE_1_WHITE", 0)
			stats.set_int(MPX .. "FIREWORK_TYPE_1_RED", 0)
			stats.set_int(MPX .. "FIREWORK_TYPE_1_BLUE", 0)
			stats.set_int(MPX .. "FIREWORK_TYPE_2_WHITE", 0)
			stats.set_int(MPX .. "FIREWORK_TYPE_2_RED", 0)
			stats.set_int(MPX .. "FIREWORK_TYPE_2_BLUE", 0)
			stats.set_int(MPX .. "FIREWORK_TYPE_3_WHITE", 0)
			stats.set_int(MPX .. "FIREWORK_TYPE_3_RED", 0)
			stats.set_int(MPX .. "FIREWORK_TYPE_3_BLUE", 0)
			stats.set_int(MPX .. "FIREWORK_TYPE_0_WHITE", 0)
			stats.set_int(MPX .. "FIREWORK_TYPE_0_RED", 0)
			stats.set_int(MPX .. "FIREWORK_TYPE_0_BLUE", 0)
			stats.set_int(MPX .. "WEAP_FM_ADDON_PURCH", 0)
			stats.set_int(MPX .. "AWD_FMTIME5STARWANTED", 0)
			stats.set_int(MPX .. "AWD_5STAR_WANTED_AVOIDANCE", 0)
			stats.set_int(MPX .. "AWD_FMSHOOTDOWNCOPHELI", 0)
			stats.set_int(MPX .. "AWD_VEHICLES_JACKEDR", 0)
			stats.set_int(MPX .. "AWD_SECURITY_CARS_ROBBED", 0)
			stats.set_int(MPX .. "AWD_HOLD_UP_SHOPS", 0)
			stats.set_int(MPX .. "AWD_ODISTRACTCOPSNOEATH", 0)
			stats.set_int(MPX .. "AWD_ENEMYDRIVEBYKILLS", 0)
			stats.set_int(MPX .. "CHAR_WANTED_LEVEL_TIME5STAR", 0)
			stats.set_int(MPX .. "CARS_COPS_EXPLODED", 0)
			stats.set_int(MPX .. "BIKES_EXPLODED", 0)
			stats.set_int(MPX .. "BOATS_EXPLODED", 0)
			stats.set_int(MPX .. "HELIS_EXPLODED", 0)
			stats.set_int(MPX .. "PLANES_EXPLODED", 0)
			stats.set_int(MPX .. "QUADBIKE_EXPLODED", 0)
			stats.set_int(MPX .. "BICYCLE_EXPLODED", 0)
			stats.set_int(MPX .. "SUBMARINE_EXPLODED", 0)
			stats.set_int(MPX .. "TIRES_POPPED_BY_GUNSHOT", 0)
			stats.set_int(MPX .. "NUMBER_CRASHES_CARS", 0)
			stats.set_int(MPX .. "NUMBER_CRASHES_BIKES", 0)
			stats.set_int(MPX .. "BAILED_FROM_VEHICLE", 0)
			stats.set_int(MPX .. "NUMBER_CRASHES_QUADBIKES", 0)
			stats.set_int(MPX .. "NUMBER_STOLEN_COP_VEHICLE", 0)
			stats.set_int(MPX .. "NUMBER_STOLEN_CARS", 0)
			stats.set_int(MPX .. "NUMBER_STOLEN_BIKES", 0)
			stats.set_int(MPX .. "NUMBER_STOLEN_BOATS", 0)
			stats.set_int(MPX .. "NUMBER_STOLEN_HELIS", 0)
			stats.set_int(MPX .. "NUMBER_STOLEN_PLANES", 0)
			stats.set_int(MPX .. "NUMBER_STOLEN_QUADBIKES", 0)
			stats.set_int(MPX .. "NUMBER_STOLEN_BICYCLES", 0)
			stats.set_int(MPX .. "MC_CONTRIBUTION_POINTS", 0)
			stats.set_int(MPX .. "MEMBERSMARKEDFORDEATH", 0)
			stats.set_int(MPX .. "MCKILLS", 0)
			stats.set_int(MPX .. "MCDEATHS", 0)
			stats.set_int(MPX .. "RIVALPRESIDENTKILLS", 0)
			stats.set_int(MPX .. "RIVALCEOANDVIPKILLS", 0)
			stats.set_int(MPX .. "CLUBHOUSECONTRACTSCOMPLETE", 0)
			stats.set_int(MPX .. "CLUBHOUSECONTRACTEARNINGS", 0)
			stats.set_int(MPX .. "CLUBCHALLENGESCOMPLETED", 0)
			stats.set_int(MPX .. "MEMBERCHALLENGESCOMPLETED", 0)
			stats.set_int(MPX .. "GHKILLS", 0)
			stats.set_int(MPX .. "HORDELVL", 0)
			stats.set_int(MPX .. "HORDKILLS", 0)
			stats.set_int(MPX .. "UNIQUECRATES", 0)
			stats.set_int(MPX .. "BJWINS", 0)
			stats.set_int(MPX .. "HORDEWINS", 0)
			stats.set_int(MPX .. "MCMWINS", 0)
			stats.set_int(MPX .. "GANGHIDWINS", 0)
			stats.set_int(MPX .. "KILLS", 0)
			stats.set_int(MPX .. "HITS_PEDS_VEHICLES", 0)
			stats.set_int(MPX .. "SHOTS", 0)
			stats.set_int(MPX .. "HEADSHOTS", 0)
			stats.set_int(MPX .. "KILLS_ARMED", 0)
			stats.set_int(MPX .. "SUCCESSFUL_COUNTERS", 0)
			stats.set_int(MPX .. "KILLS_PLAYERS", 0)
			stats.set_int(MPX .. "DEATHS_PLAYER", 0)
			stats.set_int(MPX .. "KILLS_STEALTH", 0)
			stats.set_int(MPX .. "KILLS_INNOCENTS", 0)
			stats.set_int(MPX .. "KILLS_ENEMY_GANG_MEMBERS", 0)
			stats.set_int(MPX .. "KILLS_FRIENDLY_GANG_MEMBERS", 0)
			stats.set_int(MPX .. "KILLS_BY_OTHERS", 0)
			stats.set_int(MPX .. "BIGGEST_VICTIM_KILLS", 0)
			stats.set_int(MPX .. "ARCHENEMY_KILLS", 0)
			stats.set_int(MPX .. "KILLS_COP", 0)
			stats.set_int(MPX .. "KILLS_SWAT", 0)
			stats.set_int(MPX .. "STARS_ATTAINED", 0)
			stats.set_int(MPX .. "STARS_EVADED", 0)
			stats.set_int(MPX .. "VEHEXPORTED", 0)
			stats.set_int(MPX .. "TOTAL_NO_SHOPS_HELD_UP", 0)
			stats.set_int(MPX .. "CR_GANGATTACK_CITY", 0)
			stats.set_int(MPX .. "CR_GANGATTACK_COUNTRY", 0)
			stats.set_int(MPX .. "CR_GANGATTACK_LOST", 0)
			stats.set_int(MPX .. "CR_GANGATTACK_VAGOS", 0)
			stats.set_int(MPX .. "NO_NON_CONTRACT_RACE_WIN", 0)
			stats.set_int(MPX .. "DIED_IN_DROWNING", 0)
			stats.set_int(MPX .. "DIED_IN_DROWNINGINVEHICLE", 0)
			stats.set_int(MPX .. "DIED_IN_EXPLOSION", 0)
			stats.set_int(MPX .. "DIED_IN_FALL", 0)
			stats.set_int(MPX .. "DIED_IN_FIRE", 0)
			stats.set_int(MPX .. "DIED_IN_ROAD", 0)
			stats.set_int(MPX .. "GRENADE_ENEMY_KILLS", 0)
			stats.set_int(MPX .. "MICROSMG_ENEMY_KILLS", 0)
			stats.set_int(MPX .. "SMG_ENEMY_KILLS", 0)
			stats.set_int(MPX .. "ASLTSMG_ENEMY_KILLS", 0)
			stats.set_int(MPX .. "CRBNRIFLE_ENEMY_KILLS", 0)
			stats.set_int(MPX .. "ADVRIFLE_ENEMY_KILLS", 0)
			stats.set_int(MPX .. "MG_ENEMY_KILLS", 0)
			stats.set_int(MPX .. "CMBTMG_ENEMY_KILLS", 0)
			stats.set_int(MPX .. "ASLTMG_ENEMY_KILLS", 0)
			stats.set_int(MPX .. "RPG_ENEMY_KILLS", 0)
			stats.set_int(MPX .. "PISTOL_ENEMY_KILLS", 0)
			stats.set_int(MPX .. "PLAYER_HEADSHOTS", 0)
			stats.set_int(MPX .. "SAWNOFF_ENEMY_KILLS", 0)
			stats.set_int(MPX .. "STKYBMB_ENEMY_KILLS", 0)
			stats.set_int(MPX .. "UNARMED_ENEMY_KILLS", 0)
			stats.set_int(MPX .. "SNIPERRFL_ENEMY_KILLS", 0)
			stats.set_int(MPX .. "HVYSNIPER_ENEMY_KILLS", 0)
			stats.set_int(MPX .. "AWD_0_VEHICLES_BLOWNUP", 0)
			stats.set_int(MPX .. "CARS_EXPLODED", 0)
			stats.set_int(MPX .. "AWD_CAR_EXPORT", 0)
			stats.set_int(MPX .. "AWD_FMDRIVEWITHOUTCRASH", 0)
			stats.set_int(MPX .. "AWD_PASSENGERTIME", 0)
			stats.set_int(MPX .. "AWD_TIME_IN_HELICOPTER", 0)
			stats.set_int(MPX .. "AWD_VEHICLE_JUMP_OVER_0M", 0)
			stats.set_int(MPX .. "MOST_FLIPS_IN_ONE_JUMP", 5)
			stats.set_int(MPX .. "MOST_SPINS_IN_ONE_JUMP", 5)
			stats.set_int(MPX .. "CHAR_FM_VEHICLE_1_UNLCK", 0)
			stats.set_int(MPX .. "CHAR_FM_VEHICLE_2_UNLCK", 0)
			stats.set_int(MPX .. "NO_CARS_REPAIR", 0)
			stats.set_int(MPX .. "VEHICLES_SPRAYED", 0)
			stats.set_int(MPX .. "NUMBER_NEAR_MISS_NOCRASH", 0)
			stats.set_int(MPX .. "USJS_FOUND", 0)
			stats.set_int(MPX .. "USJS_COMPLETED", 0)
			stats.set_int(MPX .. "USJS_TOTAL_COMPLETED", 0)
			stats.set_int(MPX .. "CRDEADLINE", 0)
			stats.set_int(MPX .. "FAVOUTFITBIKETIMECURRENT", 0)
			stats.set_int(MPX .. "FAVOUTFITBIKETIME1ALLTIME", 0)
			stats.set_int(MPX .. "FAVOUTFITBIKETYPECURRENT", 0)
			stats.set_int(MPX .. "FAVOUTFITBIKETYPEALLTIME", 0)
			stats.set_int(MPX .. "LONGEST_WHEELIE_DIST", 0)
			stats.set_int(MPX .. "RACES_WON", 0)
			stats.set_int(MPX .. "COUNT_HOTRING_RACE", 0)
			stats.set_int(MPX .. "AWD_0_HEADSHOTS", 0)
			stats.set_int(MPX .. "AWD_FMOVERALLKILLS", 0)
			stats.set_int(MPX .. "AWD_FMKILLBOUNTY", 0)
			stats.set_int(MPX .. "AWD_FM_DM_3KILLSAMEGUY", 0)
			stats.set_int(MPX .. "AWD_FM_DM_KILLSTREAK", 0)
			stats.set_int(MPX .. "AWD_FM_DM_STOLENKILL", 0)
			stats.set_int(MPX .. "AWD_FM_DM_TOTALKILLS", 0)
			stats.set_int(MPX .. "AWD_FMREVENGEKILLSDM", 0)
			stats.set_int(MPX .. "AWD_KILL_CARRIER_CAPTURE", 0)
			stats.set_int(MPX .. "AWD_NIGHTVISION_KILLS", 0)
			stats.set_int(MPX .. "AWD_KILL_PSYCHOPATHS", 0)
			stats.set_int(MPX .. "AWD_TAKEDOWNSMUGPLANE", 0)
			stats.set_int(MPX .. "AWD_0_KILLS_PISTOL", 0)
			stats.set_int(MPX .. "AWD_0_KILLS_SMG", 0)
			stats.set_int(MPX .. "AWD_0_KILLS_SHOTGUN", 0)
			stats.set_int(MPX .. "ASLTRIFLE_ENEMY_KILLS", 0)
			stats.set_int(MPX .. "AWD_0_KILLS_SNIPER", 0)
			stats.set_int(MPX .. "MG_ENEMY_KILLS", 0)
			stats.set_int(MPX .. "AWD_0_KILLS_STICKYBOMBS", 0)
			stats.set_int(MPX .. "AWD_0_KILLS_GRENADES", 0)
			stats.set_int(MPX .. "AWD_0_KILLS_ROCKETLAUNCH", 0)
			stats.set_int(MPX .. "AWD_0_KILLS_MELEE", 0)
			stats.set_int(MPX .. "AWD_CAR_BOMBS_ENEMY_KILLS", 0)
			stats.set_int(MPX .. "MELEEKILLS", 0)
			stats.set_int(MPX .. "HITS", 0)
			stats.set_int(MPX .. "DEATHS", 0)
			stats.set_int(MPX .. "HIGHEST_SKITTLES", 0)
			stats.set_int(MPX .. "NUMBER_NEAR_MISS", 0)
			stats.set_int(MPX .. "AWD_FINISH_HEISTS", 0)
			stats.set_int(MPX .. "AWD_FINISH_HEIST_SETUP_JOB", 0)
			stats.set_int(MPX .. "AWD_COMPLETE_HEIST_NOT_DIE", 0)
			stats.set_int(MPX .. "AWD_WIN_GOLD_MEDAL_HEISTS", 0)
			stats.set_int(MPX .. "AWD_DO_HEIST_AS_MEMBER", 0)
			stats.set_int(MPX .. "AWD_DO_HEIST_AS_THE_LEADER", 0)
			stats.set_int(MPX .. "AWD_CONTROL_CROWDS", 0)
			stats.set_int(MPX .. "HEIST_COMPLETION", 0)
			stats.set_int(MPX .. "HEISTS_ORGANISED", 0)
			stats.set_int(MPX .. "HEIST_START", 0)
			stats.set_int(MPX .. "HEIST_END", 0)
			stats.set_int(MPX .. "CUTSCENE_MID_PRISON", 0)
			stats.set_int(MPX .. "CUTSCENE_MID_HUMANE", 0)
			stats.set_int(MPX .. "CUTSCENE_MID_NARC", 0)
			stats.set_int(MPX .. "CUTSCENE_MID_ORNATE", 0)
			stats.set_int(MPX .. "CR_FLEECA_PREP_1", 0)
			stats.set_int(MPX .. "CR_FLEECA_PREP_2", 0)
			stats.set_int(MPX .. "CR_FLEECA_FINALE", 0)
			stats.set_int(MPX .. "CR_PRISON_PLANE", 0)
			stats.set_int(MPX .. "CR_PRISON_BUS", 0)
			stats.set_int(MPX .. "CR_PRISON_STATION", 0)
			stats.set_int(MPX .. "CR_PRISON_UNFINISHED_BIZ", 0)
			stats.set_int(MPX .. "CR_PRISON_FINALE", 0)
			stats.set_int(MPX .. "CR_HUMANE_KEY_CODES", 0)
			stats.set_int(MPX .. "CR_HUMANE_ARMORDILLOS", 0)
			stats.set_int(MPX .. "CR_HUMANE_EMP", 0)
			stats.set_int(MPX .. "CR_HUMANE_VALKYRIE", 0)
			stats.set_int(MPX .. "CR_HUMANE_FINALE", 0)
			stats.set_int(MPX .. "CR_NARC_COKE", 0)
			stats.set_int(MPX .. "CR_NARC_TRASH_TRUCK", 0)
			stats.set_int(MPX .. "CR_NARC_BIKERS", 0)
			stats.set_int(MPX .. "CR_NARC_WEED", 0)
			stats.set_int(MPX .. "CR_NARC_STEAL_METH", 0)
			stats.set_int(MPX .. "CR_NARC_FINALE", 0)
			stats.set_int(MPX .. "CR_PACIFIC_TRUCKS", 0)
			stats.set_int(MPX .. "CR_PACIFIC_WITSEC", 0)
			stats.set_int(MPX .. "CR_PACIFIC_HACK", 0)
			stats.set_int(MPX .. "CR_PACIFIC_BIKES", 0)
			stats.set_int(MPX .. "CR_PACIFIC_CONVOY", 0)
			stats.set_int(MPX .. "CR_PACIFIC_FINALE", 0)
			stats.set_int(MPX .. "HEIST_PLANNING_STAGE", 0)
			stats.set_int(MPX .. "GANGOPS_HEIST_STATUS", 0)
			stats.set_int(MPX .. "GANGOPS_HEIST_STATUS", 0)
			stats.set_int(MPX .. "GANGOPS_FM_MISSION_PROG", 0)
			stats.set_int(MPX .. "GANGOPS_FLOW_MISSION_PROG", 0)
			stats.set_int(MPX .. "CR_GANGOP_MORGUE", 0)
			stats.set_int(MPX .. "CR_GANGOP_DELUXO", 0)
			stats.set_int(MPX .. "CR_GANGOP_SERVERFARM", 0)
			stats.set_int(MPX .. "CR_GANGOP_IAABASE_FIN", 0)
			stats.set_int(MPX .. "CR_GANGOP_STEALOSPREY", 0)
			stats.set_int(MPX .. "CR_GANGOP_FOUNDRY", 0)
			stats.set_int(MPX .. "CR_GANGOP_RIOTVAN", 0)
			stats.set_int(MPX .. "CR_GANGOP_SUBMARINECAR", 0)
			stats.set_int(MPX .. "CR_GANGOP_SUBMARINE_FIN", 0)
			stats.set_int(MPX .. "CR_GANGOP_PREDATOR", 0)
			stats.set_int(MPX .. "CR_GANGOP_BMLAUNCHER", 0)
			stats.set_int(MPX .. "CR_GANGOP_BCCUSTOM", 0)
			stats.set_int(MPX .. "CR_GANGOP_STEALTHTANKS", 0)
			stats.set_int(MPX .. "CR_GANGOP_SPYPLANE", 0)
			stats.set_int(MPX .. "CR_GANGOP_FINALE", 0)
			stats.set_int(MPX .. "CR_GANGOP_FINALE_P2", 0)
			stats.set_int(MPX .. "CR_GANGOP_FINALE_P3", 0)
			stats.set_int(MPX .. "AWD_DANCE_TO_SOLOMUN", 0)
			stats.set_int(MPX .. "AWD_DANCE_TO_TALEOFUS", 0)
			stats.set_int(MPX .. "AWD_DANCE_TO_DIXON", 0)
			stats.set_int(MPX .. "AWD_DANCE_TO_BLKMAD", 0)
			stats.set_int(MPX .. "AWD_CLUB_DRUNK", 0)
			stats.set_int(MPX .. "NIGHTCLUB_VIP_APPEAR", 0)
			stats.set_int(MPX .. "NIGHTCLUB_JOBS_DONE", 0)
			stats.set_int(MPX .. "NIGHTCLUB_EARNINGS", 0)
			stats.set_int(MPX .. "HUB_SALES_COMPLETED", 0)
			stats.set_int(MPX .. "HUB_EARNINGS", 0)
			stats.set_int(MPX .. "DANCE_COMBO_DURATION_MINS", 0)
			stats.set_int(MPX .. "NIGHTCLUB_PLAYER_APPEAR", 0)
			stats.set_int(MPX .. "LIFETIME_HUB_GOODS_SOLD", 0)
			stats.set_int(MPX .. "LIFETIME_HUB_GOODS_MADE", 0)
			stats.set_int(MPX .. "DANCEPERFECTOWNCLUB", 0)
			stats.set_int(MPX .. "NUMUNIQUEPLYSINCLUB", 0)
			stats.set_int(MPX .. "DANCETODIFFDJS", 0)
			stats.set_int(MPX .. "NIGHTCLUB_HOTSPOT_TIME_MS", 0)
			stats.set_int(MPX .. "NIGHTCLUB_CONT_TOTAL", 0)
			stats.set_int(MPX .. "NIGHTCLUB_CONT_MISSION", 0)
			stats.set_int(MPX .. "CLUB_CONTRABAND_MISSION", 0)
			stats.set_int(MPX .. "HUB_CONTRABAND_MISSION", 0)
			stats.set_int(MPX .. "ARN_BS_TRINKET_TICKERS", 0)
			stats.set_int(MPX .. "ARN_BS_TRINKET_SAVED", 0)
			stats.set_int(MPX .. "AWD_WATCH_YOUR_STEP", 0)
			stats.set_int(MPX .. "AWD_TOWER_OFFENSE", 0)
			stats.set_int(MPX .. "AWD_READY_FOR_WAR", 0)
			stats.set_int(MPX .. "AWD_THROUGH_A_LENS", 0)
			stats.set_int(MPX .. "AWD_SPINNER", 0)
			stats.set_int(MPX .. "AWD_YOUMEANBOOBYTRAPS", 0)
			stats.set_int(MPX .. "AWD_MASTER_BANDITO", 0)
			stats.set_int(MPX .. "AWD_SITTING_DUCK", 0)
			stats.set_int(MPX .. "AWD_CROWDPARTICIPATION", 0)
			stats.set_int(MPX .. "AWD_KILL_OR_BE_KILLED", 0)
			stats.set_int(MPX .. "AWD_MASSIVE_SHUNT", 0)
			stats.set_int(MPX .. "AWD_YOURE_OUTTA_HERE", 0)
			stats.set_int(MPX .. "AWD_WEVE_GOT_ONE", 0)
			stats.set_int(MPX .. "AWD_ARENA_WAGEWORKER", 0)
			stats.set_int(MPX .. "AWD_TIME_SERVED", 0)
			stats.set_int(MPX .. "AWD_TOP_SCORE", 0)
			stats.set_int(MPX .. "AWD_CAREER_WINNER", 0)
			stats.set_int(MPX .. "ARENAWARS_SP", 0)
			stats.set_int(MPX .. "ARENAWARS_SKILL_LEVEL", 0)
			stats.set_int(MPX .. "ARENAWARS_SP_LIFETIME", 0)
			stats.set_int(MPX .. "ARENAWARS_AP", 0)
			stats.set_int(MPX .. "ARENAWARS_AP_TIER", 0)
			stats.set_int(MPX .. "ARENAWARS_AP_LIFETIME", 0)
			stats.set_int(MPX .. "ARENAWARS_CARRER_UNLK", 0)
			stats.set_int(MPX .. "ARN_W_THEME_SCIFI", 0)
			stats.set_int(MPX .. "ARN_W_THEME_APOC", 0)
			stats.set_int(MPX .. "ARN_W_THEME_CONS", 0)
			stats.set_int(MPX .. "ARN_W_PASS_THE_BOMB", 0)
			stats.set_int(MPX .. "ARN_W_DETONATION", 0)
			stats.set_int(MPX .. "ARN_W_ARCADE_RACE", 0)
			stats.set_int(MPX .. "ARN_W_CTF", 0)
			stats.set_int(MPX .. "ARN_W_TAG_TEAM", 0)
			stats.set_int(MPX .. "ARN_W_DESTR_DERBY", 0)
			stats.set_int(MPX .. "ARN_W_CARNAGE", 0)
			stats.set_int(MPX .. "ARN_W_MONSTER_JAM", 0)
			stats.set_int(MPX .. "ARN_W_GAMES_MASTERS", 0)
			stats.set_int(MPX .. "ARN_L_PASS_THE_BOMB", 0)
			stats.set_int(MPX .. "ARN_L_DETONATION", 0)
			stats.set_int(MPX .. "ARN_L_ARCADE_RACE", 0)
			stats.set_int(MPX .. "ARN_L_CTF", 0)
			stats.set_int(MPX .. "ARN_L_TAG_TEAM", 0)
			stats.set_int(MPX .. "ARN_L_DESTR_DERBY", 0)
			stats.set_int(MPX .. "ARN_L_CARNAGE", 0)
			stats.set_int(MPX .. "ARN_L_MONSTER_JAM", 0)
			stats.set_int(MPX .. "ARN_L_GAMES_MASTERS", 0)
			stats.set_int(MPX .. "NUMBER_OF_CHAMP_BOUGHT", 0)
			stats.set_int(MPX .. "ARN_SPECTATOR_KILLS", 0)
			stats.set_int(MPX .. "ARN_LIFETIME_KILLS", 0)
			stats.set_int(MPX .. "ARN_LIFETIME_DEATHS", 0)
			stats.set_int(MPX .. "ARENAWARS_CARRER_WINS", 0)
			stats.set_int(MPX .. "ARENAWARS_CARRER_WINT", 0)
			stats.set_int(MPX .. "ARENAWARS_MATCHES_PLYD", 0)
			stats.set_int(MPX .. "ARENAWARS_MATCHES_PLYDT", 0)
			stats.set_int(MPX .. "ARN_SPEC_BOX_TIME_MS", 0)
			stats.set_int(MPX .. "ARN_SPECTATOR_DRONE", 0)
			stats.set_int(MPX .. "ARN_SPECTATOR_CAMS", 0)
			stats.set_int(MPX .. "ARN_SMOKE", 0)
			stats.set_int(MPX .. "ARN_DRINK", 0)
			stats.set_int(MPX .. "ARN_VEH_MONSTER", 0)
			stats.set_int(MPX .. "ARN_VEH_MONSTER", 0)
			stats.set_int(MPX .. "ARN_VEH_MONSTER", 0)
			stats.set_int(MPX .. "ARN_VEH_CERBERUS", 0)
			stats.set_int(MPX .. "ARN_VEH_CERBERUS2", 0)
			stats.set_int(MPX .. "ARN_VEH_CERBERUS3", 0)
			stats.set_int(MPX .. "ARN_VEH_BRUISER", 0)
			stats.set_int(MPX .. "ARN_VEH_BRUISER2", 0)
			stats.set_int(MPX .. "ARN_VEH_BRUISER3", 0)
			stats.set_int(MPX .. "ARN_VEH_SLAMVAN0", 0)
			stats.set_int(MPX .. "ARN_VEH_SLAMVAN5", 0)
			stats.set_int(MPX .. "ARN_VEH_SLAMVAN6", 0)
			stats.set_int(MPX .. "ARN_VEH_BRUTUS", 0)
			stats.set_int(MPX .. "ARN_VEH_BRUTUS2", 0)
			stats.set_int(MPX .. "ARN_VEH_BRUTUS3", 0)
			stats.set_int(MPX .. "ARN_VEH_SCARAB", 0)
			stats.set_int(MPX .. "ARN_VEH_SCARAB2", 0)
			stats.set_int(MPX .. "ARN_VEH_SCARAB3", 0)
			stats.set_int(MPX .. "ARN_VEH_DOMINATOR0", 0)
			stats.set_int(MPX .. "ARN_VEH_DOMINATOR5", 0)
			stats.set_int(MPX .. "ARN_VEH_DOMINATOR6", 0)
			stats.set_int(MPX .. "ARN_VEH_IMPALER2", 0)
			stats.set_int(MPX .. "ARN_VEH_IMPALER3", 0)
			stats.set_int(MPX .. "ARN_VEH_IMPALER0", 0)
			stats.set_int(MPX .. "ARN_VEH_ISSI0", 0)
			stats.set_int(MPX .. "ARN_VEH_ISSI5", 0)
			stats.set_int(MPX .. "ARN_VEH_ISSI", 0)
			stats.set_int(MPX .. "ARN_VEH_IMPERATOR", 0)
			stats.set_int(MPX .. "ARN_VEH_IMPERATOR2", 0)
			stats.set_int(MPX .. "ARN_VEH_IMPERATOR3", 0)
			stats.set_int(MPX .. "ARN_VEH_ZR30", 0)
			stats.set_int(MPX .. "ARN_VEH_ZR30", 0)
			stats.set_int(MPX .. "ARN_VEH_ZR0", 0)
			stats.set_int(MPX .. "ARN_VEH_DEATHBIKE", 0)
			stats.set_int(MPX .. "ARN_VEH_DEATHBIKE2", 0)
			stats.set_int(MPX .. "ARN_VEH_DEATHBIKE3", 0)
			stats.set_int(MPX .. "AWD_ODD_JOBS", 0)
			stats.set_int(MPX .. "VCM_FLOW_PROGRESS", 0)
			stats.set_int(MPX .. "VCM_STORY_PROGRESS", 5)
			stats.set_int(MPX .. "CAS_HEIST_NOTS", 0)
			stats.set_int(MPX .. "CAS_HEIST_FLOW", 0)
			stats.set_int(MPX .. "SIGNAL_JAMMERS_COLLECTED", 0)
			stats.set_int(MPX .. "AWD_PREPARATION", 0)
			stats.set_int(MPX .. "AWD_ASLEEPONJOB", 0)
			stats.set_int(MPX .. "AWD_DAICASHCRAB", 0)
			stats.set_int(MPX .. "AWD_BIGBRO", 0)
			stats.set_int(MPX .. "AWD_SHARPSHOOTER", 0)
			stats.set_int(MPX .. "AWD_RACECHAMP", 0)
			stats.set_int(MPX .. "AWD_BATSWORD", 0)
			stats.set_int(MPX .. "AWD_COINPURSE", 0)
			stats.set_int(MPX .. "AWD_ASTROCHIMP", 0)
			stats.set_int(MPX .. "AWD_MASTERFUL", 0)
			stats.set_int(MPX .. "H3_BOARD_DIALOGUE0", 0)
			stats.set_int(MPX .. "H3_BOARD_DIALOGUE1", 0)
			stats.set_int(MPX .. "H3_BOARD_DIALOGUE2", 0)
			stats.set_int(MPX .. "H3_VEHICLESUSED", 0)
			stats.set_int(MPX .. "H3_CR_STEALTH_1A", 0)
			stats.set_int(MPX .. "H3_CR_STEALTH_2B_RAPP", 0)
			stats.set_int(MPX .. "H3_CR_STEALTH_2C_SIDE", 0)
			stats.set_int(MPX .. "H3_CR_STEALTH_3A", 0)
			stats.set_int(MPX .. "H3_CR_STEALTH_0A", 0)
			stats.set_int(MPX .. "H3_CR_STEALTH_5A", 0)
			stats.set_int(MPX .. "H3_CR_SUBTERFUGE_1A", 0)
			stats.set_int(MPX .. "H3_CR_SUBTERFUGE_2A", 0)
			stats.set_int(MPX .. "H3_CR_SUBTERFUGE_2B", 0)
			stats.set_int(MPX .. "H3_CR_SUBTERFUGE_3A", 0)
			stats.set_int(MPX .. "H3_CR_SUBTERFUGE_3B", 0)
			stats.set_int(MPX .. "H3_CR_SUBTERFUGE_0A", 0)
			stats.set_int(MPX .. "H3_CR_SUBTERFUGE_5A", 0)
			stats.set_int(MPX .. "H3_CR_DIRECT_1A", 0)
			stats.set_int(MPX .. "H3_CR_DIRECT_2A1", 0)
			stats.set_int(MPX .. "H3_CR_DIRECT_2A2", 0)
			stats.set_int(MPX .. "H3_CR_DIRECT_2BP", 0)
			stats.set_int(MPX .. "H3_CR_DIRECT_2C", 0)
			stats.set_int(MPX .. "H3_CR_DIRECT_3A", 0)
			stats.set_int(MPX .. "H3_CR_DIRECT_0A", 0)
			stats.set_int(MPX .. "H3_CR_DIRECT_5A", 0)
			stats.set_int(MPX .. "CR_ORDER", 0)
			stats.set_int(MPX .. "AWD_PREPARATION", 0)
			stats.set_int(MPX .. "AWD_ASLEEPONJOB", 0)
			stats.set_int(MPX .. "AWD_DAICASHCRAB", 0)
			stats.set_int(MPX .. "AWD_BIGBRO", 0)
			stats.set_int(MPX .. "AWD_SHARPSHOOTER", 0)
			stats.set_int(MPX .. "AWD_RACECHAMP", 0)
			stats.set_int(MPX .. "AWD_BATSWORD", 0)
			stats.set_int(MPX .. "AWD_COINPURSE", 0)
			stats.set_int(MPX .. "AWD_ASTROCHIMP", 0)
			stats.set_int(MPX .. "AWD_MASTERFUL", 0)
			stats.set_int(MPX .. "SCGW_NUM_WINS_GANG_0", 0)
			stats.set_int(MPX .. "SCGW_NUM_WINS_GANG_1", 0)
			stats.set_int(MPX .. "SCGW_NUM_WINS_GANG_2", 0)
			stats.set_int(MPX .. "SCGW_NUM_WINS_GANG_3", 0)
			stats.set_int(MPX .. "CH_ARC_CAB_CLAW_TROPHY", 0)
			stats.set_int(MPX .. "CH_ARC_CAB_LOVE_TROPHY", 0)
			stats.set_int(MPX .. "IAP_MAX_MOON_DIST", 0)
			stats.set_int(MPX .. "SCGW_INITIALS_0", 0)
			stats.set_int(MPX .. "SCGW_INITIALS_1", 0)
			stats.set_int(MPX .. "SCGW_INITIALS_2", 0)
			stats.set_int(MPX .. "SCGW_INITIALS_3", 0)
			stats.set_int(MPX .. "SCGW_INITIALS_0", 0)
			stats.set_int(MPX .. "SCGW_INITIALS_5", 0)
			stats.set_int(MPX .. "SCGW_INITIALS_6", 0)
			stats.set_int(MPX .. "SCGW_INITIALS_7", 0)
			stats.set_int(MPX .. "SCGW_INITIALS_8", 0)
			stats.set_int(MPX .. "SCGW_INITIALS_9", 0)
			stats.set_int(MPX .. "FOOTAGE_INITIALS_0", 0)
			stats.set_int(MPX .. "FOOTAGE_INITIALS_1", 0)
			stats.set_int(MPX .. "FOOTAGE_INITIALS_2", 0)
			stats.set_int(MPX .. "FOOTAGE_INITIALS_3", 0)
			stats.set_int(MPX .. "FOOTAGE_INITIALS_4", 0)
			stats.set_int(MPX .. "FOOTAGE_INITIALS_5", 0)
			stats.set_int(MPX .. "FOOTAGE_INITIALS_6", 0)
			stats.set_int(MPX .. "FOOTAGE_INITIALS_7", 0)
			stats.set_int(MPX .. "FOOTAGE_INITIALS_8", 0)
			stats.set_int(MPX .. "FOOTAGE_INITIALS_9", 0)
			stats.set_int(MPX .. "FOOTAGE_SCORE_0", 0)
			stats.set_int(MPX .. "FOOTAGE_SCORE_1", 0)
			stats.set_int(MPX .. "FOOTAGE_SCORE_2", 0)
			stats.set_int(MPX .. "FOOTAGE_SCORE_3", 0)
			stats.set_int(MPX .. "FOOTAGE_SCORE_0", 0)
			stats.set_int(MPX .. "FOOTAGE_SCORE_5", 0)
			stats.set_int(MPX .. "FOOTAGE_SCORE_6", 0)
			stats.set_int(MPX .. "FOOTAGE_SCORE_7", 0)
			stats.set_int(MPX .. "FOOTAGE_SCORE_8", 0)
			stats.set_int(MPX .. "FOOTAGE_SCORE_9", 0)
			stats.set_int(MPX .. "AWD_CAR_CLUB_MEM", 0)
			stats.set_int(MPX .. "AWD_SPRINTRACER", 0)
			stats.set_int(MPX .. "AWD_STREETRACER", 0)
			stats.set_int(MPX .. "AWD_PURSUITRACER", 0)
			stats.set_int(MPX .. "AWD_TEST_CAR", 0)
			stats.set_int(MPX .. "AWD_AUTO_SHOP", 0)
			stats.set_int(MPX .. "AWD_GROUNDWORK", 0)
			stats.set_int(MPX .. "AWD_CAR_EXPORT", 0)
			stats.set_int(MPX .. "AWD_ROBBERY_CONTRACT", 0)
			stats.set_int(MPX .. "AWD_FACES_OF_DEATH", 0)
			stats.set_int(MPX .. "AWD_CONTRACTOR", 0)
			stats.set_int(MPX .. "AWD_COLD_CALLER", 0)
			stats.set_int(MPX .. "AWD_PRODUCER", 0)
			stats.set_int(MPX .. "FIXERTELEPHONEHITSCOMPL", 0)
			stats.set_int(MPX .. "PAYPHONE_BONUS_KILL_METHOD", 0)
			stats.set_int(MPX .. "PAYPHONE_BONUS_KILL_METHOD", 0)
			stats.set_int(MPX .. "FIXER_GENERAL_BS", 0)
			stats.set_int(MPX .. "FIXER_COMPLETED_BS", 0)
			stats.set_int(MPX .. "FIXER_STORY_BS", 0)
			stats.set_int(MPX .. "FIXER_STORY_STRAND", 0)
			stats.set_int(MPX .. "FIXER_STORY_COOLDOWN", 0)
			stats.set_int(MPX .. "FIXER_COUNT", 0)
			stats.set_int(MPX .. "FIXER_SC_VEH_RECOVERED", 0)
			stats.set_int(MPX .. "FIXER_SC_VAL_RECOVERED", 0)
			stats.set_int(MPX .. "FIXER_SC_GANG_TERMINATED", 0)
			stats.set_int(MPX .. "FIXER_SC_VIP_RESCUED", 0)
			stats.set_int(MPX .. "FIXER_SC_ASSETS_PROTECTED", 0)
			stats.set_int(MPX .. "FIXER_SC_EQ_DESTROYED", 0)
			stats.set_int(MPX .. "FIXER_EARNINGS", 0)
			stats.set_int(MPX .. "AWD_LOSTANDFOUND", 0)
			stats.set_int(MPX .. "AWD_SUNSET", 0)
			stats.set_int(MPX .. "AWD_TREASURE_HUNTER", 0)
			stats.set_int(MPX .. "AWD_WRECK_DIVING", 0)
			stats.set_int(MPX .. "AWD_KEINEMUSIK", 0)
			stats.set_int(MPX .. "AWD_PALMS_TRAX", 0)
			stats.set_int(MPX .. "AWD_MOODYMANN", 0)
			stats.set_int(MPX .. "AWD_FILL_YOUR_BAGS", 0)
			stats.set_int(MPX .. "AWD_WELL_PREPARED", 0)
			stats.set_int(MPX .. "H0_H0_DJ_MISSIONS", 0)
			stats.set_int(MPX .. "H0CNF_APPROACH", 0)
			stats.set_int(MPX .. "H0_MISSIONS", 0)
			stats.set_int(MPX .. "H0_PLAYTHROUGH_STATUS", 0)
			stats.set_int("MPPLY_TOTAL_RACES_WON", 0)
			stats.set_int("MPPLY_TOTAL_RACES_LOST", 0)
			stats.set_int("MPPLY_TOTAL_CUSTOM_RACES_WON", 0)
			stats.set_int("MPPLY_TOTAL_DEATHMATCH_LOST", 0)
			stats.set_int("MPPLY_TOTAL_DEATHMATCH_WON", 0)
			stats.set_int("MPPLY_TOTAL_TDEATHMATCH_LOST", 0)
			stats.set_int("MPPLY_TOTAL_TDEATHMATCH_WON", 0)
			stats.set_int("MPPLY_SHOOTINGRANGE_WINS", 0)
			stats.set_int("MPPLY_SHOOTINGRANGE_LOSSES", 0)
			stats.set_int("MPPLY_TENNIS_MATCHES_WON", 0)
			stats.set_int("MPPLY_TENNIS_MATCHES_LOST", 0)
			stats.set_int("MPPLY_GOLF_WINS", 0)
			stats.set_int("MPPLY_GOLF_LOSSES", 0)
			stats.set_int("MPPLY_DARTS_TOTAL_WINS", 0)
			stats.set_int("MPPLY_DARTS_TOTAL_MATCHES", 0)
			stats.set_int("MPPLY_SHOOTINGRANGE_TOTAL_MATCH", 0)
			stats.set_int("MPPLY_BJ_WINS", 0)
			stats.set_int("MPPLY_BJ_LOST", 0)
			stats.set_int("MPPLY_RACE_2_POINT_WINS", 0)
			stats.set_int("MPPLY_RACE_2_POINT_LOST", 0)
			stats.set_int("MPPLY_KILLS_PLAYERS", 0)
			stats.set_int("MPPLY_DEATHS_PLAYER", 0)
			stats.set_int("MPPLY_MISSIONS_CREATED", 0)
			stats.set_int("MPPLY_LTS_CREATED", 0)
			stats.set_int("MPPLY_FM_MISSION_LIKES", 0)
			stats.set_int("MPPLY_AWD_FM_CR_DM_MADE", 0)
			stats.set_int("MPPLY_AWD_FM_CR_RACES_MADE", 0)
			stats.set_int("MPPLY_AWD_FM_CR_PLAYED_BY_PEEP", 0)
			stats.set_int("MPPLY_AWD_FM_CR_MISSION_SCORE", 0)
			stats.set_int("MPPLY_HEIST_ACH_TRACKER", 0)
			stats.set_int("MPPLY_WIN_GOLD_MEDAL_HEISTS", 0)
			stats.set_int("MPPLY_GANGOPS_ALLINORDER", 0)
			stats.set_int("MPPLY_GANGOPS_LOYALTY", 0)
			stats.set_int("MPPLY_GANGOPS_CRIMMASMD", 0)
			stats.set_int("MPPLY_GANGOPS_LOYALTY2", 0)
			stats.set_int("MPPLY_GANGOPS_LOYALTY3", 0)
			stats.set_int("MPPLY_GANGOPS_CRIMMASMD2", 0)
			stats.set_int("MPPLY_GANGOPS_CRIMMASMD3", 0)
			stats.set_int("MPPLY_GANGOPS_SUPPORT", 0)
			for i = 2, 19 do
				stats.set_int(MPX .. "WEAP_FM_ADDON_PURCH" .. i, 0)
			end
			for j = 1, 19 do
				stats.set_int(MPX .. "CHAR_FM_WEAP_ADDON_" .. j .. "_UNLCK", 0)
			end
			for m = 1, 01 do
				stats.set_int(MPX .. "CHAR_KIT_" .. m .. "_FM_UNLCK", 0)
			end
			for l = 2, 01 do
				stats.set_int(MPX .. "CHAR_KIT_FM_PURCHASE" .. l, 0)
			end
			for i = 0, 9 do
				stats.set_int(MPX .. "IAP_INITIALS_" .. i, 0)
				stats.set_int(MPX .. "IAP_SCORE_" .. i, 0)
				stats.set_int(MPX .. "IAP_SCORE_" .. i, 0)
				stats.set_int(MPX .. "SCGW_SCORE_" .. i, 0)
				stats.set_int(MPX .. "DG_DEFENDER_INITIALS_" .. i, 0)
				stats.set_int(MPX .. "DG_DEFENDER_SCORE_" .. i, 0)
				stats.set_int(MPX .. "DG_MONKEY_INITIALS_" .. i, 0)
				stats.set_int(MPX .. "DG_MONKEY_SCORE_" .. i, 0)
				stats.set_int(MPX .. "DG_PENETRATOR_INITIALS_" .. i, 0)
				stats.set_int(MPX .. "DG_PENETRATOR_SCORE_" .. i, 0)
				stats.set_int(MPX .. "GGSM_INITIALS_" .. i, 0)
				stats.set_int(MPX .. "GGSM_SCORE_" .. i, 0)
				stats.set_int(MPX .. "TWR_INITIALS_" .. i, 0)
				stats.set_int(MPX .. "TWR_SCORE_" .. i, 0)
			end
			stats.set_bool(MPX .. "AWD_FMKILL3ANDWINGTARACE", false)
			stats.set_bool(MPX .. "AWD_FMWINCUSTOMRACE", false)
			stats.set_bool(MPX .. "CL_RACE_MODDED_CAR", false)
			stats.set_bool(MPX .. "AWD_FMRACEWORLDRECHOLDER", false)
			stats.set_bool(MPX .. "AWD_FMWINALLRACEMODES", false)
			stats.set_bool(MPX .. "AWD_FM_TENNIS_5_SET_WINS", false)
			stats.set_bool(MPX .. "AWD_FM_TENNIS_STASETWIN", false)
			stats.set_bool(MPX .. "AWD_FM_SHOOTRANG_GRAN_WON", false)
			stats.set_bool(MPX .. "AWD_FMWINEVERYGAMEMODE", false)
			stats.set_bool(MPX .. "AWD_FM0DIFFERENTDM", false)
			stats.set_bool(MPX .. "AWD_FM0DIFFERENTRACES", false)
			stats.set_bool(MPX .. "AWD_FMATTGANGHQ", false)
			stats.set_bool(MPX .. "AWD_FM6DARTCHKOUT", false)
			stats.set_bool(MPX .. "AWD_FM_GOLF_HOLE_IN_1", false)
			stats.set_bool(MPX .. "AWD_FMPICKUPDLCCRATE1ST", false)
			stats.set_bool(MPX .. "AWD_FM0DIFITEMSCLOTHES", false)
			stats.set_bool(MPX .. "AWD_BUY_EVERY_GUN", false)
			stats.set_bool(MPX .. "AWD_DRIVELESTERCAR5MINS", false)
			stats.set_bool(MPX .. "AWD_FMTATTOOALLBODYPARTS", false)
			stats.set_bool(MPX .. "AWD_STORE_0_CAR_IN_GARAGES", false)
			stats.set_bool(MPX .. "AWD_DAILYOBJWEEKBONUS", false)
			stats.set_bool(MPX .. "AWD_DAILYOBJMONTHBONUS", false)
			stats.set_bool(MPX .. "CL_DRIVE_RALLY", false)
			stats.set_bool(MPX .. "CL_PLAY_GTA_RACE", false)
			stats.set_bool(MPX .. "CL_PLAY_BOAT_RACE", false)
			stats.set_bool(MPX .. "CL_PLAY_FOOT_RACE", false)
			stats.set_bool(MPX .. "CL_PLAY_TEAM_DM", false)
			stats.set_bool(MPX .. "CL_PLAY_VEHICLE_DM", false)
			stats.set_bool(MPX .. "CL_PLAY_MISSION_CONTACT", false)
			stats.set_bool(MPX .. "CL_PLAY_A_PLAYLIST", false)
			stats.set_bool(MPX .. "CL_PLAY_POINT_TO_POINT", false)
			stats.set_bool(MPX .. "CL_PLAY_ONE_ON_ONE_DM", false)
			stats.set_bool(MPX .. "CL_PLAY_ONE_ON_ONE_RACE", false)
			stats.set_bool(MPX .. "CL_SURV_A_BOUNTY", false)
			stats.set_bool(MPX .. "CL_SET_WANTED_LVL_ON_PLAY", false)
			stats.set_bool(MPX .. "CL_GANG_BACKUP_GANGS", false)
			stats.set_bool(MPX .. "CL_GANG_BACKUP_LOST", false)
			stats.set_bool(MPX .. "CL_GANG_BACKUP_VAGOS", false)
			stats.set_bool(MPX .. "CL_CALL_MERCENARIES", false)
			stats.set_bool(MPX .. "CL_PHONE_MECH_DROP_CAR", false)
			stats.set_bool(MPX .. "CL_GONE_OFF_RADAR", false)
			stats.set_bool(MPX .. "CL_FILL_TITAN", false)
			stats.set_bool(MPX .. "CL_MOD_CAR_USING_APP", false)
			stats.set_bool(MPX .. "CL_MOD_CAR_USING_APP", false)
			stats.set_bool(MPX .. "CL_BUY_INSURANCE", false)
			stats.set_bool(MPX .. "CL_BUY_GARAGE", false)
			stats.set_bool(MPX .. "CL_ENTER_FRIENDS_HOUSE", false)
			stats.set_bool(MPX .. "CL_CALL_STRIPPER_HOUSE", false)
			stats.set_bool(MPX .. "CL_CALL_FRIEND", false)
			stats.set_bool(MPX .. "CL_SEND_FRIEND_REQUEST", false)
			stats.set_bool(MPX .. "CL_W_WANTED_PLAYER_TV", false)
			stats.set_bool(MPX .. "FM_INTRO_CUT_DONE", false)
			stats.set_bool(MPX .. "FM_INTRO_MISS_DONE", false)
			stats.set_bool(MPX .. "SHOOTINGRANGE_SEEN_TUT", false)
			stats.set_bool(MPX .. "TENNIS_SEEN_TUTORIAL", false)
			stats.set_bool(MPX .. "DARTS_SEEN_TUTORIAL", false)
			stats.set_bool(MPX .. "ARMWRESTLING_SEEN_TUTORIAL", false)
			stats.set_bool(MPX .. "HAS_WATCHED_BENNY_CUTSCE", false)
			stats.set_bool(MPX .. "AWD_FMFURTHESTWHEELIE", false)
			stats.set_bool(MPX .. "AWD_FMFULLYMODDEDCAR", false)
			stats.set_bool(MPX .. "AWD_FMKILLSTREAKSDM", false)
			stats.set_bool(MPX .. "AWD_FMMOSTKILLSGANGHIDE", false)
			stats.set_bool(MPX .. "AWD_FMMOSTKILLSSURVIVE", false)
			stats.set_bool(MPX .. "AWD_FINISH_HEIST_NO_DAMAGE", false)
			stats.set_bool(MPX .. "AWD_SPLIT_HEIST_TAKE_EVENLY", false)
			stats.set_bool(MPX .. "AWD_ACTIVATE_2_PERSON_KEY", false)
			stats.set_bool(MPX .. "AWD_ALL_ROLES_HEIST", false)
			stats.set_bool(MPX .. "HEIST_PLANNING_DONE_PRINT", false)
			stats.set_bool(MPX .. "HEIST_PLANNING_DONE_HELP_0", false)
			stats.set_bool(MPX .. "HEIST_PLANNING_DONE_HELP_1", false)
			stats.set_bool(MPX .. "HEIST_PRE_PLAN_DONE_HELP_0", false)
			stats.set_bool(MPX .. "HEIST_CUTS_DONE_FINALE", false)
			stats.set_bool(MPX .. "HEIST_IS_TUTORIAL", false)
			stats.set_bool(MPX .. "HEIST_STRAND_INTRO_DONE", false)
			stats.set_bool(MPX .. "HEIST_CUTS_DONE_ORNATE", false)
			stats.set_bool(MPX .. "HEIST_CUTS_DONE_PRISON", false)
			stats.set_bool(MPX .. "HEIST_CUTS_DONE_BIOLAB", false)
			stats.set_bool(MPX .. "HEIST_CUTS_DONE_NARCOTIC", false)
			stats.set_bool(MPX .. "HEIST_CUTS_DONE_TUTORIAL", false)
			stats.set_bool(MPX .. "HEIST_AWARD_DONE_PREP", false)
			stats.set_bool(MPX .. "HEIST_AWARD_BOUGHT_IN", false)
			stats.set_bool(MPX .. "AWD_MATCHING_OUTFIT_HEIST", false)
			stats.set_bool(MPX .. "AWD_CLUB_HOTSPOT", false)
			stats.set_bool(MPX .. "AWD_CLUB_CLUBBER", false)
			stats.set_bool(MPX .. "AWD_CLUB_COORD", false)
			stats.set_bool(MPX .. "AWD_BEGINNER", false)
			stats.set_bool(MPX .. "AWD_FIELD_FILLER", false)
			stats.set_bool(MPX .. "AWD_ARMCHAIR_RACER", false)
			stats.set_bool(MPX .. "AWD_LEARNER", false)
			stats.set_bool(MPX .. "AWD_SUNDAY_DRIVER", false)
			stats.set_bool(MPX .. "AWD_THE_ROOKIE", false)
			stats.set_bool(MPX .. "AWD_BUMP_AND_RUN", false)
			stats.set_bool(MPX .. "AWD_GEAR_HEAD", false)
			stats.set_bool(MPX .. "AWD_DOOR_SLAMMER", false)
			stats.set_bool(MPX .. "AWD_HOT_LAP", false)
			stats.set_bool(MPX .. "AWD_ARENA_AMATEUR", false)
			stats.set_bool(MPX .. "AWD_PAINT_TRADER", false)
			stats.set_bool(MPX .. "AWD_SHUNTER", false)
			stats.set_bool(MPX .. "AWD_JOCK", false)
			stats.set_bool(MPX .. "AWD_WARRIOR", false)
			stats.set_bool(MPX .. "AWD_T_BONE", false)
			stats.set_bool(MPX .. "AWD_MAYHEM", false)
			stats.set_bool(MPX .. "AWD_WRECKER", false)
			stats.set_bool(MPX .. "AWD_CRASH_COURSE", false)
			stats.set_bool(MPX .. "AWD_ARENA_LEGEND", false)
			stats.set_bool(MPX .. "AWD_PEGASUS", false)
			stats.set_bool(MPX .. "AWD_UNSTOPPABLE", false)
			stats.set_bool(MPX .. "AWD_CONTACT_SPORT", false)
			stats.set_bool(MPX .. "AWD_FIRST_TIME1", false)
			stats.set_bool(MPX .. "AWD_FIRST_TIME2", false)
			stats.set_bool(MPX .. "AWD_FIRST_TIME3", false)
			stats.set_bool(MPX .. "AWD_FIRST_TIME0", false)
			stats.set_bool(MPX .. "AWD_FIRST_TIME5", false)
			stats.set_bool(MPX .. "AWD_FIRST_TIME6", false)
			stats.set_bool(MPX .. "AWD_ALL_IN_ORDER", false)
			stats.set_bool(MPX .. "AWD_SUPPORTING_ROLE", false)
			stats.set_bool(MPX .. "AWD_LEADER", false)
			stats.set_bool(MPX .. "AWD_SURVIVALIST", false)
			Paragon = stats.get_bool(MPX .. "CAS_VEHICLE_REWARD")
			if Paragon == false then
				stats.set_bool(MPX .. "CAS_VEHICLE_REWARD", false)
			else
				stats.set_bool(MPX .. "CAS_VEHICLE_REWARD", false)
			end
			stats.set_bool(MPX .. "AWD_SCOPEOUT", false)
			stats.set_bool(MPX .. "AWD_CREWEDUP", false)
			stats.set_bool(MPX .. "AWD_MOVINGON", false)
			stats.set_bool(MPX .. "AWD_PROMOCAMP", false)
			stats.set_bool(MPX .. "AWD_GUNMAN", false)
			stats.set_bool(MPX .. "AWD_SMASHNGRAB", false)
			stats.set_bool(MPX .. "AWD_INPLAINSI", false)
			stats.set_bool(MPX .. "AWD_UNDETECTED", false)
			stats.set_bool(MPX .. "AWD_ALLROUND", false)
			stats.set_bool(MPX .. "AWD_ELITETHEIF", false)
			stats.set_bool(MPX .. "AWD_PRO", false)
			stats.set_bool(MPX .. "AWD_SUPPORTACT", false)
			stats.set_bool(MPX .. "AWD_SHAFTED", false)
			stats.set_bool(MPX .. "AWD_COLLECTOR", false)
			stats.set_bool(MPX .. "AWD_DEADEYE", false)
			stats.set_bool(MPX .. "AWD_PISTOLSATDAWN", false)
			stats.set_bool(MPX .. "AWD_TRAFFICAVOI", false)
			stats.set_bool(MPX .. "AWD_CANTCATCHBRA", false)
			stats.set_bool(MPX .. "AWD_WIZHARD", false)
			stats.set_bool(MPX .. "AWD_APEESCAPE", false)
			stats.set_bool(MPX .. "AWD_MONKEYKIND", false)
			stats.set_bool(MPX .. "AWD_AQUAAPE", false)
			stats.set_bool(MPX .. "AWD_KEEPFAITH", false)
			stats.set_bool(MPX .. "AWD_falseLOVE", false)
			stats.set_bool(MPX .. "AWD_NEMESIS", false)
			stats.set_bool(MPX .. "AWD_FRIENDZONED", false)
			stats.set_bool(MPX .. "VCM_FLOW_CS_RSC_SEEN", false)
			stats.set_bool(MPX .. "VCM_FLOW_CS_BWL_SEEN", false)
			stats.set_bool(MPX .. "VCM_FLOW_CS_MTG_SEEN", false)
			stats.set_bool(MPX .. "VCM_FLOW_CS_OIL_SEEN", false)
			stats.set_bool(MPX .. "VCM_FLOW_CS_DEF_SEEN", false)
			stats.set_bool(MPX .. "VCM_FLOW_CS_FIN_SEEN", false)
			stats.set_bool(MPX .. "HELP_FURIA", false)
			stats.set_bool(MPX .. "HELP_MINITAN", false)
			stats.set_bool(MPX .. "HELP_YOSEMITE2", false)
			stats.set_bool(MPX .. "HELP_ZHABA", false)
			stats.set_bool(MPX .. "HELP_IMORGEN", false)
			stats.set_bool(MPX .. "HELP_SULTAN2", false)
			stats.set_bool(MPX .. "HELP_VAGRANT", false)
			stats.set_bool(MPX .. "HELP_VSTR", false)
			stats.set_bool(MPX .. "HELP_STRYDER", false)
			stats.set_bool(MPX .. "HELP_SUGOI", false)
			stats.set_bool(MPX .. "HELP_KANJO", false)
			stats.set_bool(MPX .. "HELP_FORMULA", false)
			stats.set_bool(MPX .. "HELP_FORMULA2", false)
			stats.set_bool(MPX .. "HELP_JB0", false)
			stats.set_bool(MPX .. "AWD_SCOPEOUT", false)
			stats.set_bool(MPX .. "AWD_CREWEDUP", false)
			stats.set_bool(MPX .. "AWD_MOVINGON", false)
			stats.set_bool(MPX .. "AWD_PROMOCAMP", false)
			stats.set_bool(MPX .. "AWD_GUNMAN", false)
			stats.set_bool(MPX .. "AWD_SMASHNGRAB", false)
			stats.set_bool(MPX .. "AWD_INPLAINSI", false)
			stats.set_bool(MPX .. "AWD_UNDETECTED", false)
			stats.set_bool(MPX .. "AWD_ALLROUND", false)
			stats.set_bool(MPX .. "AWD_ELITETHEIF", false)
			stats.set_bool(MPX .. "AWD_PRO", false)
			stats.set_bool(MPX .. "AWD_SUPPORTACT", false)
			stats.set_bool(MPX .. "AWD_SHAFTED", false)
			stats.set_bool(MPX .. "AWD_COLLECTOR", false)
			stats.set_bool(MPX .. "AWD_DEADEYE", false)
			stats.set_bool(MPX .. "AWD_PISTOLSATDAWN", false)
			stats.set_bool(MPX .. "AWD_TRAFFICAVOI", false)
			stats.set_bool(MPX .. "AWD_CANTCATCHBRA", false)
			stats.set_bool(MPX .. "AWD_WIZHARD", false)
			stats.set_bool(MPX .. "AWD_APEESCAP", false)
			stats.set_bool(MPX .. "AWD_MONKEYKIND", false)
			stats.set_bool(MPX .. "AWD_AQUAAPE", false)
			stats.set_bool(MPX .. "AWD_KEEPFAITH", false)
			stats.set_bool(MPX .. "AWD_falseLOVE", false)
			stats.set_bool(MPX .. "AWD_NEMESIS", false)
			stats.set_bool(MPX .. "AWD_FRIENDZONED", false)
			stats.set_bool(MPX .. "IAP_CHALLENGE_0", false)
			stats.set_bool(MPX .. "IAP_CHALLENGE_1", false)
			stats.set_bool(MPX .. "IAP_CHALLENGE_2", false)
			stats.set_bool(MPX .. "IAP_CHALLENGE_3", false)
			stats.set_bool(MPX .. "IAP_CHALLENGE_0", false)
			stats.set_bool(MPX .. "IAP_GOLD_TANK", false)
			stats.set_bool(MPX .. "SCGW_WON_NO_DEATHS", false)
			stats.set_bool(MPX .. "AWD_KINGOFQUB3D", false)
			stats.set_bool(MPX .. "AWD_QUBISM", false)
			stats.set_bool(MPX .. "AWD_QUIBITS", false)
			stats.set_bool(MPX .. "AWD_GODOFQUB3D", false)
			stats.set_bool(MPX .. "AWD_ELEVENELEVEN", false)
			stats.set_bool(MPX .. "AWD_GOFOR11TH", false)
			stats.set_bool(MPX .. "AWD_INTELGATHER", false)
			stats.set_bool(MPX .. "AWD_COMPOUNDINFILT", false)
			stats.set_bool(MPX .. "AWD_LOOT_FINDER", false)
			stats.set_bool(MPX .. "AWD_MAX_DISRUPT", false)
			stats.set_bool(MPX .. "AWD_THE_ISLAND_HEIST", false)
			stats.set_bool(MPX .. "AWD_GOING_ALONE", false)
			stats.set_bool(MPX .. "AWD_TEAM_WORK", false)
			stats.set_bool(MPX .. "AWD_MIXING_UP", false)
			stats.set_bool(MPX .. "AWD_TEAM_WORK", false)
			stats.set_bool(MPX .. "AWD_MIXING_UP", false)
			stats.set_bool(MPX .. "AWD_PRO_THIEF", false)
			stats.set_bool(MPX .. "AWD_CAT_BURGLAR", false)
			stats.set_bool(MPX .. "AWD_ONE_OF_THEM", false)
			stats.set_bool(MPX .. "AWD_GOLDEN_GUN", false)
			stats.set_bool(MPX .. "AWD_ELITE_THIEF", false)
			stats.set_bool(MPX .. "AWD_PROFESSIONAL", false)
			stats.set_bool(MPX .. "AWD_HELPING_OUT", false)
			stats.set_bool(MPX .. "AWD_COURIER", false)
			stats.set_bool(MPX .. "AWD_PARTY_VIBES", false)
			stats.set_bool(MPX .. "AWD_HELPING_HAND", false)
			stats.set_bool(MPX .. "AWD_ELEVENELEVEN", false)
			stats.set_bool(MPX .. "COMPLETE_H0_F_USING_VETIR", false)
			stats.set_bool(MPX .. "COMPLETE_H0_F_USING_LONGFIN", false)
			stats.set_bool(MPX .. "COMPLETE_H0_F_USING_ANNIH", false)
			stats.set_bool(MPX .. "COMPLETE_H0_F_USING_ALKONOS", false)
			stats.set_bool(MPX .. "COMPLETE_H0_F_USING_PATROLB", false)
			stats.set_bool(MPX .. "AWD_CAR_CLUB", false)
			stats.set_bool(MPX .. "AWD_PRO_CAR_EXPORT", false)
			stats.set_bool(MPX .. "AWD_UNION_DEPOSITORY", false)
			stats.set_bool(MPX .. "AWD_MILITARY_CONVOY", false)
			stats.set_bool(MPX .. "AWD_FLEECA_BANK", false)
			stats.set_bool(MPX .. "AWD_FREIGHT_TRAIN", false)
			stats.set_bool(MPX .. "AWD_BOLINGBROKE_ASS", false)
			stats.set_bool(MPX .. "AWD_IAA_RAID", false)
			stats.set_bool(MPX .. "AWD_METH_JOB", false)
			stats.set_bool(MPX .. "AWD_BUNKER_RAID", false)
			stats.set_bool(MPX .. "AWD_STRAIGHT_TO_VIDEO", false)
			stats.set_bool(MPX .. "AWD_MONKEY_C_MONKEY_DO", false)
			stats.set_bool(MPX .. "AWD_TRAINED_TO_KILL", false)
			stats.set_bool(MPX .. "AWD_DIRECTOR", false)
			stats.set_bool(MPX .. "AWD_TEEING_OFF", false)
			stats.set_bool(MPX .. "AWD_PARTY_NIGHT", false)
			stats.set_bool(MPX .. "AWD_BILLIONAIRE_GAMES", false)
			stats.set_bool(MPX .. "AWD_HOOD_PASS", false)
			stats.set_bool(MPX .. "AWD_STUDIO_TOUR", false)
			stats.set_bool(MPX .. "AWD_DONT_MESS_DRE", false)
			stats.set_bool(MPX .. "AWD_BACKUP", false)
			stats.set_bool(MPX .. "AWD_SHORTFRANK_1", false)
			stats.set_bool(MPX .. "AWD_SHORTFRANK_2", false)
			stats.set_bool(MPX .. "AWD_SHORTFRANK_3", false)
			stats.set_bool(MPX .. "AWD_CONTR_KILLER", false)
			stats.set_bool(MPX .. "AWD_DOGS_BEST_FRIEND", false)
			stats.set_bool(MPX .. "AWD_MUSIC_STUDIO", false)
			stats.set_bool(MPX .. "AWD_SHORTLAMAR_1", false)
			stats.set_bool(MPX .. "AWD_SHORTLAMAR_2", false)
			stats.set_bool(MPX .. "AWD_SHORTLAMAR_3", false)
			stats.set_bool(MPX .. "BS_FRANKLIN_DIALOGUE_0", false)
			stats.set_bool(MPX .. "BS_FRANKLIN_DIALOGUE_1", false)
			stats.set_bool(MPX .. "BS_FRANKLIN_DIALOGUE_2", false)
			stats.set_bool(MPX .. "BS_IMANI_D_APP_SETUP", false)
			stats.set_bool(MPX .. "BS_IMANI_D_APP_STRAND", false)
			stats.set_bool(MPX .. "BS_IMANI_D_APP_PARTY", false)
			stats.set_bool(MPX .. "BS_IMANI_D_APP_PARTY_2", false)
			stats.set_bool(MPX .. "BS_IMANI_D_APP_PARTY_F", false)
			stats.set_bool(MPX .. "BS_IMANI_D_APP_BILL", false)
			stats.set_bool(MPX .. "BS_IMANI_D_APP_BILL_2", false)
			stats.set_bool(MPX .. "BS_IMANI_D_APP_BILL_F", false)
			stats.set_bool(MPX .. "BS_IMANI_D_APP_HOOD", false)
			stats.set_bool(MPX .. "BS_IMANI_D_APP_HOOD_2", false)
			stats.set_bool(MPX .. "BS_IMANI_D_APP_HOOD_F", false)
			stats.set_bool("MPPLY_AWD_FLEECA_FIN", false)
			stats.set_bool("MPPLY_AWD_PRISON_FIN", false)
			stats.set_bool("MPPLY_AWD_HUMANE_FIN", false)
			stats.set_bool("MPPLY_AWD_SERIESA_FIN", false)
			stats.set_bool("MPPLY_AWD_PACIFIC_FIN", false)
			stats.set_bool("MPPLY_AWD_HST_ORDER", false)
			stats.set_bool("MPPLY_AWD_COMPLET_HEIST_MEM", false)
			stats.set_bool("MPPLY_AWD_COMPLET_HEIST_1STPER", false)
			stats.set_bool("MPPLY_AWD_HST_SAME_TEAM", false)
			stats.set_bool("MPPLY_AWD_HST_ULT_CHAL", false)
			stats.set_bool("MPPLY_AWD_GANGOPS_IAA", false)
			stats.set_bool("MPPLY_AWD_GANGOPS_SUBMARINE", false)
			stats.set_bool("MPPLY_AWD_GANGOPS_MISSILE", false)
			stats.set_bool("MPPLY_AWD_GANGOPS_ALLINORDER", false)
			stats.set_bool("MPPLY_AWD_GANGOPS_LOYALTY", false)
			stats.set_bool("MPPLY_AWD_GANGOPS_LOYALTY2", false)
			stats.set_bool("MPPLY_AWD_GANGOPS_LOYALTY3", false)
			stats.set_bool("MPPLY_AWD_GANGOPS_CRIMMASMD", false)
			stats.set_bool("MPPLY_AWD_GANGOPS_CRIMMASMD2", false)
			stats.set_bool("MPPLY_AWD_GANGOPS_CRIMMASMD3", false)
			stats.set_bool("MPPLY_AWD_GANGOPS_SUPPORT", false)
		end)
        JSXX:add_sameline()   ------同行
		JSXX:add_button("统计数据部分 1", function()
			PlayerIndex = globals.get_int(1574918)
			if PlayerIndex == 0 then
				MPX = "MP0_"
			else
				MPX = "MP1_"
			end
			stats.set_int(MPX .. "GANGOPS_FLOW_MISSION_PROG", 240)
			stats.set_int(MPX .. "GANGOPS_HEIST_STATUS", 229378)
			stats.set_int(MPX .. "GANGOPS_FLOW_NOTIFICATIONS", 1557)
			stats.set_int(MPX .. "GANGOPS_FLOW_MISSION_PROG", 240)
			stats.set_int(MPX .. "GANGOPS_HEIST_STATUS", 229378)
			stats.set_int(MPX .. "GANGOPS_FLOW_NOTIFICATIONS", 1557)
			stats.set_int(MPX .. "GANGOPS_FLOW_MISSION_PROG", 16368)
			stats.set_int(MPX .. "GANGOPS_HEIST_STATUS", 229380)
			stats.set_int(MPX .. "GANGOPS_FLOW_NOTIFICATIONS", 1557)
			stats.set_int(MPX .. "FIXER_GENERAL_BS", -1)
			stats.set_int(MPX .. "FIXER_COMPLETED_BS", -1)
			stats.set_int(MPX .. "FIXER_STORY_BS", -1)
			stats.set_int(MPX .. "FIXER_STORY_STRAND", -1)
			stats.set_int(MPX .. "FIXER_STORY_COOLDOWN", -1)
			stats.set_int(MPX .. "FIXER_COUNT", 500)
			stats.set_int(MPX .. "PAYPHONE_BONUS_KILL_METHOD", -1)
			stats.set_int(MPX .. "XMASLIVERIES0", -1)
			stats.set_int(MPX .. "XMASLIVERIES1", -1)
			stats.set_int(MPX .. "XMASLIVERIES2", -1)
			stats.set_int(MPX .. "XMASLIVERIES3", -1)
			stats.set_int(MPX .. "XMASLIVERIES5", -1)
			stats.set_int(MPX .. "XMASLIVERIES6", -1)
			stats.set_int(MPX .. "XMASLIVERIES7", -1)
			stats.set_int(MPX .. "XMASLIVERIES8", -1)
			stats.set_int(MPX .. "XMASLIVERIES9", -1)
			stats.set_int(MPX .. "XMASLIVERIES10", -1)
			stats.set_int(MPX .. "XMASLIVERIES11", -1)
			stats.set_int(MPX .. "XMASLIVERIES12", -1)
			stats.set_int(MPX .. "XMASLIVERIES13", -1)
			stats.set_int(MPX .. "XMASLIVERIES14", -1)
			stats.set_int(MPX .. "XMASLIVERIES15", -1)
			stats.set_int(MPX .. "XMASLIVERIES16", -1)
			stats.set_int(MPX .. "XMASLIVERIES17", -1)
			stats.set_int(MPX .. "XMASLIVERIES18", -1)
			stats.set_int(MPX .. "XMASLIVERIES19", -1)
			stats.set_int(MPX .. "XMASLIVERIES20", -1)
			stats.set_int(MPX .. "AWD_WATCH_YOUR_STEP", 15)
			stats.set_int(MPX .. "AWD_TOWER_OFFENSE", 15)
			stats.set_int(MPX .. "AWD_READY_FOR_WAR", 60)
			stats.set_int(MPX .. "AWD_THROUGH_A_LENS", 60)
			stats.set_int(MPX .. "AWD_SPINNER", 60)
			stats.set_int(MPX .. "AWD_YOUMEANBOOBYTRAPS", 15)
			stats.set_int(MPX .. "AWD_MASTER_BANDITO", 12)
			stats.set_int(MPX .. "AWD_SITTING_DUCK", 60)
			stats.set_int(MPX .. "AWD_CROWDPARTICIPATION", 60)
			stats.set_int(MPX .. "AWD_KILL_OR_BE_KILLED", 60)
			stats.set_int(MPX .. "AWD_MASSIVE_SHUNT", 60)
			stats.set_int(MPX .. "AWD_YOURE_OUTTA_HERE", 110)
			stats.set_int(MPX .. "AWD_WEVE_GOT_ONE", 52)
			stats.set_int(MPX .. "AWD_TIME_SERVED", 110)
			stats.set_int(MPX .. "AWD_CAREER_WINNER", 110)
			stats.set_int(MPX .. "AWD_ARENA_WAGEWORKER", 1100000)
			stats.set_int(MPX .. "CH_ARC_CAB_CLAW_TROPHY", -1)
			stats.set_int(MPX .. "CH_ARC_CAB_LOVE_TROPHY", -1)
			stats.set_int(MPX .. "AWD_PREPARATION", 40)
			stats.set_int(MPX .. "AWD_ASLEEPONJOB", 20)
			stats.set_int(MPX .. "AWD_DAICASHCRAB", 100000)
			stats.set_int(MPX .. "AWD_BIGBRO", 40)
			stats.set_int(MPX .. "AWD_SHARPSHOOTER", 40)
			stats.set_int(MPX .. "AWD_RACECHAMP", 40)
			stats.set_int(MPX .. "AWD_BATSWORD", 1000000)
			stats.set_int(MPX .. "AWD_COINPURSE", 950000)
			stats.set_int(MPX .. "AWD_ASTROCHIMP", 3000000)
			stats.set_int(MPX .. "AWD_MASTERFUL", 40000)
			stats.set_int(MPX .. "SCGW_NUM_WINS_GANG_0", 50)
			stats.set_int(MPX .. "SCGW_NUM_WINS_GANG_1", 50)
			stats.set_int(MPX .. "SCGW_NUM_WINS_GANG_2", 50)
			stats.set_int(MPX .. "SCGW_NUM_WINS_GANG_3", 50)
			stats.set_int(MPX .. "IAP_MA0_MOON_DIST", 2147483647)
			stats.set_int(MPX .. "AWD_FACES_OF_DEATH", 50)
			stats.set_int(MPX .. "HEIST_PLANNING_STAGE", -1)
			stats.set_int(MPX .. "CHAR_ABILITY_1_UNLCK", -1)
			stats.set_int(MPX .. "CHAR_ABILITY_2_UNLCK", -1)
			stats.set_int(MPX .. "CHAR_ABILITY_3_UNLCK", -1)
			stats.set_int(MPX .. "CHAR_FM_ABILITY_1_UNLCK", -1)
			stats.set_int(MPX .. "CHAR_FM_ABILITY_2_UNLCK", -1)
			stats.set_int(MPX .. "CHAR_FM_ABILITY_3_UNLCK", -1)
			stats.set_int(MPX .. "LIFETIME_BKR_SELL_EARNINGS5", 50000000)
			stats.set_int(MPX .. "VCM_FLOW_PROGRESS", -1)
			stats.set_int(MPX .. "VCM_STORY_PROGRESS", -1)
			stats.set_int(MPX .. "MKRIFLE_MK2_KILLS", 500)
			stats.set_int(MPX .. "MKRIFLE_MK2_DEATHS", 100)
			stats.set_int(MPX .. "MKRIFLE_MK2_SHOTS", 500)
			stats.set_int(MPX .. "MKRIFLE_MK2_HITS", 500)
			stats.set_int(MPX .. "MKRIFLE_MK2_HEADSHOTS", 500)
			stats.set_int(MPX .. "MKRIFLE_MK2_HELDTIME", 5963259)
			stats.set_int(MPX .. "MKRIFLE_MK2_DB_HELDTIME", 5963259)
			stats.set_int(MPX .. "MKRIFLE_MK2_ENEMY_KILLS", 500)
			stats.set_int(MPX .. "AWD_ODD_JOBS", 52)
			stats.set_int(MPX .. "AWD_PREPARATION", 50)
			stats.set_int(MPX .. "AWD_ASLEEPONJOB", 20)
			stats.set_int(MPX .. "AWD_DAICASHCRAB", 100000)
			stats.set_int(MPX .. "AWD_BIGBRO", 40)
			stats.set_int(MPX .. "AWD_SHARPSHOOTER", 40)
			stats.set_int(MPX .. "AWD_RACECHAMP", 40)
			stats.set_int(MPX .. "AWD_BATSWORD", 1000000)
			stats.set_int(MPX .. "AWD_COINPURSE", 950000)
			stats.set_int(MPX .. "AWD_ASTROCHIMP", 3000000)
			stats.set_int(MPX .. "AWD_MASTERFUL", 40000)
			stats.set_int(MPX .. "DM_CURRENT_KILLS", 10000)
			stats.set_int(MPX .. "DM_CURRENT_ASSISTS", 500)
			stats.set_int(MPX .. "DM_CURRENT_DEATHS", 600)
			stats.set_int(MPX .. "DM_HIGHEST_KILLSTREAK", 900)
			stats.set_int(MPX .. "HIGHEST_SKITTLES", 900)
			stats.set_int(MPX .. "NUMBER_NEAR_MISS", 1000)
			stats.set_int(MPX .. "LAP_DANCED_BOUGHT", 100)
			stats.set_int(MPX .. "CARS_EXPLODED", 500)
			stats.set_int(MPX .. "CARS_COPS_EXPLODED", 300)
			stats.set_int(MPX .. "BIKES_EXPLODED", 100)
			stats.set_int(MPX .. "BOATS_EXPLODED", 168)
			stats.set_int(MPX .. "HELIS_EXPLODED", 98)
			stats.set_int(MPX .. "PLANES_EXPLODED", 138)
			stats.set_int(MPX .. "QUADBIKE_EXPLODED", 50)
			stats.set_int(MPX .. "BICYCLE_EXPLODED", 48)
			stats.set_int(MPX .. "SUBMARINE_EXPLODED", 28)
			stats.set_int(MPX .. "DEATHS", 499)
			stats.set_int(MPX .. "DIED_IN_DROWNING", 833)
			stats.set_int(MPX .. "DIED_IN_DROWNINGINVEHICLE", 833)
			stats.set_int(MPX .. "DIED_IN_EXPLOSION", 833)
			stats.set_int(MPX .. "DIED_IN_FALL", 833)
			stats.set_int(MPX .. "DIED_IN_FIRE", 833)
			stats.set_int(MPX .. "DIED_IN_ROAD", 833)
			stats.set_int(MPX .. "NO_PHOTOS_TAKEN", 100)
			stats.set_int(MPX .. "PROSTITUTES_FREQUENTED", 100)
			stats.set_int(MPX .. "BOUNTSONU", 200)
			stats.set_int(MPX .. "BOUNTPLACED", 500)
			stats.set_int(MPX .. "PASS_DB_KILLS", 300)
			stats.set_int(MPX .. "PASS_DB_PLAYER_KILLS", 300)
			stats.set_int(MPX .. "PASS_DB_SHOTS", 300)
			stats.set_int(MPX .. "PASS_DB_HITS", 300)
			stats.set_int(MPX .. "PASS_DB_HITS_PEDS_VEHICLES", 300)
			stats.set_int(MPX .. "PASS_DB_HEADSHOTS", 300)
			stats.set_int(MPX .. "TIRES_POPPED_BY_GUNSHOT", 500)
			stats.set_int(MPX .. "NUMBER_CRASHES_CARS", 300)
			stats.set_int(MPX .. "NUMBER_CRASHES_BIKES", 300)
			stats.set_int(MPX .. "BAILED_FROM_VEHICLE", 300)
			stats.set_int(MPX .. "NUMBER_CRASHES_QUADBIKES", 300)
			stats.set_int(MPX .. "NUMBER_STOLEN_COP_VEHICLE", 300)
			stats.set_int(MPX .. "NUMBER_STOLEN_CARS", 300)
			stats.set_int(MPX .. "NUMBER_STOLEN_BIKES", 300)
			stats.set_int(MPX .. "NUMBER_STOLEN_BOATS", 300)
			stats.set_int(MPX .. "NUMBER_STOLEN_HELIS", 300)
			stats.set_int(MPX .. "NUMBER_STOLEN_PLANES", 300)
			stats.set_int(MPX .. "NUMBER_STOLEN_QUADBIKES", 300)
			stats.set_int(MPX .. "NUMBER_STOLEN_BICYCLES", 300)
			stats.set_int(MPX .. "FAVOUTFITBIKETIMECURRENT", 884483972)
			stats.set_int(MPX .. "FAVOUTFITBIKETIME1ALLTIME", 884483972)
			stats.set_int(MPX .. "FAVOUTFITBIKETYPECURRENT", 884483972)
			stats.set_int(MPX .. "FAVOUTFITBIKETYPEALLTIME", 884483972)
			stats.set_int(MPX .. "MC_CONTRIBUTION_POINTS", 1000)
			stats.set_int(MPX .. "MEMBERSMARKEDFORDEATH", 700)
			stats.set_int(MPX .. "MCKILLS", 500)
			stats.set_int(MPX .. "MCDEATHS", 700)
			stats.set_int(MPX .. "RIVALPRESIDENTKILLS", 700)
			stats.set_int(MPX .. "RIVALCEOANDVIPKILLS", 700)
			stats.set_int(MPX .. "MELEEKILLS", 700)
			stats.set_int(MPX .. "CLUBHOUSECONTRACTSCOMPLETE", 700)
			stats.set_int(MPX .. "CLUBHOUSECONTRACTEARNINGS", 32698547)
			stats.set_int(MPX .. "CLUBCHALLENGESCOMPLETED", 700)
			stats.set_int(MPX .. "MEMBERCHALLENGESCOMPLETED", 700)
			stats.set_int(MPX .. "HITS", 100000)
			stats.set_int(MPX .. "MKRIFLE_KILLS", 500)
			stats.set_int(MPX .. "MKRIFLE_DEATHS", 100)
			stats.set_int(MPX .. "MKRIFLE_SHOTS", 500)
			stats.set_int(MPX .. "MKRIFLE_HITS", 500)
			stats.set_int(MPX .. "MKRIFLE_HEADSHOTS", 500)
			stats.set_int(MPX .. "MKRIFLE_HELDTIME", 5963259)
			stats.set_int(MPX .. "MKRIFLE_DB_HELDTIME", 5963259)
			stats.set_int(MPX .. "MKRIFLE_ENEMY_KILLS", 500)
			stats.set_int(MPX .. "BETAMOUNT", 500)
			stats.set_int(MPX .. "GHKILLS", 500)
			stats.set_int(MPX .. "HORDELVL", 10)
			stats.set_int(MPX .. "HORDKILLS", 500)
			stats.set_int(MPX .. "UNIQUECRATES", 500)
			stats.set_int(MPX .. "BJWINS", 500)
			stats.set_int(MPX .. "HORDEWINS", 500)
			stats.set_int(MPX .. "MCMWINS", 500)
			stats.set_int(MPX .. "GANGHIDWINS", 500)
			stats.set_int(MPX .. "KILLS", 800)
			stats.set_int(MPX .. "HITS_PEDS_VEHICLES", 100)
			stats.set_int(MPX .. "SHOTS", 1000)
			stats.set_int(MPX .. "HEADSHOTS", 100)
			stats.set_int(MPX .. "KILLS_ARMED", 650)
			stats.set_int(MPX .. "SUCCESSFUL_COUNTERS", 100)
			stats.set_int(MPX .. "KILLS_PLAYERS", 3593)
			stats.set_int(MPX .. "DEATHS_PLAYER", 1002)
			stats.set_int(MPX .. "KILLS_STEALTH", 100)
			stats.set_int(MPX .. "KILLS_INNOCENTS", 500)
			stats.set_int(MPX .. "KILLS_ENEMY_GANG_MEMBERS", 100)
			stats.set_int(MPX .. "KILLS_FRIENDLY_GANG_MEMBERS", 100)
			stats.set_int(MPX .. "KILLS_BY_OTHERS", 100)
			stats.set_int(MPX .. "HITS", 600)
			stats.set_int(MPX .. "BIGGEST_VICTIM_KILLS", 500)
			stats.set_int(MPX .. "ARCHENEMY_KILLS", 500)
			stats.set_int(MPX .. "CRARMWREST", 500)
			stats.set_int(MPX .. "CRBASEJUMP", 500)
			stats.set_int(MPX .. "CRDARTS", 500)
			stats.set_int(MPX .. "CRDM", 500)
			stats.set_int(MPX .. "CRGANGHIDE", 500)
			stats.set_int(MPX .. "CRGOLF", 500)
			stats.set_int(MPX .. "CRHORDE", 500)
			stats.set_int(MPX .. "CRMISSION", 500)
			stats.set_int(MPX .. "CRSHOOTRNG", 500)
			stats.set_int(MPX .. "CRTENNIS", 500)
			stats.set_int(MPX .. "TOTAL_TIME_CINEMA", 2147483647)
			stats.set_int(MPX .. "NO_TIMES_CINEMA", 500)
			stats.set_int(MPX .. "TIME_AS_A_PASSENGER", 2147483647)
			stats.set_int(MPX .. "TIME_AS_A_DRIVER", 2147483647)
			stats.set_int(MPX .. "TIME_SPENT_FLYING", 2147483647)
			stats.set_int(MPX .. "TIME_IN_CAR", 2147483647)
			stats.set_int(MPX .. "LIFETIME_BKR_SELL_UNDERTABC", 500)
			stats.set_int(MPX .. "LIFETIME_BKR_SELL_COMPLETBC", 500)
			stats.set_int(MPX .. "BKR_PROD_STOP_COUT_S1_0", 500)
			stats.set_int(MPX .. "BKR_PROD_STOP_COUT_S2_0", 500)
			stats.set_int(MPX .. "BKR_PROD_STOP_COUT_S3_0", 500)
			stats.set_int(MPX .. "LFETIME_BIKER_BUY_UNDERTA1", 500)
			stats.set_int(MPX .. "LFETIME_BIKER_BUY_COMPLET1", 500)
			stats.set_int(MPX .. "LFETIME_BIKER_SELL_UNDERTA1", 500)
			stats.set_int(MPX .. "LFETIME_BIKER_SELL_COMPLET1", 500)
			stats.set_int(MPX .. "LIFETIME_BKR_SEL_UNDERTABC1", 500)
			stats.set_int(MPX .. "LIFETIME_BKR_SEL_COMPLETBC1", 500)
			stats.set_int(MPX .. "BKR_PROD_STOP_COUT_S1_1", 500)
			stats.set_int(MPX .. "BKR_PROD_STOP_COUT_S2_1", 500)
			stats.set_int(MPX .. "BKR_PROD_STOP_COUT_S3_1", 500)
			stats.set_int(MPX .. "LFETIME_BIKER_BUY_UNDERTA2", 500)
			stats.set_int(MPX .. "LFETIME_BIKER_BUY_COMPLET2", 500)
			stats.set_int(MPX .. "LFETIME_BIKER_SELL_UNDERTA2", 500)
			stats.set_int(MPX .. "LFETIME_BIKER_SELL_COMPLET2", 500)
			stats.set_int(MPX .. "LIFETIME_BKR_SEL_UNDERTABC2", 500)
			stats.set_int(MPX .. "LIFETIME_BKR_SEL_COMPLETBC2", 500)
			stats.set_int(MPX .. "BKR_PROD_STOP_COUT_S1_2", 500)
			stats.set_int(MPX .. "BKR_PROD_STOP_COUT_S2_2", 500)
			stats.set_int(MPX .. "BKR_PROD_STOP_COUT_S3_2", 500)
			stats.set_int(MPX .. "LFETIME_BIKER_BUY_UNDERTA3", 500)
			stats.set_int(MPX .. "LFETIME_BIKER_BUY_COMPLET3", 500)
			stats.set_int(MPX .. "LFETIME_BIKER_SELL_UNDERTA3", 500)
			stats.set_int(MPX .. "LFETIME_BIKER_SELL_COMPLET3", 500)
			stats.set_int(MPX .. "LIFETIME_BKR_SEL_UNDERTABC3", 500)
			stats.set_int(MPX .. "LIFETIME_BKR_SEL_COMPLETBC3", 500)
			stats.set_int(MPX .. "BKR_PROD_STOP_COUT_S1_3", 500)
			stats.set_int(MPX .. "BKR_PROD_STOP_COUT_S2_3", 500)
			stats.set_int(MPX .. "BKR_PROD_STOP_COUT_S3_3", 500)
			stats.set_int(MPX .. "LFETIME_BIKER_BUY_UNDERTA4", 500)
			stats.set_int(MPX .. "LFETIME_BIKER_BUY_COMPLET4", 500)
			stats.set_int(MPX .. "LFETIME_BIKER_SELL_UNDERTA4", 500)
			stats.set_int(MPX .. "LFETIME_BIKER_SELL_COMPLET4", 500)
			stats.set_int(MPX .. "LIFETIME_BKR_SEL_UNDERTABC4", 500)
			stats.set_int(MPX .. "LIFETIME_BKR_SEL_COMPLETBC4", 500)
			stats.set_int(MPX .. "BKR_PROD_STOP_COUT_S1_4", 500)
			stats.set_int(MPX .. "BKR_PROD_STOP_COUT_S2_4", 500)
			stats.set_int(MPX .. "BKR_PROD_STOP_COUT_S3_4", 500)
			stats.set_int(MPX .. "LFETIME_BIKER_BUY_UNDERTA5", 500)
			stats.set_int(MPX .. "LFETIME_BIKER_BUY_COMPLET5", 500)
			stats.set_int(MPX .. "LIFETIME_BKR_SEL_UNDERTABC5", 500)
			stats.set_int(MPX .. "LIFETIME_BKR_SEL_COMPLETBC5", 500)
			stats.set_int(MPX .. "LFETIME_BIKER_SELL_UNDERTA5", 500)
			stats.set_int(MPX .. "LFETIME_BIKER_SELL_COMPLET5", 500)
			stats.set_int(MPX .. "BUNKER_UNITS_MANUFAC", 500)
			stats.set_int(MPX .. "CHAR_ABILITY_1_UNLCK", -1)
			stats.set_int(MPX .. "CHAR_ABILITY_2_UNLCK", -1)
			stats.set_int(MPX .. "CHAR_ABILITY_3_UNLCK", -1)
			stats.set_int(MPX .. "CHAR_FM_ABILITY_1_UNLCK", -1)
			stats.set_int(MPX .. "CHAR_FM_ABILITY_2_UNLCK", -1)
			stats.set_int(MPX .. "CHAR_FM_ABILITY_3_UNLCK", -1)
			stats.set_int(MPX .. "LFETIME_HANGAR_BUY_UNDETAK", 500)
			stats.set_int(MPX .. "LFETIME_HANGAR_BUY_COMPLET", 500)
			stats.set_int(MPX .. "LFETIME_HANGAR_SEL_UNDETAK", 500)
			stats.set_int(MPX .. "LFETIME_HANGAR_SEL_COMPLET", 500)
			stats.set_int(MPX .. "LFETIME_HANGAR_EARNINGS", 29654123)
			stats.set_int(MPX .. "LFETIME_HANGAR_EARN_BONUS", 15987456)
			stats.set_int(MPX .. "RIVAL_HANGAR_CRATES_STOLEN", 500)
			stats.set_int(MPX .. "LFETIME_IE_STEAL_STARTED", 500)
			stats.set_int(MPX .. "LFETIME_IE_EXPORT_STARTED", 500)
			stats.set_int(MPX .. "LFETIME_IE_EXPORT_COMPLETED", 500)
			stats.set_int(MPX .. "LFETIME_IE_MISSION_EARNINGS", 59654897)
			stats.set_int(MPX .. "AT_FLOW_IMPEXP_NUM", 500)
			stats.set_int(MPX .. "CLUB_POPULARITY", 1000)
			stats.set_int(MPX .. "NIGHTCLUB_VIP_APPEAR", 300)
			stats.set_int(MPX .. "NIGHTCLUB_JOBS_DONE", 500)
			stats.set_int(MPX .. "NIGHTCLUB_EARNINGS", 39856412)
			stats.set_int(MPX .. "HUB_SALES_COMPLETED", 500)
			stats.set_int(MPX .. "HUB_EARNINGS", 29865423)
			stats.set_int(MPX .. "DANCE_COMBO_DURATION_MINS", 86400000)
			stats.set_int(MPX .. "NIGHTCLUB_PLAYER_APPEAR", 500)
			stats.set_int(MPX .. "LIFETIME_HUB_GOODS_SOLD", 500)
			stats.set_int(MPX .. "LIFETIME_HUB_GOODS_MADE", 500)
			stats.set_int(MPX .. "ADMIN_CLOTHES_GV_BS_1", -1)
			stats.set_int(MPX .. "ADMIN_CLOTHES_GV_BS_10", -1)
			stats.set_int(MPX .. "ADMIN_CLOTHES_GV_BS_11", -1)
			stats.set_int(MPX .. "ADMIN_CLOTHES_GV_BS_12", -1)
			stats.set_int(MPX .. "ADMIN_CLOTHES_GV_BS_2", -1)
			stats.set_int(MPX .. "ADMIN_CLOTHES_GV_BS_3", -1)
			stats.set_int(MPX .. "ADMIN_CLOTHES_GV_BS_4", -1)
			stats.set_int(MPX .. "ADMIN_CLOTHES_GV_BS_5", -1)
			stats.set_int(MPX .. "ADMIN_CLOTHES_GV_BS_6", -1)
			stats.set_int(MPX .. "ADMIN_CLOTHES_GV_BS_7", -1)
			stats.set_int(MPX .. "ADMIN_CLOTHES_GV_BS_8", -1)
			stats.set_int(MPX .. "ADMIN_CLOTHES_GV_BS_9", -1)
			stats.set_int(MPX .. "ADMIN_WEAPON_GV_BS_1", -1)
			stats.set_int(MPX .. "AIR_LAUNCHES_OVER_40M", 25)
			stats.set_int(MPX .. "AWD_5STAR_WANTED_AVOIDANCE", 50)
			stats.set_int(MPX .. "AWD_CAR_BOMBS_ENEMY_KILLS", 25)
			stats.set_int(MPX .. "AWD_CARS_EXPORTED", 50)
			stats.set_int(MPX .. "AWD_CONTROL_CROWDS", 25)
			stats.set_int(MPX .. "AWD_DAILYOBJCOMPLETED", 100)
			stats.set_int(MPX .. "AWD_DO_HEIST_AS_MEMBER", 25)
			stats.set_int(MPX .. "AWD_DO_HEIST_AS_THE_LEADER", 25)
			stats.set_int(MPX .. "AWD_DROPOFF_CAP_PACKAGES", 100)
			stats.set_int(MPX .. "AWD_FINISH_HEIST_SETUP_JOB", 50)
			stats.set_int(MPX .. "AWD_FINISH_HEISTS", 50)
			stats.set_int(MPX .. "AWD_FM_DM_3KILLSAMEGUY", 50)
			stats.set_int(MPX .. "AWD_FM_DM_KILLSTREAK", 100)
			stats.set_int(MPX .. "AWD_FM_DM_STOLENKILL", 50)
			stats.set_int(MPX .. "AWD_FM_DM_TOTALKILLS", 500)
			stats.set_int(MPX .. "AWD_FM_DM_WINS", 50)
			stats.set_int(MPX .. "AWD_FM_GOLF_HOLE_IN_1", 300)
			stats.set_int(MPX .. "AWD_FM_GOLF_BIRDIES", 25)
			stats.set_int(MPX .. "AWD_FM_GOLF_WON", 25)
			stats.set_int(MPX .. "AWD_FM_GTA_RACES_WON", 50)
			stats.set_int(MPX .. "AWD_FM_RACE_LAST_FIRST", 25)
			stats.set_int(MPX .. "AWD_FM_RACES_FASTEST_LAP", 50)
			stats.set_int(MPX .. "AWD_FM_SHOOTRANG_CT_WON", 25)
			stats.set_int(MPX .. "AWD_FM_SHOOTRANG_RT_WON", 25)
			stats.set_int(MPX .. "AWD_FM_SHOOTRANG_TG_WON", 25)
			stats.set_int(MPX .. "AWD_FM_TDM_MVP", 50)
			stats.set_int(MPX .. "AWD_FM_TDM_WINS", 50)
			stats.set_int(MPX .. "AWD_FM_TENNIS_ACE", 25)
			stats.set_int(MPX .. "AWD_FM_TENNIS_WON", 25)
			stats.set_int(MPX .. "AWD_FMBASEJMP", 25)
			stats.set_int(MPX .. "AWD_FMBBETWIN", 50000)
			stats.set_int(MPX .. "AWD_FMCRATEDROPS", 25)
			stats.set_int(MPX .. "AWD_FMDRIVEWITHOUTCRASH", 30)
			stats.set_int(MPX .. "AWD_FMHORDWAVESSURVIVE", 10)
			stats.set_int(MPX .. "AWD_FMKILLBOUNTY", 25)
			stats.set_int(MPX .. "AWD_FMRALLYWONDRIVE", 25)
			stats.set_int(MPX .. "AWD_FMRALLYWONNAV", 25)
			stats.set_int(MPX .. "AWD_FMREVENGEKILLSD", 50)
			stats.set_int(MPX .. "AWD_FMSHOOTDOWNCOPHELI", 25)
			stats.set_int(MPX .. "AWD_FMWINAIRRACE", 25)
			stats.set_int(MPX .. "AWD_FMWINRACETOPOINTS", 25)
			stats.set_int(MPX .. "AWD_FMWINSEARACE", 25)
			stats.set_int(MPX .. "AWD_HOLD_UP_SHOPS", 20)
			stats.set_int(MPX .. "AWD_KILL_CARRIER_CAPTURE", 100)
			stats.set_int(MPX .. "AWD_KILL_PSYCHOPATHS", 100)
			stats.set_int(MPX .. "AWD_KILL_TEAM_YOURSELF_LTS", 25)
			stats.set_int(MPX .. "AWD_LAPDANCES", 25)
			stats.set_int(MPX .. "AWD_LESTERDELIVERVEHICLES", 25)
			stats.set_int(MPX .. "AWD_MENTALSTATE_TO_NORMAL", 50)
			stats.set_int(MPX .. "AWD_NIGHTVISION_KILLS", 100)
			stats.set_int(MPX .. "AWD_NO_HAIRCUTS", 25)
			stats.set_int(MPX .. "AWD_ODISTRACTCOPSNOEATH", 25)
			stats.set_int(MPX .. "AWD_ONLY_PLAYER_ALIVE_LTS", 50)
			stats.set_int(MPX .. "AWD_PARACHUTE_JUMPS_20M", 25)
			stats.set_int(MPX .. "AWD_PARACHUTE_JUMPS_50M", 25)
			stats.set_int(MPX .. "AWD_PASSENGERTIME", 4)
			stats.set_int(MPX .. "AWD_PICKUP_CAP_PACKAGES", 100)
			stats.set_int(MPX .. "AWD_RACES_WON", 50)
			stats.set_int(MPX .. "AWD_SECURITY_CARS_ROBBED", 25)
			stats.set_int(MPX .. "AWD_TAKEDOWNSMUGPLANE", 50)
			stats.set_int(MPX .. "AWD_TIME_IN_HELICOPTER", 4)
			stats.set_int(MPX .. "AWD_TRADE_IN_YOUR_PROPERTY", 25)
			stats.set_int(MPX .. "AWD_VEHICLES_JACKEDR", 500)
			stats.set_int(MPX .. "AWD_WIN_AT_DARTS", 25)
			stats.set_int(MPX .. "AWD_WIN_CAPTURE_DONT_DYING", 25)
			stats.set_int(MPX .. "AWD_WIN_CAPTURES", 50)
			stats.set_int(MPX .. "AWD_WIN_GOLD_MEDAL_HEISTS", 25)
			stats.set_int(MPX .. "AWD_WIN_LAST_TEAM_STANDINGS", 50)
			stats.set_int(MPX .. "BOTTLE_IN_POSSESSION", -1)
			stats.set_int(MPX .. "CHAR_FM_CARMOD_1_UNLCK", -1)
			stats.set_int(MPX .. "CHAR_FM_CARMOD_2_UNLCK", -1)
			stats.set_int(MPX .. "CHAR_FM_CARMOD_3_UNLCK", -1)
			stats.set_int(MPX .. "CHAR_FM_CARMOD_4_UNLCK", -1)
			stats.set_int(MPX .. "CHAR_FM_CARMOD_5_UNLCK", -1)
			stats.set_int(MPX .. "CHAR_FM_CARMOD_6_UNLCK", -1)
			stats.set_int(MPX .. "CHAR_FM_CARMOD_7_UNLCK", -1)
			stats.set_int(MPX .. "CHAR_FM_VEHICLE_1_UNLCK", -1)
			stats.set_int(MPX .. "CHAR_FM_VEHICLE_2_UNLCK", -1)
			stats.set_int(MPX .. "CHAR_FM_WEAP_ADDON_1_UNLCK", -1)
			stats.set_int(MPX .. "CHAR_FM_WEAP_ADDON_2_UNLCK", -1)
			stats.set_int(MPX .. "CHAR_FM_WEAP_ADDON_3_UNLCK", -1)
			stats.set_int(MPX .. "CHAR_FM_WEAP_ADDON_4_UNLCK", -1)
			stats.set_int(MPX .. "CHAR_FM_WEAP_ADDON_5_UNLCK", -1)
			stats.set_int(MPX .. "CHAR_FM_WEAP_UNLOCKED", -1)
			stats.set_int(MPX .. "CHAR_FM_WEAP_UNLOCKED2", -1)
			stats.set_int(MPX .. "CHAR_KIT_10_FM_UNLCK", -1)
			stats.set_int(MPX .. "CHAR_KIT_11_FM_UNLCK", -1)
			stats.set_int(MPX .. "CHAR_KIT_12_FM_UNLCK", -1)
			stats.set_int(MPX .. "CHAR_KIT_1_FM_UNLCK", -1)
			stats.set_int(MPX .. "CHAR_KIT_2_FM_UNLCK", -1)
			stats.set_int(MPX .. "CHAR_KIT_3_FM_UNLCK", -1)
			stats.set_int(MPX .. "CHAR_KIT_4_FM_UNLCK", -1)
			stats.set_int(MPX .. "CHAR_KIT_5_FM_UNLCK", -1)
			stats.set_int(MPX .. "CHAR_KIT_6_FM_UNLCK", -1)
			stats.set_int(MPX .. "CHAR_KIT_7_FM_UNLCK", -1)
			stats.set_int(MPX .. "CHAR_KIT_8_FM_UNLCK", -1)
			stats.set_int(MPX .. "CHAR_KIT_9_FM_UNLCK", -1)
			stats.set_int(MPX .. "CHAR_KIT_FM_PURCHASE", -1)
			stats.set_int(MPX .. "CHAR_KIT_FM_PURCHASE10", -1)
			stats.set_int(MPX .. "CHAR_KIT_FM_PURCHASE11", -1)
			stats.set_int(MPX .. "CHAR_KIT_FM_PURCHASE12", -1)
			stats.set_int(MPX .. "CHAR_KIT_FM_PURCHASE2", -1)
			stats.set_int(MPX .. "CHAR_KIT_FM_PURCHASE3", -1)
			stats.set_int(MPX .. "CHAR_KIT_FM_PURCHASE4", -1)
			stats.set_int(MPX .. "CHAR_KIT_FM_PURCHASE5", -1)
			stats.set_int(MPX .. "CHAR_KIT_FM_PURCHASE6", -1)
			stats.set_int(MPX .. "CHAR_KIT_FM_PURCHASE7", -1)
			stats.set_int(MPX .. "CHAR_KIT_FM_PURCHASE8", -1)
			stats.set_int(MPX .. "CHAR_KIT_FM_PURCHASE9", -1)
			stats.set_int(MPX .. "CHAR_WANTED_LEVEL_TIME5STAR", -1)
			stats.set_int(MPX .. "CHAR_WEAP_FM_PURCHASE", -1)
			stats.set_int(MPX .. "CHAR_WEAP_FM_PURCHASE2", -1)
			stats.set_int(MPX .. "CLTHS_ACQUIRED_BERD", -1)
			stats.set_int(MPX .. "CLTHS_ACQUIRED_BERD_1", -1)
			stats.set_int(MPX .. "CLTHS_ACQUIRED_BERD_2", -1)
			stats.set_int(MPX .. "CLTHS_ACQUIRED_BERD_3", -1)
			stats.set_int(MPX .. "CLTHS_ACQUIRED_BERD_4", -1)
			stats.set_int(MPX .. "CLTHS_ACQUIRED_BERD_5", -1)
			stats.set_int(MPX .. "CLTHS_ACQUIRED_BERD_6", -1)
			stats.set_int(MPX .. "CLTHS_ACQUIRED_DECL", -1)
			stats.set_int(MPX .. "CLTHS_ACQUIRED_FEET", -1)
			stats.set_int(MPX .. "CLTHS_ACQUIRED_FEET_1", -1)
			stats.set_int(MPX .. "CLTHS_ACQUIRED_FEET_2", -1)
			stats.set_int(MPX .. "CLTHS_ACQUIRED_FEET_3", -1)
			stats.set_int(MPX .. "CLTHS_ACQUIRED_FEET_4", -1)
			stats.set_int(MPX .. "CLTHS_ACQUIRED_FEET_5", -1)
			stats.set_int(MPX .. "CLTHS_ACQUIRED_FEET_6", -1)
			stats.set_int(MPX .. "CLTHS_ACQUIRED_FEET_7", -1)
			stats.set_int(MPX .. "CLTHS_ACQUIRED_JBIB", -1)
			stats.set_int(MPX .. "CLTHS_ACQUIRED_JBIB_1", -1)
			stats.set_int(MPX .. "CLTHS_ACQUIRED_JBIB_2", -1)
			stats.set_int(MPX .. "CLTHS_ACQUIRED_JBIB_3", -1)
			stats.set_int(MPX .. "CLTHS_ACQUIRED_JBIB_4", -1)
			stats.set_int(MPX .. "CLTHS_ACQUIRED_JBIB_5", -1)
			stats.set_int(MPX .. "CLTHS_ACQUIRED_JBIB_6", -1)
			stats.set_int(MPX .. "CLTHS_ACQUIRED_JBIB_7", -1)
			stats.set_int(MPX .. "CLTHS_ACQUIRED_LEGS", -1)
			stats.set_int(MPX .. "CLTHS_ACQUIRED_LEGS_1", -1)
			stats.set_int(MPX .. "CLTHS_ACQUIRED_LEGS_2", -1)
			stats.set_int(MPX .. "CLTHS_ACQUIRED_LEGS_3", -1)
			stats.set_int(MPX .. "CLTHS_ACQUIRED_LEGS_4", -1)
			stats.set_int(MPX .. "CLTHS_ACQUIRED_LEGS_5", -1)
			stats.set_int(MPX .. "CLTHS_ACQUIRED_LEGS_6", -1)
			stats.set_int(MPX .. "CLTHS_ACQUIRED_LEGS_7", -1)
			stats.set_int(MPX .. "CLTHS_ACQUIRED_OUTFIT", -1)
			stats.set_int(MPX .. "CLTHS_ACQUIRED_PROPS", -1)
			stats.set_int(MPX .. "CLTHS_ACQUIRED_PROPS_1", -1)
			stats.set_int(MPX .. "CLTHS_ACQUIRED_PROPS_10", -1)
			stats.set_int(MPX .. "CLTHS_ACQUIRED_PROPS_2", -1)
			stats.set_int(MPX .. "CLTHS_ACQUIRED_PROPS_3", -1)
			stats.set_int(MPX .. "CLTHS_ACQUIRED_PROPS_4", -1)
			stats.set_int(MPX .. "CLTHS_ACQUIRED_PROPS_5", -1)
			stats.set_int(MPX .. "CLTHS_ACQUIRED_PROPS_6", -1)
			stats.set_int(MPX .. "CLTHS_ACQUIRED_PROPS_7", -1)
			stats.set_int(MPX .. "CLTHS_ACQUIRED_PROPS_8", -1)
			stats.set_int(MPX .. "CLTHS_ACQUIRED_PROPS_9", -1)
			stats.set_int(MPX .. "CLTHS_ACQUIRED_SPECIAL", -1)
			stats.set_int(MPX .. "CLTHS_ACQUIRED_SPECIAL2", -1)
			stats.set_int(MPX .. "CLTHS_ACQUIRED_SPECIAL2_1", -1)
			stats.set_int(MPX .. "CLTHS_ACQUIRED_SPECIAL_1", -1)
			stats.set_int(MPX .. "CLTHS_ACQUIRED_SPECIAL_2", -1)
			stats.set_int(MPX .. "CLTHS_ACQUIRED_SPECIAL_3", -1)
			stats.set_int(MPX .. "CLTHS_ACQUIRED_SPECIAL_4", -1)
			stats.set_int(MPX .. "CLTHS_ACQUIRED_SPECIAL_5", -1)
			stats.set_int(MPX .. "CLTHS_ACQUIRED_SPECIAL_6", -1)
			stats.set_int(MPX .. "CLTHS_ACQUIRED_SPECIAL_7", -1)
			stats.set_int(MPX .. "CLTHS_ACQUIRED_TEETH", -1)
			stats.set_int(MPX .. "CLTHS_ACQUIRED_TEETH_1", -1)
			stats.set_int(MPX .. "CLTHS_ACQUIRED_TEETH_2", -1)
			stats.set_int(MPX .. "CLTHS_ACQUIRED_TORSO", -1)
			stats.set_int(MPX .. "CLTHS_AVAILABLE_BERD", -1)
			stats.set_int(MPX .. "CLTHS_AVAILABLE_BERD_1", -1)
			stats.set_int(MPX .. "CLTHS_AVAILABLE_BERD_2", -1)
			stats.set_int(MPX .. "CLTHS_AVAILABLE_BERD_3", -1)
			stats.set_int(MPX .. "CLTHS_AVAILABLE_BERD_4", -1)
			stats.set_int(MPX .. "CLTHS_AVAILABLE_BERD_5", -1)
			stats.set_int(MPX .. "CLTHS_AVAILABLE_BERD_6", -1)
			stats.set_int(MPX .. "CLTHS_AVAILABLE_BERD_7", -1)
			stats.set_int(MPX .. "CLTHS_AVAILABLE_DECL", -1)
			stats.set_int(MPX .. "CLTHS_AVAILABLE_FEET", -1)
			stats.set_int(MPX .. "CLTHS_AVAILABLE_FEET_1", -1)
			stats.set_int(MPX .. "CLTHS_AVAILABLE_FEET_2", -1)
			stats.set_int(MPX .. "CLTHS_AVAILABLE_FEET_3", -1)
			stats.set_int(MPX .. "CLTHS_AVAILABLE_FEET_4", -1)
			stats.set_int(MPX .. "CLTHS_AVAILABLE_FEET_5", -1)
			stats.set_int(MPX .. "CLTHS_AVAILABLE_FEET_6", -1)
			stats.set_int(MPX .. "CLTHS_AVAILABLE_FEET_7", -1)
			stats.set_int(MPX .. "CLTHS_AVAILABLE_HAIR", -1)
			stats.set_int(MPX .. "CLTHS_AVAILABLE_HAIR_1", -1)
			stats.set_int(MPX .. "CLTHS_AVAILABLE_HAIR_2", -1)
			stats.set_int(MPX .. "CLTHS_AVAILABLE_HAIR_3", -1)
			stats.set_int(MPX .. "CLTHS_AVAILABLE_HAIR_4", -1)
			stats.set_int(MPX .. "CLTHS_AVAILABLE_HAIR_5", -1)
			stats.set_int(MPX .. "CLTHS_AVAILABLE_HAIR_6", -1)
			stats.set_int(MPX .. "CLTHS_AVAILABLE_HAIR_7", -1)
			stats.set_int(MPX .. "CLTHS_AVAILABLE_JBIB", -1)
			stats.set_int(MPX .. "CLTHS_AVAILABLE_JBIB_1", -1)
			stats.set_int(MPX .. "CLTHS_AVAILABLE_JBIB_2", -1)
			stats.set_int(MPX .. "CLTHS_AVAILABLE_JBIB_3", -1)
			stats.set_int(MPX .. "CLTHS_AVAILABLE_JBIB_4", -1)
			stats.set_int(MPX .. "CLTHS_AVAILABLE_JBIB_5", -1)
			stats.set_int(MPX .. "CLTHS_AVAILABLE_JBIB_6", -1)
			stats.set_int(MPX .. "CLTHS_AVAILABLE_JBIB_7", -1)
			stats.set_int(MPX .. "CLTHS_AVAILABLE_LEGS", -1)
			stats.set_int(MPX .. "CLTHS_AVAILABLE_LEGS_1", -1)
			stats.set_int(MPX .. "CLTHS_AVAILABLE_LEGS_2", -1)
		end)
		JSXX:add_sameline()   ------同行
		JSXX:add_button("统计数据部分 2", function()
			stats.set_int(MPX .. "SAVESTRA_MG_HELDTIME", 5963259)
			stats.set_int(MPX .. "SAVESTRA_MG_ENEMY_KILLS", 500)
			stats.set_int(MPX .. "STROMBERG_MG_KILLS", 500)
			stats.set_int(MPX .. "STROMBERG_MG_DEATHS", 100)
			stats.set_int(MPX .. "STROMBERG_MG_SHOTS", 500)
			stats.set_int(MPX .. "STROMBERG_MG_HITS", 500)
			stats.set_int(MPX .. "STROMBERG_MG_HEADSHOTS", 500)
			stats.set_int(MPX .. "STROMBERG_MG_HELDTIME", 5963259)
			stats.set_int(MPX .. "STROMBERG_MG_ENEMY_KILLS", 500)
			stats.set_int(MPX .. "STROMBERG_MISS_KILLS", 500)
			stats.set_int(MPX .. "STROMBERG_MISS_DEATHS", 100)
			stats.set_int(MPX .. "STROMBERG_MISS_SHOTS", 500)
			stats.set_int(MPX .. "STROMBERG_MISS_HITS", 500)
			stats.set_int(MPX .. "STROMBERG_MISS_HELDTIME", 5963259)
			stats.set_int(MPX .. "STROMBERG_MISS_ENEMY_KILLS", 500)
			stats.set_int(MPX .. "STROMBERG_TORP_KILLS", 500)
			stats.set_int(MPX .. "STROMBERG_TORP_DEATHS", 100)
			stats.set_int(MPX .. "STROMBERG_TORP_SHOTS", 500)
			stats.set_int(MPX .. "STROMBERG_TORP_HITS", 500)
			stats.set_int(MPX .. "STROMBERG_TORP_HELDTIME", 5963259)
			stats.set_int(MPX .. "STROMBERG_TORP_ENEMY_KILLS", 500)
			stats.set_int(MPX .. "THRUSTER_MG_KILLS", 500)
			stats.set_int(MPX .. "THRUSTER_MG_DEATHS", 100)
			stats.set_int(MPX .. "THRUSTER_MG_SHOTS", 500)
			stats.set_int(MPX .. "THRUSTER_MG_HITS", 500)
			stats.set_int(MPX .. "THRUSTER_MG_HEADSHOTS", 500)
			stats.set_int(MPX .. "THRUSTER_MG_HELDTIME", 5963259)
			stats.set_int(MPX .. "THRUSTER_MG_ENEMY_KILLS", 500)
			stats.set_int(MPX .. "THRUSTER_MISS_KILLS", 500)
			stats.set_int(MPX .. "THRUSTER_MISS_DEATHS", 100)
			stats.set_int(MPX .. "THRUSTER_MISS_SHOTS", 500)
			stats.set_int(MPX .. "THRUSTER_MISS_HITS", 500)
			stats.set_int(MPX .. "THRUSTER_MISS_HELDTIME", 5963259)
			stats.set_int(MPX .. "THRUSTER_MISS_ENEMY_KILLS", 500)
			stats.set_int(MPX .. "VISERIS_MG_KILLS", 500)
			stats.set_int(MPX .. "VISERIS_MG_DEATHS", 100)
			stats.set_int(MPX .. "VISERIS_MG_SHOTS", 500)
			stats.set_int(MPX .. "VISERIS_MG_HITS", 500)
			stats.set_int(MPX .. "VISERIS_MG_HEADSHOTS", 500)
			stats.set_int(MPX .. "VISERIS_MG_HELDTIME", 5963259)
			stats.set_int(MPX .. "VISERIS_MG_ENEMY_KILLS", 500)
			stats.set_int(MPX .. "VOLATOL_MG_KILLS", 500)
			stats.set_int(MPX .. "VOLATOL_MG_DEATHS", 100)
			stats.set_int(MPX .. "VOLATOL_MG_SHOTS", 500)
			stats.set_int(MPX .. "VOLATOL_MG_HITS", 500)
			stats.set_int(MPX .. "VOLATOL_MG_HEADSHOTS", 500)
			stats.set_int(MPX .. "VOLATOL_MG_HELDTIME", 5963259)
			stats.set_int(MPX .. "VOLATOL_MG_ENEMY_KILLS", 500)
			stats.set_int(MPX .. "MULE4_MG_KILLS", 500)
			stats.set_int(MPX .. "MULE4_MG_DEATHS", 100)
			stats.set_int(MPX .. "MULE4_MG_SHOTS", 500)
			stats.set_int(MPX .. "MULE4_MG_HITS", 500)
			stats.set_int(MPX .. "MULE4_MG_HEADSHOTS", 500)
			stats.set_int(MPX .. "MULE4_MG_HELDTIME", 5963259)
			stats.set_int(MPX .. "MULE4_MG_ENEMY_KILLS", 500)
			stats.set_int(MPX .. "MULE4_MISS_KILLS", 500)
			stats.set_int(MPX .. "MULE4_MISS_DEATHS", 100)
			stats.set_int(MPX .. "MULE4_MISS_SHOTS", 500)
			stats.set_int(MPX .. "MULE4_MISS_HITS", 500)
			stats.set_int(MPX .. "MULE4_MISS_HELDTIME", 5963259)
			stats.set_int(MPX .. "MULE4_MISS_ENEMY_KILLS", 500)
			stats.set_int(MPX .. "MULE4_GL_KILLS", 500)
			stats.set_int(MPX .. "MULE4_GL_DEATHS", 100)
			stats.set_int(MPX .. "MULE4_GL_SHOTS", 500)
			stats.set_int(MPX .. "MULE4_GL_HITS", 500)
			stats.set_int(MPX .. "MULE4_GL_HELDTIME", 5963259)
			stats.set_int(MPX .. "MULE4_GL_ENEMY_KILLS", 500)
			stats.set_int(MPX .. "MENACER_MG_KILLS", 500)
			stats.set_int(MPX .. "MENACER_MG_DEATHS", 100)
			stats.set_int(MPX .. "MENACER_MG_SHOTS", 500)
			stats.set_int(MPX .. "MENACER_MG_HITS", 500)
			stats.set_int(MPX .. "MENACER_MG_HEADSHOTS", 500)
			stats.set_int(MPX .. "MENACER_MG_HELDTIME", 5963259)
			stats.set_int(MPX .. "MENACER_MG_ENEMY_KILLS", 500)
			stats.set_int(MPX .. "MENACER_TURR_KILLS", 500)
			stats.set_int(MPX .. "MENACER_TURR_DEATHS", 100)
			stats.set_int(MPX .. "MENACER_TURR_SHOTS", 500)
			stats.set_int(MPX .. "MENACER_TURR_HITS", 500)
			stats.set_int(MPX .. "MENACER_TURR_HEADSHOTS", 500)
			stats.set_int(MPX .. "MENACER_TURR_HELDTIME", 5963259)
			stats.set_int(MPX .. "MENACER_TURR_ENEMY_KILLS", 500)
			stats.set_int(MPX .. "MENACER_MINI_KILLS", 500)
			stats.set_int(MPX .. "MENACER_MINI_DEATHS", 100)
			stats.set_int(MPX .. "MENACER_MINI_SHOTS", 500)
			stats.set_int(MPX .. "MENACER_MINI_HITS", 500)
			stats.set_int(MPX .. "MENACER_MINI_HEADSHOTS", 500)
			stats.set_int(MPX .. "MENACER_MINI_HELDTIME", 5963259)
			stats.set_int(MPX .. "MENACER_MINI_ENEMY_KILLS", 500)
			stats.set_int(MPX .. "OPPRESSOR2_MG_KILLS", 500)
			stats.set_int(MPX .. "OPPRESSOR2_MG_DEATHS", 100)
			stats.set_int(MPX .. "OPPRESSOR2_MG_SHOTS", 500)
			stats.set_int(MPX .. "OPPRESSOR2_MG_HITS", 500)
			stats.set_int(MPX .. "OPPRESSOR2_MG_HEADSHOTS", 500)
			stats.set_int(MPX .. "OPPRESSOR2_MG_HELDTIME", 5963259)
			stats.set_int(MPX .. "OPPRESSOR2_MG_ENEMY_KILLS", 500)
			stats.set_int(MPX .. "OPPRESSOR2_CANN_KILLS", 500)
			stats.set_int(MPX .. "OPPRESSOR2_CANN_DEATHS", 100)
			stats.set_int(MPX .. "OPPRESSOR2_CANN_SHOTS", 500)
			stats.set_int(MPX .. "OPPRESSOR2_CANN_HITS", 500)
			stats.set_int(MPX .. "OPPRESSOR2_CANN_HELDTIME", 5963259)
			stats.set_int(MPX .. "OPPRESSOR2_CANN_ENEMY_KILLS", 500)
			stats.set_int(MPX .. "OPPRESSOR2_MISS_KILLS", 500)
			stats.set_int(MPX .. "OPPRESSOR2_MISS_DEATHS", 100)
			stats.set_int(MPX .. "OPPRESSOR2_MISS_SHOTS", 500)
			stats.set_int(MPX .. "OPPRESSOR2_MISS_HITS", 500)
			stats.set_int(MPX .. "OPPRESSOR2_MISS_HELDTIME", 5963259)
			stats.set_int(MPX .. "OPPRESSOR2_MISS_ENEMY_KILLS", 500)
			stats.set_int(MPX .. "BRUISER_MG50_KILLS", 500)
			stats.set_int(MPX .. "BRUISER_MG50_DEATHS", 100)
			stats.set_int(MPX .. "BRUISER_MG50_SHOTS", 500)
			stats.set_int(MPX .. "BRUISER_MG50_HITS", 500)
			stats.set_int(MPX .. "BRUISER_MG50_HEADSHOTS", 500)
			stats.set_int(MPX .. "BRUISER_MG50_HELDTIME", 5963259)
			stats.set_int(MPX .. "BRUISER_MG50_ENEMY_KILLS", 500)
			stats.set_int(MPX .. "BRUISER2_MG50_KILLS", 500)
			stats.set_int(MPX .. "BRUISER2_MG50_DEATHS", 100)
			stats.set_int(MPX .. "BRUISER2_MG50_SHOTS", 500)
			stats.set_int(MPX .. "BRUISER2_MG50_HITS", 500)
			stats.set_int(MPX .. "BRUISER2_MG50_HEADSHOTS", 500)
			stats.set_int(MPX .. "BRUISER2_MG50_HELDTIME", 5963259)
			stats.set_int(MPX .. "BRUISER2_MG50_ENEMY_KILLS", 500)
			stats.set_int(MPX .. "BRUISER2_LAS_KILLS", 500)
			stats.set_int(MPX .. "BRUISER2_LAS_DEATHS", 100)
			stats.set_int(MPX .. "BRUISER2_LAS_SHOTS", 500)
			stats.set_int(MPX .. "BRUISER2_LAS_HITS", 500)
			stats.set_int(MPX .. "BRUISER2_LAS_HEADSHOTS", 500)
			stats.set_int(MPX .. "BRUISER2_LAS_HELDTIME", 5963259)
			stats.set_int(MPX .. "BRUISER2_LAS_ENEMY_KILLS", 500)
			stats.set_int(MPX .. "BRUISER3_MG50_KILLS", 500)
			stats.set_int(MPX .. "BRUISER3_MG50_DEATHS", 100)
			stats.set_int(MPX .. "BRUISER3_MG50_SHOTS", 500)
			stats.set_int(MPX .. "BRUISER3_MG50_HITS", 500)
			stats.set_int(MPX .. "BRUISER3_MG50_HEADSHOTS", 500)
			stats.set_int(MPX .. "BRUISER3_MG50_HELDTIME", 5963259)
			stats.set_int(MPX .. "BRUISER3_MG50_ENEMY_KILLS", 500)
			stats.set_int(MPX .. "BRUTUS_MG50_KILLS", 500)
			stats.set_int(MPX .. "BRUTUS_MG50_DEATHS", 100)
			stats.set_int(MPX .. "BRUTUS_MG50_SHOTS", 500)
			stats.set_int(MPX .. "BRUTUS_MG50_HITS", 500)
			stats.set_int(MPX .. "BRUTUS_MG50_HEADSHOTS", 500)
			stats.set_int(MPX .. "BRUTUS_MG50_ENEMY_KILLS", 500)
			stats.set_int(MPX .. "BRUTUS2_MG50_KILLS", 500)
			stats.set_int(MPX .. "BRUTUS2_MG50_DEATHS", 100)
			stats.set_int(MPX .. "BRUTUS2_MG50_SHOTS", 500)
			stats.set_int(MPX .. "BRUTUS2_MG50_HITS", 500)
			stats.set_int(MPX .. "BRUTUS2_MG50_HEADSHOTS", 500)
			stats.set_int(MPX .. "BRUTUS2_MG50_HELDTIME", 5963259)
			stats.set_int(MPX .. "BRUTUS2_MG50_ENEMY_KILLS", 500)
			stats.set_int(MPX .. "BRUTUS2_LAS_KILLS", 500)
			stats.set_int(MPX .. "BRUTUS2_LAS_DEATHS", 100)
			stats.set_int(MPX .. "BRUTUS2_LAS_SHOTS", 500)
			stats.set_int(MPX .. "BRUTUS2_LAS_HITS", 500)
			stats.set_int(MPX .. "BRUTUS2_LAS_HEADSHOTS", 500)
			stats.set_int(MPX .. "BRUTUS2_LAS_HELDTIME", 5963259)
			stats.set_int(MPX .. "BRUTUS2_LAS_ENEMY_KILLS", 500)
			stats.set_int(MPX .. "BRUTUS3_MG50_KILLS", 500)
			stats.set_int(MPX .. "BRUTUS3_MG50_DEATHS", 100)
			stats.set_int(MPX .. "BRUTUS3_MG50_SHOTS", 500)
			stats.set_int(MPX .. "BRUTUS3_MG50_HITS", 500)
			stats.set_int(MPX .. "BRUTUS3_MG50_HEADSHOTS", 500)
			stats.set_int(MPX .. "BRUTUS3_MG50_HELDTIME", 5963259)
			stats.set_int(MPX .. "BRUTUS3_MG50_ENEMY_KILLS", 500)
			stats.set_int(MPX .. "CERBERUS_FLAME_KILLS", 500)
			stats.set_int(MPX .. "CERBERUS_FLAME_DEATHS", 100)
			stats.set_int(MPX .. "CERBERUS_FLAME_SHOTS", 500)
			stats.set_int(MPX .. "CERBERUS_FLAME_HITS", 500)
			stats.set_int(MPX .. "CERBERUS_FLAME_HEADSHOTS", 500)
			stats.set_int(MPX .. "CERBERUS_FLAME_HELDTIME", 5963259)
			stats.set_int(MPX .. "CERBERUS_FLAME_ENEMY_KILLS", 500)
			stats.set_int(MPX .. "CERBERUS2_FLAME_KILLS", 500)
			stats.set_int(MPX .. "CERBERUS2_FLAME_DEATHS", 100)
			stats.set_int(MPX .. "CERBERUS2_FLAME_SHOTS", 500)
			stats.set_int(MPX .. "CERBERUS2_FLAME_HITS", 500)
			stats.set_int(MPX .. "CERBERUS2_FLAME_HEADSHOTS", 500)
			stats.set_int(MPX .. "CERBERUS2_FLAME_HELDTIME", 5963259)
			stats.set_int(MPX .. "CERBERUS2_FLAME_ENEMY_KILLS", 500)
			stats.set_int(MPX .. "CERBERUS3_FLAME_KILLS", 500)
			stats.set_int(MPX .. "CERBERUS3_FLAME_DEATHS", 100)
			stats.set_int(MPX .. "CERBERUS3_FLAME_SHOTS", 500)
			stats.set_int(MPX .. "CERBERUS3_FLAME_HITS", 500)
			stats.set_int(MPX .. "CERBERUS3_FLAME_HEADSHOTS", 500)
			stats.set_int(MPX .. "CERBERUS3_FLAME_HELDTIME", 5963259)
			stats.set_int(MPX .. "CERBERUS3_FLAME_ENEMY_KILLS", 500)
			stats.set_int(MPX .. "DEATHBIKE_MINI_KILLS", 500)
			stats.set_int(MPX .. "DEATHBIKE_MINI_DEATHS", 100)
			stats.set_int(MPX .. "DEATHBIKE_MINI_SHOTS", 500)
			stats.set_int(MPX .. "DEATHBIKE_MINI_HITS", 500)
			stats.set_int(MPX .. "DEATHBIKE_MINI_HEADSHOTS", 500)
			stats.set_int(MPX .. "DEATHBIKE_MINI_HELDTIME", 5963259)
			stats.set_int(MPX .. "DEATHBIKE_MINI_ENEMY_KILLS", 500)
			stats.set_int(MPX .. "DEATHBIKE2_LAS_KILLS", 500)
			stats.set_int(MPX .. "DEATHBIKE2_LAS_DEATHS", 100)
			stats.set_int(MPX .. "DEATHBIKE2_LAS_SHOTS", 500)
			stats.set_int(MPX .. "DEATHBIKE2_LAS_HITS", 500)
			stats.set_int(MPX .. "DEATHBIKE2_LAS_HEADSHOTS", 500)
			stats.set_int(MPX .. "DEATHBIKE2_LAS_HELDTIME", 5963259)
			stats.set_int(MPX .. "DEATHBIKE2_LAS_ENEMY_KILLS", 500)
			stats.set_int(MPX .. "DEATHBIKE3_MINI_KILLS", 500)
			stats.set_int(MPX .. "DEATHBIKE3_MINI_DEATHS", 100)
			stats.set_int(MPX .. "DEATHBIKE3_MINI_SHOTS", 500)
			stats.set_int(MPX .. "DEATHBIKE3_MINI_HITS", 500)
			stats.set_int(MPX .. "DEATHBIKE3_MINI_HEADSHOTS", 500)
			stats.set_int(MPX .. "DEATHBIKE3_MINI_HELDTIME", 5963259)
			stats.set_int(MPX .. "DEATHBIKE3_MINI_ENEMY_KILLS", 500)
			stats.set_int(MPX .. "DOMINATOR4_MG50_KILLS", 500)
			stats.set_int(MPX .. "DOMINATOR4_MG50_DEATHS", 100)
			stats.set_int(MPX .. "DOMINATOR4_MG50_SHOTS", 500)
			stats.set_int(MPX .. "DOMINATOR4_MG50_HITS", 500)
			stats.set_int(MPX .. "DOMINATOR4_MG50_HEADSHOTS", 500)
			stats.set_int(MPX .. "DOMINATOR4_MG50_HELDTIME", 5963259)
			stats.set_int(MPX .. "DOMINATOR4_MG50_ENEMY_KILLS", 500)
			stats.set_int(MPX .. "DOMINATOR5_MG50_KILLS", 500)
			stats.set_int(MPX .. "DOMINATOR5_MG50_DEATHS", 100)
			stats.set_int(MPX .. "DOMINATOR5_MG50_SHOTS", 500)
			stats.set_int(MPX .. "DOMINATOR5_MG50_HITS", 500)
			stats.set_int(MPX .. "DOMINATOR5_MG50_HEADSHOTS", 500)
			stats.set_int(MPX .. "DOMINATOR5_MG50_HELDTIME", 5963259)
			stats.set_int(MPX .. "DOMINATOR5_MG50_ENEMY_KILLS", 500)
			stats.set_int(MPX .. "DOMINATOR5_LAS_KILLS", 500)
			stats.set_int(MPX .. "DOMINATOR5_LAS_DEATHS", 100)
			stats.set_int(MPX .. "DOMINATOR5_LAS_SHOTS", 500)
			stats.set_int(MPX .. "DOMINATOR5_LAS_HITS", 500)
			stats.set_int(MPX .. "DOMINATOR5_LAS_HEADSHOTS", 500)
			stats.set_int(MPX .. "DOMINATOR5_LAS_HELDTIME", 5963259)
			stats.set_int(MPX .. "DOMINATOR5_LAS_ENEMY_KILLS", 500)
			stats.set_int(MPX .. "DOMINATOR6_MG50_KILLS", 500)
			stats.set_int(MPX .. "DOMINATOR6_MG50_DEATHS", 100)
			stats.set_int(MPX .. "DOMINATOR6_MG50_SHOTS", 500)
			stats.set_int(MPX .. "DOMINATOR6_MG50_HITS", 500)
			stats.set_int(MPX .. "DOMINATOR6_MG50_HEADSHOTS", 500)
			stats.set_int(MPX .. "DOMINATOR6_MG50_HELDTIME", 5963259)
			stats.set_int(MPX .. "DOMINATOR6_MG50_ENEMY_KILLS", 500)
			stats.set_int(MPX .. "IMPALER2_MG50_KILLS", 500)
			stats.set_int(MPX .. "IMPALER2_MG50_DEATHS", 100)
			stats.set_int(MPX .. "IMPALER2_MG50_SHOTS", 500)
			stats.set_int(MPX .. "IMPALER2_MG50_HITS", 500)
			stats.set_int(MPX .. "IMPALER2_MG50_HEADSHOTS", 500)
			stats.set_int(MPX .. "IMPALER2_MG50_HELDTIME", 5963259)
			stats.set_int(MPX .. "IMPALER2_MG50_ENEMY_KILLS", 500)
			stats.set_int(MPX .. "IMPALER3_MG50_KILLS", 500)
			stats.set_int(MPX .. "IMPALER3_MG50_DEATHS", 100)
			stats.set_int(MPX .. "IMPALER3_MG50_SHOTS", 500)
			stats.set_int(MPX .. "IMPALER3_MG50_HITS", 500)
			stats.set_int(MPX .. "IMPALER3_MG50_HEADSHOTS", 500)
			stats.set_int(MPX .. "IMPALER3_MG50_HELDTIME", 5963259)
			stats.set_int(MPX .. "IMPALER3_MG50_ENEMY_KILLS", 500)
			stats.set_int(MPX .. "IMPALER3_LAS_KILLS", 500)
			stats.set_int(MPX .. "IMPALER3_LAS_DEATHS", 100)
			stats.set_int(MPX .. "IMPALER3_LAS_SHOTS", 500)
			stats.set_int(MPX .. "IMPALER3_LAS_HITS", 500)
			stats.set_int(MPX .. "IMPALER3_LAS_HEADSHOTS", 500)
			stats.set_int(MPX .. "IMPALER3_LAS_HELDTIME", 5963259)
			stats.set_int(MPX .. "IMPALER3_LAS_ENEMY_KILLS", 500)
			stats.set_int(MPX .. "IMPALER4_MG50_KILLS", 500)
			stats.set_int(MPX .. "IMPALER4_MG50_DEATHS", 100)
			stats.set_int(MPX .. "IMPALER4_MG50_SHOTS", 500)
			stats.set_int(MPX .. "IMPALER4_MG50_HITS", 500)
			stats.set_int(MPX .. "IMPALER4_MG50_HEADSHOTS", 500)
			stats.set_int(MPX .. "IMPALER4_MG50_HELDTIME", 5963259)
			stats.set_int(MPX .. "IMPALER4_MG50_ENEMY_KILLS", 500)
			stats.set_int(MPX .. "IMPERATOR_MG50_KILLS", 500)
			stats.set_int(MPX .. "IMPERATOR_MG50_DEATHS", 100)
			stats.set_int(MPX .. "IMPERATOR_MG50_SHOTS", 500)
			stats.set_int(MPX .. "IMPERATOR_MG50_HITS", 500)
			stats.set_int(MPX .. "IMPERATOR_MG50_HEADSHOTS", 500)
			stats.set_int(MPX .. "IMPERATOR_MG50_HELDTIME", 5963259)
			stats.set_int(MPX .. "IMPERATOR_MG50_ENEMY_KILLS", 500)
			stats.set_int(MPX .. "IMPERATOR_KIN_KILLS", 500)
			stats.set_int(MPX .. "IMPERATOR_KIN_DEATHS", 100)
			stats.set_int(MPX .. "IMPERATOR_KIN_SHOTS", 500)
			stats.set_int(MPX .. "IMPERATOR_KIN_HITS", 500)
			stats.set_int(MPX .. "IMPERATOR_KIN_HELDTIME", 5963259)
			stats.set_int(MPX .. "IMPERATOR_KIN_ENEMY_KILLS", 500)
			stats.set_int(MPX .. "IMPERATOR2_MG50_KILLS", 500)
			stats.set_int(MPX .. "IMPERATOR2_MG50_DEATHS", 100)
			stats.set_int(MPX .. "IMPERATOR2_MG50_SHOTS", 500)
			stats.set_int(MPX .. "IMPERATOR2_MG50_HITS", 500)
			stats.set_int(MPX .. "IMPERATOR2_MG50_HEADSHOTS", 500)
			stats.set_int(MPX .. "IMPERATOR2_MG50_HELDTIME", 5963259)
			stats.set_int(MPX .. "IMPERATOR2_MG50_ENEMY_KILLS", 500)
			stats.set_int(MPX .. "IMPERATOR2_KIN_KILLS", 500)
			stats.set_int(MPX .. "IMPERATOR2_KIN_DEATHS", 100)
			stats.set_int(MPX .. "IMPERATOR2_KIN_SHOTS", 500)
			stats.set_int(MPX .. "IMPERATOR2_KIN_HITS", 500)
			stats.set_int(MPX .. "IMPERATOR2_KIN_HELDTIME", 5963259)
			stats.set_int(MPX .. "IMPERATOR2_KIN_ENEMY_KILLS", 500)
			stats.set_int(MPX .. "IMPERATOR2_LAS_KILLS", 500)
			stats.set_int(MPX .. "IMPERATOR2_LAS_DEATHS", 100)
			stats.set_int(MPX .. "IMPERATOR2_LAS_SHOTS", 500)
			stats.set_int(MPX .. "IMPERATOR2_LAS_HITS", 500)
			stats.set_int(MPX .. "IMPERATOR2_LAS_HEADSHOTS", 500)
			stats.set_int(MPX .. "IMPERATOR2_LAS_HELDTIME", 5963259)
			stats.set_int(MPX .. "IMPERATOR2_LAS_ENEMY_KILLS", 500)
			stats.set_int(MPX .. "IMPERATOR3_MG50_KILLS", 500)
			stats.set_int(MPX .. "IMPERATOR3_MG50_DEATHS", 100)
			stats.set_int(MPX .. "IMPERATOR3_MG50_SHOTS", 500)
			stats.set_int(MPX .. "IMPERATOR3_MG50_HITS", 500)
			stats.set_int(MPX .. "IMPERATOR3_MG50_HEADSHOTS", 500)
			stats.set_int(MPX .. "IMPERATOR3_MG50_HELDTIME", 5963259)
			stats.set_int(MPX .. "IMPERATOR3_MG50_ENEMY_KILLS", 500)
			stats.set_int(MPX .. "IMPERATOR3_KIN_KILLS", 500)
			stats.set_int(MPX .. "IMPERATOR3_KIN_DEATHS", 100)
			stats.set_int(MPX .. "IMPERATOR3_KIN_SHOTS", 500)
			stats.set_int(MPX .. "IMPERATOR3_KIN_HITS", 500)
			stats.set_int(MPX .. "IMPERATOR3_KIN_HELDTIME", 5963259)
			stats.set_int(MPX .. "IMPERATOR3_KIN_ENEMY_KILLS", 500)
			stats.set_int(MPX .. "VALKYRIE_CANNON_KILLS", 500)
			stats.set_int(MPX .. "VALKYRIE_CANNON_DEATHS", 100)
			stats.set_int(MPX .. "VALKYRIE_CANNON_SHOTS", 500)
			stats.set_int(MPX .. "VALKYRIE_CANNON_HITS", 500)
			stats.set_int(MPX .. "VALKYRIE_CANNON_HEADSHOTS", 500)
			stats.set_int(MPX .. "VALKYRIE_CANNON_HELDTIME", 5963259)
			stats.set_int(MPX .. "VALKYRIE_CANNON_ENEMY_KILLS", 500)
			stats.set_int(MPX .. "VALKYRIE_TURR_KILLS", 500)
			stats.set_int(MPX .. "VALKYRIE_TURR_DEATHS", 100)
			stats.set_int(MPX .. "VALKYRIE_TURR_SHOTS", 500)
			stats.set_int(MPX .. "VALKYRIE_TURR_HITS", 500)
			stats.set_int(MPX .. "VALKYRIE_TURR_HEADSHOTS", 500)
			stats.set_int(MPX .. "VALKYRIE_TURR_HELDTIME", 5963259)
			stats.set_int(MPX .. "VALKYRIE_TURR_ENEMY_KILLS", 500)
			stats.set_int(MPX .. "JB7002_MG_KILLS", 500)
			stats.set_int(MPX .. "JB7002_MG_DEATHS", 100)
			stats.set_int(MPX .. "JB7002_MG_SHOTS", 500)
			stats.set_int(MPX .. "JB7002_MG_HITS", 500)
			stats.set_int(MPX .. "JB7002_MG_HEADSHOTS", 500)
			stats.set_int(MPX .. "JB7002_MG_HELDTIME", 5963259)
			stats.set_int(MPX .. "JB7002_MG_ENEMY_KILLS", 500)
			stats.set_int(MPX .. "MINITANK_MG_KILLS", 500)
			stats.set_int(MPX .. "MINITANK_MG_DEATHS", 100)
			stats.set_int(MPX .. "MINITANK_MG_SHOTS", 500)
			stats.set_int(MPX .. "MINITANK_MG_HITS", 500)
			stats.set_int(MPX .. "MINITANK_MG_HEADSHOTS", 500)
			stats.set_int(MPX .. "MINITANK_MG_HELDTIME", 5963259)
			stats.set_int(MPX .. "MINITANK_MG_ENEMY_KILLS", 500)
			stats.set_int(MPX .. "MINITANK_FL_KILLS", 500)
			stats.set_int(MPX .. "MINITANK_FL_DEATHS", 100)
			stats.set_int(MPX .. "MINITANK_FL_SHOTS", 500)
			stats.set_int(MPX .. "MINITANK_FL_HITS", 500)
			stats.set_int(MPX .. "MINITANK_FL_HELDTIME", 5963259)
			stats.set_int(MPX .. "MINITANK_FL_ENEMY_KILLS", 500)
			stats.set_int(MPX .. "MINITANK_RK_KILLS", 500)
			stats.set_int(MPX .. "MINITANK_RK_DEATHS", 100)
			stats.set_int(MPX .. "MINITANK_RK_SHOTS", 500)
			stats.set_int(MPX .. "MINITANK_RK_HITS", 500)
			stats.set_int(MPX .. "MINITANK_RK_HELDTIME", 5963259)
			stats.set_int(MPX .. "MINITANK_RK_ENEMY_KILLS", 500)
			stats.set_int(MPX .. "MINITANK_LZ_KILLS", 500)
			stats.set_int(MPX .. "MINITANK_LZ_DEATHS", 100)
			stats.set_int(MPX .. "MINITANK_LZ_SHOTS", 500)
			stats.set_int(MPX .. "MINITANK_LZ_HITS", 500)
			stats.set_int(MPX .. "MINITANK_LZ_HEADSHOTS", 500)
			stats.set_int(MPX .. "MINITANK_LZ_HELDTIME", 5963259)
			stats.set_int(MPX .. "MINITANK_LZ_ENEMY_KILLS", 500)
			stats.set_int(MPX .. "FLAREGUN_KILLS", 500)
			stats.set_int(MPX .. "FLAREGUN_DEATHS", 100)
			stats.set_int(MPX .. "FLAREGUN_SHOTS", 500)
			stats.set_int(MPX .. "FLAREGUN_HITS", 500)
			stats.set_int(MPX .. "FLAREGUN_HEADSHOTS", 500)
			stats.set_int(MPX .. "FLAREGUN_HELDTIME", 5963259)
			stats.set_int(MPX .. "FLAREGUN_DB_HELDTIME", 5963259)
			stats.set_int(MPX .. "FLAREGUN_ENEMY_KILLS", 500)
			stats.set_int(MPX .. "INSURGENT_TURR_KILLS", 500)
			stats.set_int(MPX .. "INSURGENT_TURR_DEATHS", 100)
			stats.set_int(MPX .. "INSURGENT_TURR_SHOTS", 500)
			stats.set_int(MPX .. "INSURGENT_TURR_HITS", 500)
			stats.set_int(MPX .. "INSURGENT_TURR_HEADSHOTS", 500)
			stats.set_int(MPX .. "INSURGENT_TURR_HELDTIME", 5963259)
			stats.set_int(MPX .. "INSURGENT_TURR_ENEMY_KILLS", 500)
			stats.set_int(MPX .. "SAVAGE_ROCKET_KILLS", 500)
			stats.set_int(MPX .. "SAVAGE_ROCKET_DEATHS", 100)
			stats.set_int(MPX .. "SAVAGE_ROCKET_SHOTS", 500)
			stats.set_int(MPX .. "SAVAGE_ROCKET_HITS", 500)
			stats.set_int(MPX .. "SAVAGE_ROCKET_HELDTIME", 5963259)
			stats.set_int(MPX .. "SAVAGE_ROCKET_ENEMY_KILLS", 500)
			stats.set_int(MPX .. "SAVAGE_BULLET_KILLS", 500)
			stats.set_int(MPX .. "SAVAGE_BULLET_DEATHS", 100)
			stats.set_int(MPX .. "SAVAGE_BULLET_SHOTS", 500)
			stats.set_int(MPX .. "SAVAGE_BULLET_HITS", 500)
			stats.set_int(MPX .. "SAVAGE_BULLET_HEADSHOTS", 500)
			stats.set_int(MPX .. "SAVAGE_BULLET_HELDTIME", 5963259)
			stats.set_int(MPX .. "SAVAGE_BULLET_ENEMY_KILLS", 500)
			stats.set_int(MPX .. "TECHNICAL_TURR_KILLS", 500)
			stats.set_int(MPX .. "TECHNICAL_TURR_DEATHS", 100)
			stats.set_int(MPX .. "TECHNICAL_TURR_SHOTS", 500)
			stats.set_int(MPX .. "TECHNICAL_TURR_HITS", 500)
			stats.set_int(MPX .. "TECHNICAL_TURR_HEADSHOTS", 500)
			stats.set_int(MPX .. "TECHNICAL_TURR_HELDTIME", 5963259)
			stats.set_int(MPX .. "TECHNICAL_TURR_ENEMY_KILLS", 500)
			stats.set_int(MPX .. "VEHBOMB_KILLS", 500)
			stats.set_int(MPX .. "VEHBOMB_DEATHS", 100)
			stats.set_int(MPX .. "VEHBOMB_SHOTS", 500)
			stats.set_int(MPX .. "VEHBOMB_HITS", 500)
			stats.set_int(MPX .. "VEHBOMB_ENEMY_KILLS", 500)
			stats.set_int(MPX .. "VEHBOMB_C_KILLS", 500)
			stats.set_int(MPX .. "VEHBOMB_C_DEATHS", 100)
			stats.set_int(MPX .. "VEHBOMB_C_SHOTS", 500)
			stats.set_int(MPX .. "VEHBOMB_C_HITS", 500)
			stats.set_int(MPX .. "VEHBOMB_C_ENEMY_KILLS", 500)
			stats.set_int(MPX .. "VEHBOMB_G_KILLS", 500)
			stats.set_int(MPX .. "VEHBOMB_G_DEATHS", 100)
			stats.set_int(MPX .. "VEHBOMB_G_SHOTS", 500)
			stats.set_int(MPX .. "VEHBOMB_G_HITS", 500)
			stats.set_int(MPX .. "VEHBOMB_G_ENEMY_KILLS", 500)
			stats.set_int(MPX .. "VEHBOMB_I_KILLS", 500)
			stats.set_int(MPX .. "VEHBOMB_I_DEATHS", 100)
			stats.set_int(MPX .. "VEHBOMB_I_SHOTS", 500)
			stats.set_int(MPX .. "VEHBOMB_I_HITS", 500)
			stats.set_int(MPX .. "VEHBOMB_I_ENEMY_KILLS", 500)
			stats.set_int(MPX .. "BOMBUSHKA_CANN_KILLS", 500)
			stats.set_int(MPX .. "BOMBUSHKA_CANN_DEATHS", 100)
			stats.set_int(MPX .. "BOMBUSHKA_CANN_SHOTS", 500)
			stats.set_int(MPX .. "BOMBUSHKA_CANN_HITS", 500)
			stats.set_int(MPX .. "BOMBUSHKA_CANN_HELDTIME", 5963259)
			stats.set_int(MPX .. "BOMBUSHKA_CANN_ENEMY_KILLS", 500)
			stats.set_int(MPX .. "BOMBUSHKA_DUAL_KILLS", 500)
			stats.set_int(MPX .. "BOMBUSHKA_DUAL_DEATHS", 100)
			stats.set_int(MPX .. "BOMBUSHKA_DUAL_SHOTS", 500)
			stats.set_int(MPX .. "BOMBUSHKA_DUAL_HITS", 500)
			stats.set_int(MPX .. "BOMBUSHKA_DUAL_HEADSHOTS", 500)
			stats.set_int(MPX .. "BOMBUSHKA_DUAL_HELDTIME", 5963259)
			stats.set_int(MPX .. "BOMBUSHKA_DUAL_ENEMY_KILLS", 500)
			stats.set_int(MPX .. "HAVOK_MINI_KILLS", 500)
			stats.set_int(MPX .. "HAVOK_MINI_DEATHS", 100)
			stats.set_int(MPX .. "HAVOK_MINI_SHOTS", 500)
			stats.set_int(MPX .. "HAVOK_MINI_HITS", 500)
			stats.set_int(MPX .. "HAVOK_MINI_HEADSHOTS", 500)
			stats.set_int(MPX .. "HAVOK_MINI_HELDTIME", 5963259)
			stats.set_int(MPX .. "HAVOK_MINI_ENEMY_KILLS", 500)
			stats.set_int(MPX .. "HUNTER_BARR_KILLS", 500)
			stats.set_int(MPX .. "HUNTER_BARR_DEATHS", 100)
			stats.set_int(MPX .. "HUNTER_BARR_SHOTS", 500)
			stats.set_int(MPX .. "HUNTER_BARR_HITS", 500)
			stats.set_int(MPX .. "HUNTER_BARR_HELDTIME", 5963259)
			stats.set_int(MPX .. "HUNTER_BARR_ENEMY_KILLS", 500)
			stats.set_int(MPX .. "HUNTER_CANNON_KILLS", 500)
			stats.set_int(MPX .. "HUNTER_CANNON_DEATHS", 100)
			stats.set_int(MPX .. "HUNTER_CANNON_SHOTS", 500)
			stats.set_int(MPX .. "HUNTER_CANNON_HITS", 500)
			stats.set_int(MPX .. "HUNTER_CANNON_HELDTIME", 5963259)
			stats.set_int(MPX .. "HUNTER_CANNON_ENEMY_KILLS", 500)
			stats.set_int(MPX .. "MICROLIGHT_MG_KILLS", 500)
			stats.set_int(MPX .. "MICROLIGHT_MG_DEATHS", 100)
			stats.set_int(MPX .. "MICROLIGHT_MG_SHOTS", 500)
			stats.set_int(MPX .. "MICROLIGHT_MG_HITS", 500)
			stats.set_int(MPX .. "MICROLIGHT_MG_HEADSHOTS", 500)
			stats.set_int(MPX .. "MICROLIGHT_MG_HELDTIME", 5963259)
			stats.set_int(MPX .. "MICROLIGHT_MG_ENEMY_KILLS", 500)
			stats.set_int(MPX .. "MOGUL_NOSE_KILLS", 500)
			stats.set_int(MPX .. "MOGUL_NOSE_DEATHS", 100)
			stats.set_int(MPX .. "MOGUL_NOSE_SHOTS", 500)
			stats.set_int(MPX .. "MOGUL_NOSE_HITS", 500)
			stats.set_int(MPX .. "MOGUL_NOSE_HEADSHOTS", 500)
			stats.set_int(MPX .. "MOGUL_NOSE_HELDTIME", 5963259)
			stats.set_int(MPX .. "MOGUL_NOSE_ENEMY_KILLS", 500)
			stats.set_int(MPX .. "MOGUL_DNOSE_KILLS", 500)
			stats.set_int(MPX .. "MOGUL_DNOSE_DEATHS", 100)
			stats.set_int(MPX .. "MOGUL_DNOSE_SHOTS", 500)
			stats.set_int(MPX .. "MOGUL_DNOSE_HITS", 500)
			stats.set_int(MPX .. "MOGUL_DNOSE_HEADSHOTS", 500)
			stats.set_int(MPX .. "MOGUL_DNOSE_HELDTIME", 5963259)
			stats.set_int(MPX .. "MOGUL_DNOSE_ENEMY_KILLS", 500)
			stats.set_int(MPX .. "MOGUL_TURR_KILLS", 500)
			stats.set_int(MPX .. "MOGUL_TURR_DEATHS", 100)
			stats.set_int(MPX .. "MOGUL_TURR_SHOTS", 500)
			stats.set_int(MPX .. "MOGUL_TURR_HITS", 500)
			stats.set_int(MPX .. "MOGUL_TURR_HEADSHOTS", 500)
			stats.set_int(MPX .. "MOGUL_TURR_HELDTIME", 5963259)
			stats.set_int(MPX .. "MOGUL_TURR_ENEMY_KILLS", 500)
			stats.set_int(MPX .. "MOGUL_DTURR_KILLS", 500)
			stats.set_int(MPX .. "MOGUL_DTURR_DEATHS", 100)
			stats.set_int(MPX .. "MOGUL_DTURR_SHOTS", 500)
			stats.set_int(MPX .. "MOGUL_DTURR_HITS", 500)
			stats.set_int(MPX .. "MOGUL_DTURR_HEADSHOTS", 500)
			stats.set_int(MPX .. "MOGUL_DTURR_HELDTIME", 5963259)
			stats.set_int(MPX .. "MOGUL_DTURR_ENEMY_KILLS", 500)
			stats.set_int(MPX .. "MOLOTOK_MG_KILLS", 500)
			stats.set_int(MPX .. "MOLOTOK_MG_DEATHS", 100)
			stats.set_int(MPX .. "MOLOTOK_MG_SHOTS", 500)
			stats.set_int(MPX .. "MOLOTOK_MG_HITS", 500)
			stats.set_int(MPX .. "MOLOTOK_MG_HEADSHOTS", 500)
			stats.set_int(MPX .. "MOLOTOK_MG_HELDTIME", 5963259)
			stats.set_int(MPX .. "MOLOTOK_MG_ENEMY_KILLS", 500)
			stats.set_int(MPX .. "MOLOTOK_MISS_KILLS", 500)
			stats.set_int(MPX .. "MOLOTOK_MISS_DEATHS", 100)
			stats.set_int(MPX .. "MOLOTOK_MISS_SHOTS", 500)
			stats.set_int(MPX .. "MOLOTOK_MISS_HITS", 500)
			stats.set_int(MPX .. "MOLOTOK_MISS_HELDTIME", 5963259)
			stats.set_int(MPX .. "MOLOTOK_MISS_ENEMY_KILLS", 500)
			stats.set_int(MPX .. "NOKOTA_MG_KILLS", 500)
			stats.set_int(MPX .. "NOKOTA_MG_DEATHS", 100)
			stats.set_int(MPX .. "NOKOTA_MG_SHOTS", 500)
			stats.set_int(MPX .. "NOKOTA_MG_HITS", 500)
			stats.set_int(MPX .. "NOKOTA_MG_HEADSHOTS", 500)
			stats.set_int(MPX .. "NOKOTA_MG_HELDTIME", 5963259)
			stats.set_int(MPX .. "NOKOTA_MG_ENEMY_KILLS", 500)
			stats.set_int(MPX .. "NOKOTA_MISS_KILLS", 500)
			stats.set_int(MPX .. "NOKOTA_MISS_DEATHS", 100)
			stats.set_int(MPX .. "NOKOTA_MISS_SHOTS", 500)
			stats.set_int(MPX .. "NOKOTA_MISS_HITS", 500)
			stats.set_int(MPX .. "NOKOTA_MISS_HELDTIME", 5963259)
			stats.set_int(MPX .. "NOKOTA_MISS_ENEMY_KILLS", 500)
			stats.set_int(MPX .. "PYRO_MG_KILLS", 500)
			stats.set_int(MPX .. "PYRO_MG_DEATHS", 100)
			stats.set_int(MPX .. "PYRO_MG_SHOTS", 500)
			stats.set_int(MPX .. "PYRO_MG_HITS", 500)
			stats.set_int(MPX .. "PYRO_MG_HEADSHOTS", 500)
			stats.set_int(MPX .. "PYRO_MG_HELDTIME", 5963259)
			stats.set_int(MPX .. "PYRO_MG_ENEMY_KILLS", 500)
			stats.set_int(MPX .. "PYRO_MISS_KILLS", 500)
			stats.set_int(MPX .. "PYRO_MISS_DEATHS", 100)
			stats.set_int(MPX .. "PYRO_MISS_SHOTS", 500)
			stats.set_int(MPX .. "PYRO_MISS_HITS", 500)
			stats.set_int(MPX .. "PYRO_MISS_HELDTIME", 5963259)
			stats.set_int(MPX .. "PYRO_MISS_ENEMY_KILLS", 500)
			stats.set_int(MPX .. "ROGUE_MG_KILLS", 500)
			stats.set_int(MPX .. "ROGUE_MG_DEATHS", 100)
			stats.set_int(MPX .. "ROGUE_MG_SHOTS", 500)
			stats.set_int(MPX .. "ROGUE_MG_HITS", 500)
			stats.set_int(MPX .. "ROGUE_MG_HEADSHOTS", 500)
			stats.set_int(MPX .. "ROGUE_MG_HELDTIME", 5963259)
			stats.set_int(MPX .. "ROGUE_MG_ENEMY_KILLS", 500)
			stats.set_int(MPX .. "ROGUE_CANN_KILLS", 500)
			stats.set_int(MPX .. "ROGUE_CANN_DEATHS", 100)
			stats.set_int(MPX .. "ROGUE_CANN_SHOTS", 500)
			stats.set_int(MPX .. "ROGUE_CANN_HITS", 500)
			stats.set_int(MPX .. "ROGUE_CANN_HELDTIME", 5963259)
			stats.set_int(MPX .. "ROGUE_CANN_ENEMY_KILLS", 500)
			stats.set_int(MPX .. "ROGUE_MISS_KILLS", 500)
			stats.set_int(MPX .. "ROGUE_MISS_DEATHS", 100)
			stats.set_int(MPX .. "ROGUE_MISS_SHOTS", 500)
			stats.set_int(MPX .. "ROGUE_MISS_HITS", 500)
			stats.set_int(MPX .. "ROGUE_MISS_HELDTIME", 5963259)
			stats.set_int(MPX .. "ROGUE_MISS_ENEMY_KILLS", 500)
			stats.set_int(MPX .. "STARLING_MG_KILLS", 500)
			stats.set_int(MPX .. "STARLING_MG_DEATHS", 100)
			stats.set_int(MPX .. "STARLING_MG_SHOTS", 500)
			stats.set_int(MPX .. "STARLING_MG_HITS", 500)
			stats.set_int(MPX .. "STARLING_MG_HEADSHOTS", 500)
			stats.set_int(MPX .. "STARLING_MG_HELDTIME", 5963259)
			stats.set_int(MPX .. "STARLING_MG_ENEMY_KILLS", 500)
			stats.set_int(MPX .. "STARLING_MISS_KILLS", 500)
			stats.set_int(MPX .. "STARLING_MISS_DEATHS", 100)
			stats.set_int(MPX .. "STARLING_MISS_SHOTS", 500)
			stats.set_int(MPX .. "STARLING_MISS_HITS", 500)
			stats.set_int(MPX .. "STARLING_MISS_HELDTIME", 5963259)
			stats.set_int(MPX .. "STARLING_MISS_ENEMY_KILLS", 500)
			stats.set_int(MPX .. "SEABREEZE_MG_KILLS", 500)
			stats.set_int(MPX .. "SEABREEZE_MG_DEATHS", 100)
			stats.set_int(MPX .. "SEABREEZE_MG_SHOTS", 500)
			stats.set_int(MPX .. "SEABREEZE_MG_HITS", 500)
			stats.set_int(MPX .. "SEABREEZE_MG_HEADSHOTS", 500)
			stats.set_int(MPX .. "SEABREEZE_MG_HELDTIME", 5963259)
			stats.set_int(MPX .. "SEABREEZE_MG_ENEMY_KILLS", 500)
			stats.set_int(MPX .. "TULA_MG_KILLS", 500)
			stats.set_int(MPX .. "TULA_MG_DEATHS", 100)
			stats.set_int(MPX .. "TULA_MG_SHOTS", 500)
			stats.set_int(MPX .. "TULA_MG_HITS", 500)
			stats.set_int(MPX .. "TULA_MG_HEADSHOTS", 500)
			stats.set_int(MPX .. "TULA_MG_HELDTIME", 5963259)
			stats.set_int(MPX .. "TULA_MG_ENEMY_KILLS", 500)
			stats.set_int(MPX .. "TULA_SINGLEMG_KILLS", 500)
			stats.set_int(MPX .. "TULA_SINGLEMG_DEATHS", 100)
			stats.set_int(MPX .. "TULA_SINGLEMG_SHOTS", 500)
			stats.set_int(MPX .. "TULA_SINGLEMG_HITS", 500)
			stats.set_int(MPX .. "TULA_SINGLEMG_HEADSHOTS", 500)
			stats.set_int(MPX .. "TULA_SINGLEMG_HELDTIME", 5963259)
			stats.set_int(MPX .. "TULA_SINGLEMG_ENEMY_KILLS", 500)
			stats.set_int(MPX .. "TULA_DUALMG_KILLS", 500)
			stats.set_int(MPX .. "TULA_DUALMG_DEATHS", 100)
			stats.set_int(MPX .. "TULA_DUALMG_SHOTS", 500)
			stats.set_int(MPX .. "TULA_DUALMG_HITS", 500)
			stats.set_int(MPX .. "TULA_DUALMG_HEADSHOTS", 500)
			stats.set_int(MPX .. "TULA_DUALMG_HELDTIME", 5963259)
			stats.set_int(MPX .. "TULA_DUALMG_ENEMY_KILLS", 500)
			stats.set_int(MPX .. "TULA_MINI_KILLS", 500)
			stats.set_int(MPX .. "TULA_MINI_DEATHS", 100)
			stats.set_int(MPX .. "TULA_MINI_SHOTS", 500)
			stats.set_int(MPX .. "TULA_MINI_HITS", 500)
			stats.set_int(MPX .. "TULA_MINI_HEADSHOTS", 500)
			stats.set_int(MPX .. "TULA_MINI_HELDTIME", 5963259)
			stats.set_int(MPX .. "TULA_MINI_ENEMY_KILLS", 500)
			stats.set_int(MPX .. "VIGILANTE_MG_KILLS", 500)
			stats.set_int(MPX .. "VIGILANTE_MG_DEATHS", 100)
			stats.set_int(MPX .. "VIGILANTE_MG_SHOTS", 500)
			stats.set_int(MPX .. "VIGILANTE_MG_HITS", 500)
			stats.set_int(MPX .. "VIGILANTE_MG_HEADSHOTS", 500)
			stats.set_int(MPX .. "VIGILANTE_MG_HELDTIME", 5963259)
			stats.set_int(MPX .. "VIGILANTE_MG_ENEMY_KILLS", 500)
			stats.set_int(MPX .. "VIGILANTE_MISS_KILLS", 500)
			stats.set_int(MPX .. "VIGILANTE_MISS_DEATHS", 100)
			stats.set_int(MPX .. "VIGILANTE_MISS_SHOTS", 500)
			stats.set_int(MPX .. "VIGILANTE_MISS_HITS", 500)
			stats.set_int(MPX .. "VIGILANTE_MISS_HELDTIME", 5963259)
			stats.set_int(MPX .. "VIGILANTE_MISS_ENEMY_KILLS", 500)
			stats.set_int(MPX .. "BOXVILLE5_TURR_KILLS", 500)
			stats.set_int(MPX .. "BOXVILLE5_TURR_DEATHS", 100)
			stats.set_int(MPX .. "BOXVILLE5_TURR_SHOTS", 500)
			stats.set_int(MPX .. "BOXVILLE5_TURR_HITS", 500)
			stats.set_int(MPX .. "BOXVILLE5_TURR_HEADSHOTS", 500)
			stats.set_int(MPX .. "BOXVILLE5_TURR_HELDTIME", 5963259)
			stats.set_int(MPX .. "BOXVILLE5_TURR_ENEMY_KILLS", 500)
			stats.set_int(MPX .. "BLAZER5_CANNON_KILLS", 500)
			stats.set_int(MPX .. "BLAZER5_CANNON_DEATHS", 100)
			stats.set_int(MPX .. "BLAZER5_CANNON_SHOTS", 500)
			stats.set_int(MPX .. "BLAZER5_CANNON_HITS", 500)
			stats.set_int(MPX .. "BLAZER5_CANNON_HEADSHOTS", 500)
			stats.set_int(MPX .. "BLAZER5_CANNON_HELDTIME", 5963259)
			stats.set_int(MPX .. "BLAZER5_CANNON_ENEMY_KILLS", 500)
			stats.set_int(MPX .. "RUINER2_BULLET_KILLS", 500)
			stats.set_int(MPX .. "RUINER2_BULLET_DEATHS", 100)
			stats.set_int(MPX .. "RUINER2_BULLET_SHOTS", 500)
			stats.set_int(MPX .. "RUINER2_BULLET_HITS", 500)
			stats.set_int(MPX .. "RUINER2_BULLET_HEADSHOTS", 500)
			stats.set_int(MPX .. "RUINER2_BULLET_HELDTIME", 5963259)
			stats.set_int(MPX .. "RUINER2_BULLET_ENEMY_KILLS", 500)
			stats.set_int(MPX .. "RUINER2_ROCKET_KILLS", 500)
			stats.set_int(MPX .. "RUINER2_ROCKET_DEATHS", 100)
			stats.set_int(MPX .. "RUINER2_ROCKET_SHOTS", 500)
			stats.set_int(MPX .. "RUINER2_ROCKET_HITS", 500)
			stats.set_int(MPX .. "RUINER2_ROCKET_HEADSHOTS", 500)
			stats.set_int(MPX .. "RUINER2_ROCKET_HELDTIME", 5963259)
			stats.set_int(MPX .. "RUINER2_ROCKET_ENEMY_KILLS", 500)
			stats.set_int(MPX .. "TECHNICAL2_TURR_KILLS", 500)
			stats.set_int(MPX .. "TECHNICAL2_TURR_DEATHS", 100)
			stats.set_int(MPX .. "TECHNICAL2_TURR_SHOTS", 500)
			stats.set_int(MPX .. "TECHNICAL2_TURR_HITS", 500)
			stats.set_int(MPX .. "TECHNICAL2_TURR_HEADSHOTS", 500)
			stats.set_int(MPX .. "TECHNICAL2_TURR_HELDTIME", 5963259)
			stats.set_int(MPX .. "TECHNICAL2_TURR_ENEMY_KILLS", 500)
			stats.set_int(MPX .. "CRARMWREST", 500)
			stats.set_int(MPX .. "CRBASEJUMP", 500)
			stats.set_int(MPX .. "CRDARTS", 500)
			stats.set_int(MPX .. "CRDM", 500)
			stats.set_int(MPX .. "CRGANGHIDE", 500)
			stats.set_int(MPX .. "CRGOLF", 500)
			stats.set_int(MPX .. "CRHORDE", 500)
			stats.set_int(MPX .. "CRMISSION", 500)
			stats.set_int(MPX .. "CRSHOOTRNG", 500)
			stats.set_int(MPX .. "CRTENNIS", 500)
			stats.set_int(MPX .. "NO_TIMES_CINEMA", 500)
			stats.set_int(MPX .. "AWD_CONTRACTOR", 50)
			stats.set_int(MPX .. "AWD_COLD_CALLER", 50)
			stats.set_int(MPX .. "AWD_PRODUCER", 60)
			stats.set_int(MPX .. "FIXERTELEPHONEHITSCOMPL", 10)
			stats.set_int(MPX .. "PAYPHONE_BONUS_KILL_METHOD", -1)
			stats.set_int(MPX .. "TWR_INITIALS_0", 69644)
			stats.set_int(MPX .. "TWR_INITIALS_1", 69644)
			stats.set_int(MPX .. "TWR_INITIALS_2", 69644)
			stats.set_int(MPX .. "TWR_INITIALS_3", 69644)
			stats.set_int(MPX .. "TWR_INITIALS_4", 69644)
			stats.set_int(MPX .. "TWR_INITIALS_5", 69644)
			stats.set_int(MPX .. "TWR_INITIALS_6", 69644)
			stats.set_int(MPX .. "TWR_INITIALS_7", 69644)
			stats.set_int(MPX .. "TWR_INITIALS_8", 69644)
			stats.set_int(MPX .. "TWR_INITIALS_9", 69644)
			stats.set_int(MPX .. "TWR_SCORE_0", 50)
			stats.set_int(MPX .. "TWR_SCORE_1", 50)
			stats.set_int(MPX .. "TWR_SCORE_2", 50)
			stats.set_int(MPX .. "TWR_SCORE_3", 50)
			stats.set_int(MPX .. "TWR_SCORE_4", 50)
			stats.set_int(MPX .. "TWR_SCORE_5", 50)
			stats.set_int(MPX .. "TWR_SCORE_6", 50)
			stats.set_int(MPX .. "TWR_SCORE_7", 50)
			stats.set_int(MPX .. "TWR_SCORE_8", 50)
			stats.set_int(MPX .. "TWR_SCORE_9", 50)
			stats.set_int(MPX .. "GGSM_INITIALS_0", 69644)
			stats.set_int(MPX .. "GGSM_INITIALS_1", 69644)
			stats.set_int(MPX .. "GGSM_INITIALS_2", 69644)
			stats.set_int(MPX .. "GGSM_INITIALS_3", 69644)
			stats.set_int(MPX .. "GGSM_INITIALS_4", 69644)
			stats.set_int(MPX .. "GGSM_INITIALS_5", 69644)
			stats.set_int(MPX .. "GGSM_INITIALS_6", 69644)
			stats.set_int(MPX .. "GGSM_INITIALS_7", 69644)
			stats.set_int(MPX .. "GGSM_INITIALS_8", 69644)
			stats.set_int(MPX .. "GGSM_INITIALS_9", 69644)
			stats.set_int(MPX .. "GGSM_SCORE_0", 50)
			stats.set_int(MPX .. "GGSM_SCORE_1", 50)
			stats.set_int(MPX .. "GGSM_SCORE_2", 50)
			stats.set_int(MPX .. "GGSM_SCORE_3", 50)
			stats.set_int(MPX .. "GGSM_SCORE_4", 50)
			stats.set_int(MPX .. "GGSM_SCORE_5", 50)
			stats.set_int(MPX .. "GGSM_SCORE_6", 50)
			stats.set_int(MPX .. "GGSM_SCORE_7", 50)
			stats.set_int(MPX .. "GGSM_SCORE_8", 50)
			stats.set_int(MPX .. "GGSM_SCORE_9", 50)
			stats.set_int(MPX .. "DG_PENETRATOR_INITIALS_0", 69644)
			stats.set_int(MPX .. "DG_PENETRATOR_INITIALS_1", 69644)
			stats.set_int(MPX .. "DG_PENETRATOR_INITIALS_2", 69644)
			stats.set_int(MPX .. "DG_PENETRATOR_INITIALS_3", 69644)
			stats.set_int(MPX .. "DG_PENETRATOR_INITIALS_4", 69644)
			stats.set_int(MPX .. "DG_PENETRATOR_INITIALS_5", 69644)
			stats.set_int(MPX .. "DG_PENETRATOR_INITIALS_6", 69644)
			stats.set_int(MPX .. "DG_PENETRATOR_INITIALS_7", 69644)
			stats.set_int(MPX .. "DG_PENETRATOR_INITIALS_8", 69644)
			stats.set_int(MPX .. "DG_PENETRATOR_INITIALS_9", 69644)
			stats.set_int(MPX .. "DG_PENETRATOR_SCORE_0", 50)
			stats.set_int(MPX .. "DG_PENETRATOR_SCORE_1", 50)
			stats.set_int(MPX .. "DG_PENETRATOR_SCORE_2", 50)
			stats.set_int(MPX .. "DG_PENETRATOR_SCORE_3", 50)
			stats.set_int(MPX .. "DG_PENETRATOR_SCORE_4", 50)
			stats.set_int(MPX .. "DG_PENETRATOR_SCORE_5", 50)
			stats.set_int(MPX .. "DG_PENETRATOR_SCORE_6", 50)
			stats.set_int(MPX .. "DG_PENETRATOR_SCORE_7", 50)
			stats.set_int(MPX .. "DG_PENETRATOR_SCORE_8", 50)
			stats.set_int(MPX .. "DG_PENETRATOR_SCORE_9", 50)
			stats.set_int(MPX .. "DG_MONKEY_INITIALS_0", 69644)
			stats.set_int(MPX .. "DG_MONKEY_INITIALS_1", 69644)
			stats.set_int(MPX .. "DG_MONKEY_INITIALS_2", 69644)
			stats.set_int(MPX .. "DG_MONKEY_INITIALS_3", 69644)
			stats.set_int(MPX .. "DG_MONKEY_INITIALS_4", 69644)
			stats.set_int(MPX .. "DG_MONKEY_INITIALS_5", 69644)
			stats.set_int(MPX .. "DG_MONKEY_INITIALS_6", 69644)
			stats.set_int(MPX .. "DG_MONKEY_INITIALS_7", 69644)
			stats.set_int(MPX .. "DG_MONKEY_INITIALS_8", 69644)
			stats.set_int(MPX .. "DG_MONKEY_INITIALS_9", 69644)
			stats.set_int(MPX .. "DG_MONKEY_SCORE_0", 50)
			stats.set_int(MPX .. "DG_MONKEY_SCORE_1", 50)
			stats.set_int(MPX .. "DG_MONKEY_SCORE_2", 50)
			stats.set_int(MPX .. "DG_MONKEY_SCORE_3", 50)
			stats.set_int(MPX .. "DG_MONKEY_SCORE_4", 50)
			stats.set_int(MPX .. "DG_MONKEY_SCORE_5", 50)
			stats.set_int(MPX .. "DG_MONKEY_SCORE_6", 50)
			stats.set_int(MPX .. "DG_MONKEY_SCORE_7", 50)
			stats.set_int(MPX .. "DG_MONKEY_SCORE_8", 50)
			stats.set_int(MPX .. "DG_MONKEY_SCORE_9", 50)
			stats.set_int(MPX .. "CH_ARC_CAB_CLAW_TROPHY", -1)
			stats.set_int(MPX .. "CH_ARC_CAB_LOVE_TROPHY", -1)
			stats.set_int(MPX .. "AWD_PREPARATION", 40)
			stats.set_int(MPX .. "AWD_ASLEEPONJOB", 20)
			stats.set_int(MPX .. "AWD_DAICASHCRAB", 100000)
			stats.set_int(MPX .. "AWD_BIGBRO", 40)
			stats.set_int(MPX .. "AWD_SHARPSHOOTER", 40)
			stats.set_int(MPX .. "AWD_RACECHAMP", 40)
			stats.set_int(MPX .. "AWD_BATSWORD", 1000000)
			stats.set_int(MPX .. "AWD_COINPURSE", 950000)
			stats.set_int(MPX .. "AWD_ASTROCHIMP", 3000000)
			stats.set_int(MPX .. "AWD_MASTERFUL", 40000)
			stats.set_int(MPX .. "SCGW_NUM_WINS_GANG_0", 50)
			stats.set_int(MPX .. "SCGW_NUM_WINS_GANG_1", 50)
			stats.set_int(MPX .. "SCGW_NUM_WINS_GANG_2", 501)
			stats.set_int(MPX .. "SCGW_NUM_WINS_GANG_3", 50)
			stats.set_int(MPX .. "IAP_MA0_MOON_DIST", 2147483647)
			stats.set_int(MPX .. "AWD_FACES_OF_DEATH", 47)
			stats.set_int(MPX .. "IAP_INITIALS_0", 50)
			stats.set_int(MPX .. "IAP_INITIALS_1", 50)
			stats.set_int(MPX .. "IAP_INITIALS_2", 50)
			stats.set_int(MPX .. "IAP_INITIALS_3", 50)
			stats.set_int(MPX .. "IAP_INITIALS_4", 50)
			stats.set_int(MPX .. "IAP_INITIALS_5", 50)
			stats.set_int(MPX .. "IAP_INITIALS_6", 50)
			stats.set_int(MPX .. "IAP_INITIALS_7", 50)
			stats.set_int(MPX .. "IAP_INITIALS_8", 50)
			stats.set_int(MPX .. "IAP_INITIALS_9", 50)
			stats.set_int(MPX .. "IAP_SCORE_0", 69644)
			stats.set_int(MPX .. "IAP_SCORE_1", 50333)
			stats.set_int(MPX .. "IAP_SCORE_2", 63512)
			stats.set_int(MPX .. "IAP_SCORE_3", 46136)
			stats.set_int(MPX .. "IAP_SCORE_4", 21638)
			stats.set_int(MPX .. "IAP_SCORE_5", 2133)
			stats.set_int(MPX .. "IAP_SCORE_6", 1215)
			stats.set_int(MPX .. "IAP_SCORE_7", 2444)
			stats.set_int(MPX .. "IAP_SCORE_8", 38023)
			stats.set_int(MPX .. "IAP_SCORE_9", 2233)
			stats.set_int(MPX .. "SCGW_SCORE_1", 50)
			stats.set_int(MPX .. "SCGW_SCORE_2", 50)
			stats.set_int(MPX .. "SCGW_SCORE_3", 50)
			stats.set_int(MPX .. "SCGW_SCORE_4", 50)
			stats.set_int(MPX .. "SCGW_SCORE_5", 50)
			stats.set_int(MPX .. "SCGW_SCORE_6", 50)
			stats.set_int(MPX .. "SCGW_SCORE_7", 50)
			stats.set_int(MPX .. "SCGW_SCORE_8", 50)
			stats.set_int(MPX .. "SCGW_SCORE_9", 50)
			stats.set_int(MPX .. "DG_DEFENDER_INITIALS_0", 69644)
			stats.set_int(MPX .. "DG_DEFENDER_INITIALS_1", 69644)
			stats.set_int(MPX .. "DG_DEFENDER_INITIALS_2", 69644)
			stats.set_int(MPX .. "DG_DEFENDER_INITIALS_3", 69644)
			stats.set_int(MPX .. "DG_DEFENDER_INITIALS_4", 69644)
			stats.set_int(MPX .. "DG_DEFENDER_INITIALS_5", 69644)
			stats.set_int(MPX .. "DG_DEFENDER_INITIALS_6", 69644)
			stats.set_int(MPX .. "DG_DEFENDER_INITIALS_7", 69644)
			stats.set_int(MPX .. "DG_DEFENDER_INITIALS_8", 69644)
			stats.set_int(MPX .. "DG_DEFENDER_INITIALS_9", 69644)
			stats.set_int(MPX .. "DG_DEFENDER_SCORE_0", 50)
			stats.set_int(MPX .. "DG_DEFENDER_SCORE_1", 50)
			stats.set_int(MPX .. "DG_DEFENDER_SCORE_2", 50)
			stats.set_int(MPX .. "DG_DEFENDER_SCORE_3", 50)
			stats.set_int(MPX .. "DG_DEFENDER_SCORE_4", 50)
			stats.set_int(MPX .. "DG_DEFENDER_SCORE_5", 50)
			stats.set_int(MPX .. "DG_DEFENDER_SCORE_6", 50)
			stats.set_int(MPX .. "DG_DEFENDER_SCORE_7", 50)
			stats.set_int(MPX .. "DG_DEFENDER_SCORE_8", 50)
			stats.set_int(MPX .. "DG_DEFENDER_SCORE_9", 50)
			stats.set_int(MPX .. "AWD_CAR_CLUB_MEM", 100)
			stats.set_int(MPX .. "AWD_SPRINTRACER", 50)
			stats.set_int(MPX .. "AWD_STREETRACER", 50)
			stats.set_int(MPX .. "AWD_PURSUITRACER", 50)
			stats.set_int(MPX .. "AWD_TEST_CAR", 240)
			stats.set_int(MPX .. "AWD_AUTO_SHOP", 50)
			stats.set_int(MPX .. "AWD_CAR_EXPORT", 100)
			stats.set_int(MPX .. "AWD_GROUNDWORK", 40)
			stats.set_int(MPX .. "AWD_ROBBERY_CONTRACT", 100)
			stats.set_int(MPX .. "AWD_FACES_OF_DEATH", 100)
		end)
		JSXX:add_sameline()   ------同行
		JSXX:add_button("统计数据部分 3", function()
			stats.set_int(MPX .. "CLTHS_AVAILABLE_LEGS_3", -1)
			stats.set_int(MPX .. "CLTHS_AVAILABLE_LEGS_4", -1)
			stats.set_int(MPX .. "CLTHS_AVAILABLE_LEGS_5", -1)
			stats.set_int(MPX .. "CLTHS_AVAILABLE_LEGS_6", -1)
			stats.set_int(MPX .. "CLTHS_AVAILABLE_LEGS_7", -1)
			stats.set_int(MPX .. "CLTHS_AVAILABLE_OUTFIT", -1)
			stats.set_int(MPX .. "CLTHS_AVAILABLE_PROPS", -1)
			stats.set_int(MPX .. "CLTHS_AVAILABLE_PROPS_1", -1)
			stats.set_int(MPX .. "CLTHS_AVAILABLE_PROPS_10", -1)
			stats.set_int(MPX .. "CLTHS_AVAILABLE_PROPS_2", -1)
			stats.set_int(MPX .. "CLTHS_AVAILABLE_PROPS_3", -1)
			stats.set_int(MPX .. "CLTHS_AVAILABLE_PROPS_4", -1)
			stats.set_int(MPX .. "CLTHS_AVAILABLE_PROPS_5", -1)
			stats.set_int(MPX .. "CLTHS_AVAILABLE_PROPS_6", -1)
			stats.set_int(MPX .. "CLTHS_AVAILABLE_PROPS_7", -1)
			stats.set_int(MPX .. "CLTHS_AVAILABLE_PROPS_8", -1)
			stats.set_int(MPX .. "CLTHS_AVAILABLE_PROPS_9", -1)
			stats.set_int(MPX .. "CLTHS_AVAILABLE_SPECIAL", -1)
			stats.set_int(MPX .. "CLTHS_AVAILABLE_SPECIAL2", -1)
			stats.set_int(MPX .. "CLTHS_AVAILABLE_SPECIAL2_1", -1)
			stats.set_int(MPX .. "CLTHS_AVAILABLE_SPECIAL_1", -1)
			stats.set_int(MPX .. "CLTHS_AVAILABLE_SPECIAL_2", -1)
			stats.set_int(MPX .. "CLTHS_AVAILABLE_SPECIAL_3", -1)
			stats.set_int(MPX .. "CLTHS_AVAILABLE_SPECIAL_4", -1)
			stats.set_int(MPX .. "CLTHS_AVAILABLE_SPECIAL_5", -1)
			stats.set_int(MPX .. "CLTHS_AVAILABLE_SPECIAL_6", -1)
			stats.set_int(MPX .. "CLTHS_AVAILABLE_SPECIAL_7", -1)
			stats.set_int(MPX .. "CLTHS_AVAILABLE_TEETH", -1)
			stats.set_int(MPX .. "CLTHS_AVAILABLE_TEETH_1", -1)
			stats.set_int(MPX .. "CLTHS_AVAILABLE_TEETH_2", -1)
			stats.set_int(MPX .. "CLTHS_AVAILABLE_TORSO", -1)
			stats.set_int(MPX .. "DLC_APPAREL_ACQUIRED_0", -1)
			stats.set_int(MPX .. "DLC_APPAREL_ACQUIRED_1", -1)
			stats.set_int(MPX .. "DLC_APPAREL_ACQUIRED_10", -1)
			stats.set_int(MPX .. "DLC_APPAREL_ACQUIRED_11", -1)
			stats.set_int(MPX .. "DLC_APPAREL_ACQUIRED_12", -1)
			stats.set_int(MPX .. "DLC_APPAREL_ACQUIRED_13", -1)
			stats.set_int(MPX .. "DLC_APPAREL_ACQUIRED_14", -1)
			stats.set_int(MPX .. "DLC_APPAREL_ACQUIRED_15", -1)
			stats.set_int(MPX .. "DLC_APPAREL_ACQUIRED_16", -1)
			stats.set_int(MPX .. "DLC_APPAREL_ACQUIRED_17", -1)
			stats.set_int(MPX .. "DLC_APPAREL_ACQUIRED_18", -1)
			stats.set_int(MPX .. "DLC_APPAREL_ACQUIRED_19", -1)
			stats.set_int(MPX .. "DLC_APPAREL_ACQUIRED_2", -1)
			stats.set_int(MPX .. "DLC_APPAREL_ACQUIRED_20", -1)
			stats.set_int(MPX .. "DLC_APPAREL_ACQUIRED_21", -1)
			stats.set_int(MPX .. "DLC_APPAREL_ACQUIRED_22", -1)
			stats.set_int(MPX .. "DLC_APPAREL_ACQUIRED_23", -1)
			stats.set_int(MPX .. "DLC_APPAREL_ACQUIRED_24", -1)
			stats.set_int(MPX .. "DLC_APPAREL_ACQUIRED_25", -1)
			stats.set_int(MPX .. "DLC_APPAREL_ACQUIRED_26", -1)
			stats.set_int(MPX .. "DLC_APPAREL_ACQUIRED_27", -1)
			stats.set_int(MPX .. "DLC_APPAREL_ACQUIRED_28", -1)
			stats.set_int(MPX .. "DLC_APPAREL_ACQUIRED_29", -1)
			stats.set_int(MPX .. "DLC_APPAREL_ACQUIRED_3", -1)
			stats.set_int(MPX .. "DLC_APPAREL_ACQUIRED_30", -1)
			stats.set_int(MPX .. "DLC_APPAREL_ACQUIRED_31", -1)
			stats.set_int(MPX .. "DLC_APPAREL_ACQUIRED_32", -1)
			stats.set_int(MPX .. "DLC_APPAREL_ACQUIRED_33", -1)
			stats.set_int(MPX .. "DLC_APPAREL_ACQUIRED_34", -1)
			stats.set_int(MPX .. "DLC_APPAREL_ACQUIRED_35", -1)
			stats.set_int(MPX .. "DLC_APPAREL_ACQUIRED_36", -1)
			stats.set_int(MPX .. "DLC_APPAREL_ACQUIRED_37", -1)
			stats.set_int(MPX .. "DLC_APPAREL_ACQUIRED_38", -1)
			stats.set_int(MPX .. "DLC_APPAREL_ACQUIRED_39", -1)
			stats.set_int(MPX .. "DLC_APPAREL_ACQUIRED_4", -1)
			stats.set_int(MPX .. "DLC_APPAREL_ACQUIRED_40", -1)
			stats.set_int(MPX .. "DLC_APPAREL_ACQUIRED_5", -1)
			stats.set_int(MPX .. "DLC_APPAREL_ACQUIRED_6", -1)
			stats.set_int(MPX .. "DLC_APPAREL_ACQUIRED_7", -1)
			stats.set_int(MPX .. "DLC_APPAREL_ACQUIRED_8", -1)
			stats.set_int(MPX .. "DLC_APPAREL_ACQUIRED_9", -1)
			stats.set_int(MPX .. "GRENADE_ENEMY_KILLS", 50)
			stats.set_int(MPX .. "MICROSMG_ENEMY_KILLS", 500)
			stats.set_int(MPX .. "SMG_ENEMY_KILLS", 500)
			stats.set_int(MPX .. "ASLTSMG_ENEMY_KILLS", 500)
			stats.set_int(MPX .. "ASLTRIFLE_ENEMY_KILLS", 500)
			stats.set_int(MPX .. "CRBNRIFLE_ENEMY_KILLS", 500)
			stats.set_int(MPX .. "ADVRIFLE_ENEMY_KILLS", 500)
			stats.set_int(MPX .. "MG_ENEMY_KILLS", 500)
			stats.set_int(MPX .. "CMBTMG_ENEMY_KILLS", 500)
			stats.set_int(MPX .. "ASLTMG_ENEMY_KILLS", 500)
			stats.set_int(MPX .. "RPG_ENEMY_KILLS", 500)
			stats.set_int(MPX .. "LONGEST_WHEELIE_DIST", 1000)
			stats.set_int(MPX .. "MOST_ARM_WRESTLING_WINS", 25)
			stats.set_int(MPX .. "NO_CARS_REPAIR", 1000)
			stats.set_int(MPX .. "VEHICLES_SPRAYED", 500)
			stats.set_int(MPX .. "NUMBER_NEAR_MISS_NOCRASH", 500)
			stats.set_int(MPX .. "USJS_FOUND", 50)
			stats.set_int(MPX .. "USJS_FOUND_MASK", 50)
			stats.set_int(MPX .. "USJS_COMPLETED", 50)
			stats.set_int(MPX .. "USJS_TOTAL_COMPLETED", 50)
			stats.set_int(MPX .. "USJS_COMPLETED_MASK", 50)
			stats.set_int(MPX .. "MOST_FLIPS_IN_ONE_JUMP", 5)
			stats.set_int(MPX .. "MOST_SPINS_IN_ONE_JUMP", 5)
			stats.set_int(MPX .. "NUMBER_SLIPSTREAMS_IN_RACE", 100)
			stats.set_int(MPX .. "NUMBER_TURBO_STARTS_IN_RACE", 50)
			stats.set_int(MPX .. "PASS_DB_PLAYER_KILLS", 100)
			stats.set_int(MPX .. "PISTOL_ENEMY_KILLS", 500)
			stats.set_int(MPX .. "PLAYER_HEADSHOTS", 500)
			stats.set_int(MPX .. "RACES_WON", 50)
			stats.set_int(MPX .. "SAWNOFF_ENEMY_KILLS", 500)
			stats.set_int(MPX .. "SCRIPT_INCREASE_DRIV", 100)
			stats.set_int(MPX .. "SCRIPT_INCREASE_FLY", 100)
			stats.set_int(MPX .. "SCRIPT_INCREASE_LUNG", 100)
			stats.set_int(MPX .. "SCRIPT_INCREASE_MECH", 100)
			stats.set_int(MPX .. "SCRIPT_INCREASE_SHO", 100)
			stats.set_int(MPX .. "SCRIPT_INCREASE_STAM", 100)
			stats.set_int(MPX .. "SCRIPT_INCREASE_STL", 100)
			stats.set_int(MPX .. "SCRIPT_INCREASE_STRN", 100)
			stats.set_int(MPX .. "STKYBMB_ENEMY_KILLS", 50)
			stats.set_int(MPX .. "UNARMED_ENEMY_KILLS", 50)
			stats.set_int(MPX .. "USJS_COMPLETED", 50)
			stats.set_int(MPX .. "WEAP_FM_ADDON_PURCH", -1)
			stats.set_int(MPX .. "WEAP_FM_ADDON_PURCH2", -1)
			stats.set_int(MPX .. "WEAP_FM_ADDON_PURCH3", -1)
			stats.set_int(MPX .. "WEAP_FM_ADDON_PURCH4", -1)
			stats.set_int(MPX .. "WEAP_FM_ADDON_PURCH5", -1)
			stats.set_int(MPX .. "CRDEADLINE", 5)
			stats.set_int(MPX .. "CHAR_FM_ABILITY_1_UNLCK", -1)
			stats.set_int(MPX .. "CHAR_FM_ABILITY_2_UNLCK", -1)
			stats.set_int(MPX .. "CHAR_FM_ABILITY_3_UNLCK", -1)
			stats.set_int(MPX .. "CHAR_ABILITY_1_UNLCK", -1)
			stats.set_int(MPX .. "CHAR_ABILITY_2_UNLCK", -1)
			stats.set_int(MPX .. "CHAR_ABILITY_3_UNLCK", -1)
			stats.set_int(MPX .. "LIFETIME_BIKER_BUY_COMPLET", 1000)
			stats.set_int(MPX .. "LIFETIME_BIKER_BUY_UNDERTA", 1000)
			stats.set_int(MPX .. "LIFETIME_BIKER_SELL_COMPLET", 1000)
			stats.set_int(MPX .. "LIFETIME_BIKER_SELL_UNDERTA", 1000)
			stats.set_int(MPX .. "LIFETIME_BIKER_BUY_COMPLET1", 1000)
			stats.set_int(MPX .. "LIFETIME_BIKER_BUY_UNDERTA1", 1000)
			stats.set_int(MPX .. "LIFETIME_BIKER_SELL_COMPLET1", 1000)
			stats.set_int(MPX .. "LIFETIME_BIKER_SELL_UNDERTA1", 1000)
			stats.set_int(MPX .. "LIFETIME_BIKER_BUY_COMPLET2", 1000)
			stats.set_int(MPX .. "LIFETIME_BIKER_BUY_UNDERTA2", 1000)
			stats.set_int(MPX .. "LIFETIME_BIKER_SELL_COMPLET2", 1000)
			stats.set_int(MPX .. "LIFETIME_BIKER_SELL_UNDERTA2", 1000)
			stats.set_int(MPX .. "LIFETIME_BIKER_BUY_COMPLET3", 1000)
			stats.set_int(MPX .. "LIFETIME_BIKER_BUY_UNDERTA3", 1000)
			stats.set_int(MPX .. "LIFETIME_BIKER_SELL_COMPLET3", 1000)
			stats.set_int(MPX .. "LIFETIME_BIKER_SELL_UNDERTA3", 1000)
			stats.set_int(MPX .. "LIFETIME_BIKER_BUY_COMPLET4", 1000)
			stats.set_int(MPX .. "LIFETIME_BIKER_BUY_UNDERTA4", 1000)
			stats.set_int(MPX .. "LIFETIME_BIKER_SELL_COMPLET4", 1000)
			stats.set_int(MPX .. "LIFETIME_BIKER_SELL_UNDERTA4", 1000)
			stats.set_int(MPX .. "LIFETIME_BIKER_BUY_COMPLET5", 1000)
			stats.set_int(MPX .. "LIFETIME_BIKER_BUY_UNDERTA5", 1000)
			stats.set_int(MPX .. "LIFETIME_BIKER_SELL_COMPLET5", 1000)
			stats.set_int(MPX .. "LIFETIME_BIKER_SELL_UNDERTA5", 1000)
			stats.set_int(MPX .. "LIFETIME_BKR_SELL_EARNINGS0", 20000000)
			stats.set_int(MPX .. "LIFETIME_BKR_SELL_EARNINGS1", 20000000)
			stats.set_int(MPX .. "LIFETIME_BKR_SELL_EARNINGS2", 20000000)
			stats.set_int(MPX .. "LIFETIME_BKR_SELL_EARNINGS3", 20000000)
			stats.set_int(MPX .. "LIFETIME_BKR_SELL_EARNINGS4", 20000000)
			stats.set_int(MPX .. "LFETIME_IE_EXPORT_COMPLETED", 1000)
			stats.set_int(MPX .. "LFETIME_IE_MISSION_EARNINGS", 20000000)
			stats.set_int(MPX .. "LFETIME_HANGAR_SEL_UNDETAK", 1000)
			stats.set_int(MPX .. "LFETIME_HANGAR_SEL_COMPLET", 1000)
			stats.set_int(MPX .. "LFETIME_HANGAR_EARNINGS", 20000000)
			stats.set_int(MPX .. "SR_HIGHSCORE_1", 690)
			stats.set_int(MPX .. "SR_HIGHSCORE_2", 1860)
			stats.set_int(MPX .. "SR_HIGHSCORE_3", 2690)
			stats.set_int(MPX .. "SR_HIGHSCORE_4", 2660)
			stats.set_int(MPX .. "SR_HIGHSCORE_5", 2650)
			stats.set_int(MPX .. "SR_HIGHSCORE_6", 450)
			stats.set_int(MPX .. "SR_TARGETS_HIT", 269)
			stats.set_int(MPX .. "SR_WEAPON_BIT_SET", -1)
			stats.set_int(MPX .. "GANGOPS_HEIST_STATUS", 9999)
			stats.set_int(MPX .. "NO_BOUGHT_YUM_SNACKS", 1000)
			stats.set_int(MPX .. "AWD_DANCE_TO_SOLOMUN", 100)
			stats.set_int(MPX .. "AWD_DANCE_TO_TALEOFUS", 100)
			stats.set_int(MPX .. "AWD_DANCE_TO_DIXON", 100)
			stats.set_int(MPX .. "AWD_DANCE_TO_BLKMAD", 100)
			stats.set_int(MPX .. "AWD_CLUB_DRUNK", 200)
			stats.set_int(MPX .. "NUMUNIQUEPLYSINCLUB", 100)
			stats.set_int(MPX .. "DANCETODIFFDJS", 4)
			stats.set_int(MPX .. "DANCEPERFECTOWNCLUB", 100)
			stats.set_int(MPX .. "NIGHTCLUB_HOTSPOT_TIME_MS", 3600000)
			stats.set_int(MPX .. "AWD_WATCH_YOUR_STEP", 50)
			stats.set_int(MPX .. "AWD_TOWER_OFFENSE", 50)
			stats.set_int(MPX .. "AWD_READY_FOR_WAR", 60)
			stats.set_int(MPX .. "AWD_THROUGH_A_LENS", 60)
			stats.set_int(MPX .. "AWD_SPINNER", 60)
			stats.set_int(MPX .. "AWD_YOUMEANBOOBYTRAPS", 50)
			stats.set_int(MPX .. "AWD_MASTER_BANDITO", 50)
			stats.set_int(MPX .. "AWD_SITTING_DUCK", 60)
			stats.set_int(MPX .. "AWD_CROWDPARTICIPATION", 60)
			stats.set_int(MPX .. "AWD_KILL_OR_BE_KILLED", 60)
			stats.set_int(MPX .. "AWD_MASSIVE_SHUNT", 60)
			stats.set_int(MPX .. "AWD_YOURE_OUTTA_HERE", 200)
			stats.set_int(MPX .. "AWD_WEVE_GOT_ONE", 52)
			stats.set_int(MPX .. "AWD_ARENA_WAGEWORKER", 20000000)
			stats.set_int(MPX .. "AWD_TIME_SERVED", 1000)
			stats.set_int(MPX .. "AWD_TOP_SCORE", 500000)
			stats.set_int(MPX .. "AWD_CAREER_WINNER", 1000)
			stats.set_int(MPX .. "ARENAWARS_SKILL_LEVEL", 20)
			stats.set_int(MPX .. "ARENAWARS_AP_TIER", 1000)
			stats.set_int(MPX .. "ARENAWARS_AP_LIFETIME", 47551850)
			stats.set_int(MPX .. "ARN_W_THEME_SCIFI", 1000)
			stats.set_int(MPX .. "ARN_W_THEME_APOC", 1000)
			stats.set_int(MPX .. "ARN_W_THEME_CONS", 1000)
			stats.set_int(MPX .. "ARN_W_PASS_THE_BOMB", 1000)
			stats.set_int(MPX .. "ARN_W_DETONATION", 1000)
			stats.set_int(MPX .. "ARN_W_ARCADE_RACE", 1000)
			stats.set_int(MPX .. "ARN_W_CTF", 1000)
			stats.set_int(MPX .. "ARN_W_TAG_TEAM", 1000)
			stats.set_int(MPX .. "ARN_W_DESTR_DERBY", 1000)
			stats.set_int(MPX .. "ARN_W_CARNAGE", 1000)
			stats.set_int(MPX .. "ARN_W_MONSTER_JAM", 1000)
			stats.set_int(MPX .. "ARN_W_GAMES_MASTERS", 1000)
			stats.set_int(MPX .. "ARN_L_PASS_THE_BOMB", 500)
			stats.set_int(MPX .. "ARN_L_DETONATION", 500)
			stats.set_int(MPX .. "ARN_L_ARCADE_RACE", 500)
			stats.set_int(MPX .. "ARN_L_CTF", 500)
			stats.set_int(MPX .. "ARN_L_TAG_TEAM", 500)
			stats.set_int(MPX .. "ARN_L_DESTR_DERBY", 500)
			stats.set_int(MPX .. "ARN_L_CARNAGE", 500)
			stats.set_int(MPX .. "ARN_L_MONSTER_JAM", 500)
			stats.set_int(MPX .. "ARN_L_GAMES_MASTERS", 500)
			stats.set_int(MPX .. "NUMBER_OF_CHAMP_BOUGHT", 1000)
			stats.set_int(MPX .. "ARN_SPECTATOR_KILLS", 1000)
			stats.set_int(MPX .. "ARN_LIFETIME_KILLS", 1000)
			stats.set_int(MPX .. "ARN_LIFETIME_DEATHS", 500)
			stats.set_int(MPX .. "ARENAWARS_CARRER_WINS", 1000)
			stats.set_int(MPX .. "ARENAWARS_CARRER_WINT", 1000)
			stats.set_int(MPX .. "ARENAWARS_MATCHES_PLYD", 1000)
			stats.set_int(MPX .. "ARENAWARS_MATCHES_PLYDT", 1000)
			stats.set_int(MPX .. "ARN_SPECTATOR_DRONE", 1000)
			stats.set_int(MPX .. "ARN_SPECTATOR_CAMS", 1000)
			stats.set_int(MPX .. "ARN_SMOKE", 1000)
			stats.set_int(MPX .. "ARN_DRINK", 1000)
			stats.set_int(MPX .. "ARN_VEH_MONSTER3", 1000)
			stats.set_int(MPX .. "ARN_VEH_MONSTER4", 1000)
			stats.set_int(MPX .. "ARN_VEH_MONSTER5", 1000)
			stats.set_int(MPX .. "ARN_VEH_CERBERUS", 1000)
			stats.set_int(MPX .. "ARN_VEH_CERBERUS2", 1000)
			stats.set_int(MPX .. "ARN_VEH_CERBERUS3", 1000)
			stats.set_int(MPX .. "ARN_VEH_BRUISER", 1000)
			stats.set_int(MPX .. "ARN_VEH_BRUISER2", 1000)
			stats.set_int(MPX .. "ARN_VEH_BRUISER3", 1000)
			stats.set_int(MPX .. "ARN_VEH_SLAMVAN4", 1000)
			stats.set_int(MPX .. "ARN_VEH_SLAMVAN5", 1000)
			stats.set_int(MPX .. "ARN_VEH_SLAMVAN6", 1000)
			stats.set_int(MPX .. "ARN_VEH_BRUTUS", 1000)
			stats.set_int(MPX .. "ARN_VEH_BRUTUS2", 1000)
			stats.set_int(MPX .. "ARN_VEH_BRUTUS3", 1000)
			stats.set_int(MPX .. "ARN_VEH_SCARAB", 1000)
			stats.set_int(MPX .. "ARN_VEH_SCARAB2", 1000)
			stats.set_int(MPX .. "ARN_VEH_SCARAB3", 1000)
			stats.set_int(MPX .. "ARN_VEH_DOMINATOR4", 1000)
			stats.set_int(MPX .. "ARN_VEH_DOMINATOR5", 1000)
			stats.set_int(MPX .. "ARN_VEH_DOMINATOR6", 1000)
			stats.set_int(MPX .. "ARN_VEH_IMPALER2", 1000)
			stats.set_int(MPX .. "ARN_VEH_IMPALER3", 1000)
			stats.set_int(MPX .. "ARN_VEH_IMPALER4", 1000)
			stats.set_int(MPX .. "ARN_VEH_ISSI4", 1000)
			stats.set_int(MPX .. "ARN_VEH_ISSI5", 1000)
			stats.set_int(MPX .. "ARN_VEH_ISSI6", 1000)
			stats.set_int(MPX .. "ARN_VEH_IMPERATOR", 1000)
			stats.set_int(MPX .. "ARN_VEH_IMPERATOR2", 1000)
			stats.set_int(MPX .. "ARN_VEH_IMPERATOR3", 1000)
			stats.set_int(MPX .. "ARN_VEH_ZR380", 1000)
			stats.set_int(MPX .. "ARN_VEH_ZR3802", 1000)
			stats.set_int(MPX .. "ARN_VEH_ZR3803", 1000)
			stats.set_int(MPX .. "ARN_VEH_DEATHBIKE", 1000)
			stats.set_int(MPX .. "ARN_VEH_DEATHBIKE2", 1000)
			stats.set_int(MPX .. "ARN_VEH_DEATHBIKE3", 1000)
			stats.set_int(MPX .. "NO_BOUGHT_HEALTH_SNACKS", 1000)
			stats.set_int(MPX .. "NO_BOUGHT_EPIC_SNACKS", 1000)
			stats.set_int(MPX .. "NUMBER_OF_ORANGE_BOUGHT", 1000)
			stats.set_int(MPX .. "MP_CHAR_ARMOUR_1_COUNT", 1000)
			stats.set_int(MPX .. "MP_CHAR_ARMOUR_2_COUNT", 1000)
			stats.set_int(MPX .. "MP_CHAR_ARMOUR_3_COUNT", 1000)
			stats.set_int(MPX .. "MP_CHAR_ARMOUR_4_COUNT", 1000)
			stats.set_int(MPX .. "MP_CHAR_ARMOUR_5_COUNT", 1000)
			stats.set_int(MPX .. "NUMBER_OF_BOURGE_BOUGHT", 1000)
			stats.set_int(MPX .. "CIGARETTES_BOUGHT", 1000)
			stats.set_int(MPX .. "FIREWORK_TYPE_1_WHITE", 1000)
			stats.set_int(MPX .. "FIREWORK_TYPE_1_RED", 1000)
			stats.set_int(MPX .. "FIREWORK_TYPE_1_BLUE", 1000)
			stats.set_int(MPX .. "FIREWORK_TYPE_2_WHITE", 1000)
			stats.set_int(MPX .. "FIREWORK_TYPE_2_RED", 1000)
			stats.set_int(MPX .. "FIREWORK_TYPE_2_BLUE", 1000)
			stats.set_int(MPX .. "FIREWORK_TYPE_3_WHITE", 1000)
			stats.set_int(MPX .. "FIREWORK_TYPE_3_RED", 1000)
			stats.set_int(MPX .. "FIREWORK_TYPE_3_BLUE", 1000)
			stats.set_int(MPX .. "FIREWORK_TYPE_4_WHITE", 1000)
			stats.set_int(MPX .. "FIREWORK_TYPE_4_RED", 1000)
			stats.set_int(MPX .. "FIREWORK_TYPE_4_BLUE", 1000)
			stats.set_int(MPX .. "FM_ACT_PHN", -1)
			stats.set_int(MPX .. "FM_ACT_PH2", -1)
			stats.set_int(MPX .. "FM_ACT_PH3", -1)
			stats.set_int(MPX .. "FM_ACT_PH4", -1)
			stats.set_int(MPX .. "FM_ACT_PH5", -1)
			stats.set_int(MPX .. "FM_VEH_TX1", -1)
			stats.set_int(MPX .. "FM_ACT_PH6", -1)
			stats.set_int(MPX .. "FM_ACT_PH7", -1)
			stats.set_int(MPX .. "FM_ACT_PH8", -1)
			stats.set_int(MPX .. "FM_ACT_PH9", -1)
			stats.set_int(MPX .. "LOWRIDER_FLOW_COMPLETE", 3)
			stats.set_int(MPX .. "LOW_FLOW_CURRENT_PROG", 9)
			stats.set_int(MPX .. "LOW_FLOW_CURRENT_CALL", 9)
			stats.set_int(MPX .. "CR_GANGOP_MORGUE", 10)
			stats.set_int(MPX .. "CR_GANGOP_DELUXO", 10)
			stats.set_int(MPX .. "CR_GANGOP_SERVERFARM", 10)
			stats.set_int(MPX .. "CR_GANGOP_IAABASE_FIN", 10)
			stats.set_int(MPX .. "CR_GANGOP_STEALOSPREY", 10)
			stats.set_int(MPX .. "CR_GANGOP_FOUNDRY", 10)
			stats.set_int(MPX .. "CR_GANGOP_RIOTVAN", 10)
			stats.set_int(MPX .. "CR_GANGOP_SUBMARINECAR", 10)
			stats.set_int(MPX .. "CR_GANGOP_SUBMARINE_FIN", 10)
			stats.set_int(MPX .. "CR_GANGOP_PREDATOR", 10)
			stats.set_int(MPX .. "CR_GANGOP_BMLAUNCHER", 10)
			stats.set_int(MPX .. "CR_GANGOP_BCCUSTOM", 10)
			stats.set_int(MPX .. "CR_GANGOP_STEALTHTANKS", 10)
			stats.set_int(MPX .. "CR_GANGOP_SPYPLANE", 10)
			stats.set_int(MPX .. "CR_GANGOP_FINALE", 10)
			stats.set_int(MPX .. "CR_GANGOP_FINALE_P2", 10)
			stats.set_int(MPX .. "CR_GANGOP_FINALE_P3", 10)
			stats.set_int(MPX .. "SNIPERRFL_ENEMY_KILLS", 500)
			stats.set_int(MPX .. "HVYSNIPER_ENEMY_KILLS", 500)
			stats.set_int(MPX .. "KILLS_COP", 4500)
			stats.set_int(MPX .. "KILLS_SWAT", 500)
			stats.set_int(MPX .. "CHAR_WANTED_LEVEL_TIME", 5000)
			stats.set_int(MPX .. "NUMBER_STOLEN_COP_VEHICLE", 200)
			stats.set_int(MPX .. "NUMBER_STOLEN_CARS", 200)
			stats.set_int(MPX .. "NUMBER_STOLEN_BIKES", 200)
			stats.set_int(MPX .. "NUMBER_STOLEN_BOATS", 200)
			stats.set_int(MPX .. "NUMBER_STOLEN_HELIS", 200)
			stats.set_int(MPX .. "NUMBER_STOLEN_PLANES", 200)
			stats.set_int(MPX .. "NUMBER_STOLEN_QUADBIKES", 200)
			stats.set_int(MPX .. "NUMBER_STOLEN_BICYCLES", 200)
			stats.set_int(MPX .. "STARS_ATTAINED", 5000)
			stats.set_int(MPX .. "STARS_EVADED", 4000)
			stats.set_int(MPX .. "VEHEXPORTED", 500)
			stats.set_int(MPX .. "TOTAL_NO_SHOPS_HELD_UP", 100)
			stats.set_int(MPX .. "KILLS_ENEMY_GANG_MEMBERS", 500)
			stats.set_int(MPX .. "KILLS_FRIENDLY_GANG_MEMBERS", 500)
			stats.set_int(MPX .. "CR_GANGATTACK_CITY", 500)
			stats.set_int(MPX .. "CR_GANGATTACK_COUNTRY", 500)
			stats.set_int(MPX .. "CR_GANGATTACK_LOST", 500)
			stats.set_int(MPX .. "CR_GANGATTACK_VAGOS", 500)
			stats.set_int(MPX .. "HORDKILLS", 500)
			stats.set_int(MPX .. "GHKILLS", 500)
			stats.set_int(MPX .. "NO_NON_CONTRACT_RACE_WIN", 500)
			stats.set_int(MPX .. "DB_SHOTTIME", 596)
			stats.set_int(MPX .. "DB_KILLS", 500)
			stats.set_int(MPX .. "DB_PLAYER_KILLS", 500)
			stats.set_int(MPX .. "DB_SHOTS", 500)
			stats.set_int(MPX .. "DB_HITS", 500)
			stats.set_int(MPX .. "DB_HITS_PEDS_VEHICLES", 500)
			stats.set_int(MPX .. "DB_HEADSHOTS", 500)
			stats.set_int(MPX .. "LFETIME_BIKER_BUY_COMPLET5", 14)
			stats.set_int(MPX .. "USJS_COMPLETED", 25)
			stats.set_int(MPX .. "AWD_FM_RACES_FASTEST_LAP", 50)
			stats.set_int(MPX .. "NUMBER_SLIPSTREAMS_IN_RACE", 1000)
			stats.set_int(MPX .. "AWD_WIN_CAPTURES", 500)
			stats.set_int(MPX .. "AWD_DROPOFF_CAP_PACKAGES", 100)
			stats.set_int(MPX .. "AWD_KILL_CARRIER_CAPTURE", 100)
			stats.set_int(MPX .. "AWD_FINISH_HEISTS", 50)
			stats.set_int(MPX .. "AWD_FINISH_HEIST_SETUP_JOB", 50)
			stats.set_int(MPX .. "AWD_NIGHTVISION_KILLS", 100)
			stats.set_int(MPX .. "AWD_WIN_LAST_TEAM_STANDINGS", 50)
			stats.set_int(MPX .. "AWD_ONLY_PLAYER_ALIVE_LTS", 50)
			stats.set_int(MPX .. "AWD_FMRALLYWONDRIVE", 25)
			stats.set_int(MPX .. "AWD_FMRALLYWONNAV", 25)
			stats.set_int(MPX .. "AWD_FMWINAIRRACE", 25)
			stats.set_int(MPX .. "AWD_FMWINSEARACE", 25)
			stats.set_int(MPX .. "RACES_WON", 50)
			stats.set_int(MPX .. "FAVOUTFITBIKETIMECURRENT", 884483972)
			stats.set_int(MPX .. "FAVOUTFITBIKETIME1ALLTIME", 884483972)
			stats.set_int(MPX .. "FAVOUTFITBIKETYPECURRENT", 884483972)
			stats.set_int(MPX .. "FAVOUTFITBIKETYPEALLTIME", 884483972)
			stats.set_int(MPX .. "LIFETIME_BUY_COMPLETE", 1000)
			stats.set_int(MPX .. "LIFETIME_BUY_UNDERTAKEN", 1000)
			stats.set_int(MPX .. "LIFETIME_SELL_COMPLETE", 1000)
			stats.set_int(MPX .. "LIFETIME_SELL_UNDERTAKEN", 1000)
			stats.set_int(MPX .. "LIFETIME_CONTRA_EARNINGS", 30000000)
			stats.set_int(MPX .. "TATTOO_FM_CURRENT_32", 32768)
			stats.set_int(MPX .. "TATTOO_FM_CURRENT_32", 67108864)
			stats.set_int(MPX .. "DELUXO_BULLET_HITS", 500)
			stats.set_int(MPX .. "DELUXO_BULLET_HEADSHOTS", 500)
			stats.set_int(MPX .. "DELUXO_BULLET_HELDTIME", 5963259)
			stats.set_int(MPX .. "DELUXO_BULLET_ENEMY_KILLS", 500)
			stats.set_int(MPX .. "DELUXO_ROCKET_KILLS", 500)
			stats.set_int(MPX .. "DELUXO_ROCKET_DEATHS", 100)
			stats.set_int(MPX .. "DELUXO_ROCKET_SHOTS", 500)
			stats.set_int(MPX .. "DELUXO_ROCKET_HITS", 500)
			stats.set_int(MPX .. "DELUXO_ROCKET_HELDTIME", 5963259)
			stats.set_int(MPX .. "DELUXO_ROCKET_ENEMY_KILLS", 500)
			stats.set_int(MPX .. "DELUXO_BULLET_KILLS", 500)
			stats.set_int(MPX .. "DELUXO_BULLET_DEATHS", 100)
			stats.set_int(MPX .. "DELUXO_BULLET_SHOTS", 500)
			stats.set_int(MPX .. "COMET4_MG_KILLS", 500)
			stats.set_int(MPX .. "COMET4_MG_DEATHS", 100)
			stats.set_int(MPX .. "COMET4_MG_SHOTS", 500)
			stats.set_int(MPX .. "COMET4_MG_HITS", 500)
			stats.set_int(MPX .. "COMET4_MG_HEADSHOTS", 500)
			stats.set_int(MPX .. "COMET4_MG_HELDTIME", 5963259)
			stats.set_int(MPX .. "COMET4_MG_ENEMY_KILLS", 500)
			stats.set_int(MPX .. "CHERNOBOG_MISS_KILLS", 500)
			stats.set_int(MPX .. "CHERNOBOG_MISS_DEATHS", 100)
			stats.set_int(MPX .. "CHERNOBOG_MISS_SHOTS", 500)
			stats.set_int(MPX .. "CHERNOBOG_MISS_HITS", 500)
			stats.set_int(MPX .. "CHERNOBOG_MISS_HELDTIME", 5963259)
			stats.set_int(MPX .. "CHERNOBOG_MISS_ENEMY_KILLS", 500)
			stats.set_int(MPX .. "BARRAGE_R_MG_KILLS", 500)
			stats.set_int(MPX .. "BARRAGE_R_MG_DEATHS", 100)
			stats.set_int(MPX .. "BARRAGE_R_MG_SHOTS", 500)
			stats.set_int(MPX .. "BARRAGE_R_MG_HITS", 500)
			stats.set_int(MPX .. "BARRAGE_R_MG_HEADSHOTS", 500)
			stats.set_int(MPX .. "BARRAGE_R_MG_HELDTIME", 5963259)
			stats.set_int(MPX .. "BARRAGE_R_MG_ENEMY_KILLS", 500)
			stats.set_int(MPX .. "BARRAGE_R_MINI_KILLS", 500)
			stats.set_int(MPX .. "BARRAGE_R_MINI_DEATHS", 100)
			stats.set_int(MPX .. "BARRAGE_R_MINI_SHOTS", 500)
			stats.set_int(MPX .. "BARRAGE_R_MINI_HITS", 500)
			stats.set_int(MPX .. "BARRAGE_R_MINI_HEADSHOTS", 500)
			stats.set_int(MPX .. "BARRAGE_R_MINI_HELDTIME", 5963259)
			stats.set_int(MPX .. "BARRAGE_R_MINI_ENEMY_KILLS", 500)
			stats.set_int(MPX .. "BARRAGE_R_GL_KILLS", 500)
			stats.set_int(MPX .. "BARRAGE_R_GL_DEATHS", 100)
			stats.set_int(MPX .. "BARRAGE_R_GL_SHOTS", 500)
			stats.set_int(MPX .. "BARRAGE_R_GL_HITS", 500)
			stats.set_int(MPX .. "BARRAGE_R_GL_HELDTIME", 5963259)
			stats.set_int(MPX .. "BARRAGE_R_GL_ENEMY_KILLS", 500)
			stats.set_int(MPX .. "BARRAGE_T_MG_KILLS", 500)
			stats.set_int(MPX .. "BARRAGE_T_MG_DEATHS", 100)
			stats.set_int(MPX .. "BARRAGE_T_MG_SHOTS", 500)
			stats.set_int(MPX .. "BARRAGE_T_MG_HITS", 500)
			stats.set_int(MPX .. "BARRAGE_T_MG_HEADSHOTS", 500)
			stats.set_int(MPX .. "BARRAGE_T_MG_HELDTIME", 5963259)
			stats.set_int(MPX .. "BARRAGE_T_MG_ENEMY_KILLS", 500)
			stats.set_int(MPX .. "BARRAGE_T_MINI_KILLS", 500)
			stats.set_int(MPX .. "BARRAGE_T_MINI_DEATHS", 100)
			stats.set_int(MPX .. "BARRAGE_T_MINI_SHOTS", 500)
			stats.set_int(MPX .. "BARRAGE_T_MINI_HITS", 500)
			stats.set_int(MPX .. "BARRAGE_T_MINI_HEADSHOTS", 500)
			stats.set_int(MPX .. "BARRAGE_T_MINI_HELDTIME", 5963259)
			stats.set_int(MPX .. "BARRAGE_T_MINI_ENEMY_KILLS", 500)
			stats.set_int(MPX .. "AVENGER_CANNON_KILLS", 500)
			stats.set_int(MPX .. "AVENGER_CANNON_DEATHS", 100)
			stats.set_int(MPX .. "AVENGER_CANNON_SHOTS", 500)
			stats.set_int(MPX .. "AVENGER_CANNON_HITS", 500)
			stats.set_int(MPX .. "AVENGER_CANNON_HELDTIME", 5963259)
			stats.set_int(MPX .. "AVENGER_CANNON_ENEMY_KILLS", 500)
			stats.set_int(MPX .. "AKULA_TURR_KILLS", 500)
			stats.set_int(MPX .. "AKULA_TURR_DEATHS", 100)
			stats.set_int(MPX .. "AKULA_TURR_SHOTS", 500)
			stats.set_int(MPX .. "AKULA_TURR_HITS", 500)
			stats.set_int(MPX .. "AKULA_TURR_HEADSHOTS", 500)
			stats.set_int(MPX .. "AKULA_TURR_HELDTIME", 5963259)
			stats.set_int(MPX .. "AKULA_TURR_ENEMY_KILLS", 500)
			stats.set_int(MPX .. "AKULA_DTURR_KILLS", 500)
			stats.set_int(MPX .. "AKULA_DTURR_DEATHS", 100)
			stats.set_int(MPX .. "AKULA_DTURR_SHOTS", 500)
			stats.set_int(MPX .. "AKULA_DTURR_HITS", 500)
			stats.set_int(MPX .. "AKULA_DTURR_HEADSHOTS", 500)
			stats.set_int(MPX .. "AKULA_DTURR_HELDTIME", 5963259)
			stats.set_int(MPX .. "AKULA_DTURR_ENEMY_KILLS", 500)
			stats.set_int(MPX .. "AKULA_MINI_KILLS", 500)
			stats.set_int(MPX .. "AKULA_MINI_DEATHS", 100)
			stats.set_int(MPX .. "AKULA_MINI_SHOTS", 500)
			stats.set_int(MPX .. "AKULA_MINI_HITS", 500)
			stats.set_int(MPX .. "AKULA_MINI_HEADSHOTS", 500)
			stats.set_int(MPX .. "AKULA_MINI_HELDTIME", 5963259)
			stats.set_int(MPX .. "AKULA_MINI_ENEMY_KILLS", 500)
			stats.set_int(MPX .. "AKULA_BARR_KILLS", 500)
			stats.set_int(MPX .. "AKULA_BARR_DEATHS", 100)
			stats.set_int(MPX .. "AKULA_BARR_SHOTS", 500)
			stats.set_int(MPX .. "AKULA_BARR_HITS", 500)
			stats.set_int(MPX .. "AKULA_BARR_HELDTIME", 5963259)
			stats.set_int(MPX .. "AKULA_BARR_ENEMY_KILLS", 500)
			stats.set_int(MPX .. "AKULA_ROCKET_KILLS", 500)
			stats.set_int(MPX .. "AKULA_ROCKET_DEATHS", 100)
			stats.set_int(MPX .. "AKULA_ROCKET_SHOTS", 500)
			stats.set_int(MPX .. "AKULA_ROCKET_HITS", 500)
			stats.set_int(MPX .. "AKULA_ROCKET_HELDTIME", 5963259)
			stats.set_int(MPX .. "AKULA_ROCKET_ENEMY_KILLS", 500)
			stats.set_int(MPX .. "ARENA_MG_KILLS", 500)
			stats.set_int(MPX .. "ARENA_MG_DEATHS", 100)
			stats.set_int(MPX .. "ARENA_MG_SHOTS", 500)
			stats.set_int(MPX .. "ARENA_MG_HITS", 500)
			stats.set_int(MPX .. "ARENA_MG_HEADSHOTS", 500)
			stats.set_int(MPX .. "ARENA_MG_HELDTIME", 5963259)
			stats.set_int(MPX .. "ARENA_MG_ENEMY_KILLS", 500)
			stats.set_int(MPX .. "ARENA_HM_KILLS", 500)
			stats.set_int(MPX .. "ARENA_HM_DEATHS", 100)
			stats.set_int(MPX .. "ARENA_HM_SHOTS", 500)
			stats.set_int(MPX .. "ARENA_HM_HITS", 500)
			stats.set_int(MPX .. "ARENA_HM_HELDTIME", 5963259)
			stats.set_int(MPX .. "RCMINE_KIN_KILLS", 500)
			stats.set_int(MPX .. "RCMINE_KIN_DEATHS", 100)
			stats.set_int(MPX .. "RCMINE_KIN_SHOTS", 500)
			stats.set_int(MPX .. "RCMINE_KIN_HITS", 500)
			stats.set_int(MPX .. "RCMINE_KIN_ENEMY_KILLS", 500)
			stats.set_int(MPX .. "RCMINE_EMP_KILLS", 500)
			stats.set_int(MPX .. "RCMINE_EMP_DEATHS", 100)
			stats.set_int(MPX .. "RCMINE_EMP_SHOTS", 500)
			stats.set_int(MPX .. "RCMINE_EMP_HITS", 500)
			stats.set_int(MPX .. "RCMINE_EMP_ENEMY_KILLS", 500)
			stats.set_int(MPX .. "RCMINE_SPI_KILLS", 500)
			stats.set_int(MPX .. "RCMINE_SPI_DEATHS", 100)
			stats.set_int(MPX .. "RCMINE_SPI_SHOTS", 500)
			stats.set_int(MPX .. "RCMINE_SPI_HITS", 500)
			stats.set_int(MPX .. "RCMINE_SPI_ENEMY_KILLS", 500)
			stats.set_int(MPX .. "RCMINE_SLI_KILLS", 500)
			stats.set_int(MPX .. "RCMINE_SLI_DEATHS", 100)
			stats.set_int(MPX .. "RCMINE_SLI_SHOTS", 500)
			stats.set_int(MPX .. "RCMINE_SLI_HITS", 500)
			stats.set_int(MPX .. "RCMINE_SLI_ENEMY_KILLS", 500)
			stats.set_int(MPX .. "RCMINE_TAR_KILLS", 500)
			stats.set_int(MPX .. "RCMINE_TAR_DEATHS", 100)
			stats.set_int(MPX .. "RCMINE_TAR_SHOTS", 500)
			stats.set_int(MPX .. "RCMINE_TAR_HITS", 500)
			stats.set_int(MPX .. "RCMINE_TAR_ENEMY_KILLS", 500)
			stats.set_int(MPX .. "VEHMINE_KILLS", 500)
			stats.set_int(MPX .. "VEHMINE_DEATHS", 100)
			stats.set_int(MPX .. "VEHMINE_SHOTS", 500)
			stats.set_int(MPX .. "VEHMINE_HITS", 500)
			stats.set_int(MPX .. "VEHMINE_ENEMY_KILLS", 500)
			stats.set_int(MPX .. "VEHMINE_KIN_KILLS", 500)
			stats.set_int(MPX .. "VEHMINE_KIN_DEATHS", 100)
			stats.set_int(MPX .. "VEHMINE_KIN_SHOTS", 500)
			stats.set_int(MPX .. "VEHMINE_KIN_HITS", 500)
			stats.set_int(MPX .. "VEHMINE_KIN_ENEMY_KILLS", 500)
			stats.set_int(MPX .. "VEHMINE_EMP_KILLS", 500)
			stats.set_int(MPX .. "VEHMINE_EMP_DEATHS", 100)
			stats.set_int(MPX .. "VEHMINE_EMP_SHOTS", 500)
			stats.set_int(MPX .. "VEHMINE_EMP_HITS", 500)
			stats.set_int(MPX .. "VEHMINE_EMP_ENEMY_KILLS", 500)
			stats.set_int(MPX .. "VEHMINE_SPI_KILLS", 500)
			stats.set_int(MPX .. "VEHMINE_SPI_DEATHS", 100)
			stats.set_int(MPX .. "VEHMINE_SPI_SHOTS", 500)
			stats.set_int(MPX .. "VEHMINE_SPI_HITS", 500)
			stats.set_int(MPX .. "VEHMINE_SPI_ENEMY_KILLS", 500)
			stats.set_int(MPX .. "VEHMINE_SLI_KILLS", 500)
			stats.set_int(MPX .. "VEHMINE_SLI_DEATHS", 100)
			stats.set_int(MPX .. "VEHMINE_SLI_SHOTS", 500)
			stats.set_int(MPX .. "VEHMINE_SLI_HITS", 500)
			stats.set_int(MPX .. "VEHMINE_SLI_ENEMY_KILLS", 500)
			stats.set_int(MPX .. "VEHMINE_TAR_KILLS", 500)
			stats.set_int(MPX .. "VEHMINE_TAR_DEATHS", 100)
			stats.set_int(MPX .. "VEHMINE_TAR_SHOTS", 500)
			stats.set_int(MPX .. "VEHMINE_TAR_HITS", 500)
			stats.set_int(MPX .. "VEHMINE_TAR_ENEMY_KILLS", 500)
			stats.set_int(MPX .. "ZR3803_MG50_KILLS", 500)
			stats.set_int(MPX .. "ZR3803_MG50_DEATHS", 100)
			stats.set_int(MPX .. "ZR3803_MG50_SHOTS", 500)
			stats.set_int(MPX .. "ZR3803_MG50_HITS", 500)
			stats.set_int(MPX .. "ZR3803_MG50_HEADSHOTS", 500)
			stats.set_int(MPX .. "ZR3803_MG50_HELDTIME", 5963259)
			stats.set_int(MPX .. "ZR3803_MG50_ENEMY_KILLS", 500)
			stats.set_int(MPX .. "ZR3802_MG50_KILLS", 500)
			stats.set_int(MPX .. "ZR3802_MG50_DEATHS", 100)
			stats.set_int(MPX .. "ZR3802_MG50_SHOTS", 500)
			stats.set_int(MPX .. "ZR3802_MG50_HITS", 500)
			stats.set_int(MPX .. "ZR3802_MG50_HEADSHOTS", 500)
			stats.set_int(MPX .. "ZR3802_MG50_HELDTIME", 5963259)
			stats.set_int(MPX .. "ZR3802_MG50_ENEMY_KILLS", 500)
			stats.set_int(MPX .. "ZR3802_LAS_KILLS", 500)
			stats.set_int(MPX .. "ZR3802_LAS_DEATHS", 100)
			stats.set_int(MPX .. "ZR3802_LAS_SHOTS", 500)
			stats.set_int(MPX .. "ZR3802_LAS_HITS", 500)
			stats.set_int(MPX .. "ZR3802_LAS_HEADSHOTS", 500)
			stats.set_int(MPX .. "ZR3802_LAS_HELDTIME", 5963259)
			stats.set_int(MPX .. "ZR3802_LAS_ENEMY_KILLS", 500)
			stats.set_int(MPX .. "ZR380_MG50_KILLS", 500)
			stats.set_int(MPX .. "ZR380_MG50_DEATHS", 100)
			stats.set_int(MPX .. "ZR380_MG50_SHOTS", 500)
			stats.set_int(MPX .. "ZR380_MG50_HITS", 500)
			stats.set_int(MPX .. "ZR380_MG50_HEADSHOTS", 500)
			stats.set_int(MPX .. "ZR380_MG50_HELDTIME", 5963259)
			stats.set_int(MPX .. "ZR380_MG50_ENEMY_KILLS", 500)
			stats.set_int(MPX .. "SLAMVAN4_MG50_KILLS", 500)
			stats.set_int(MPX .. "SLAMVAN4_MG50_DEATHS", 100)
			stats.set_int(MPX .. "SLAMVAN4_MG50_SHOTS", 500)
			stats.set_int(MPX .. "SLAMVAN4_MG50_HITS", 500)
			stats.set_int(MPX .. "SLAMVAN4_MG50_HEADSHOTS", 500)
			stats.set_int(MPX .. "SLAMVAN4_MG50_HELDTIME", 5963259)
			stats.set_int(MPX .. "SLAMVAN4_MG50_ENEMY_KILLS", 500)
			stats.set_int(MPX .. "SLAMVAN5_MG50_KILLS", 500)
			stats.set_int(MPX .. "SLAMVAN5_MG50_DEATHS", 100)
			stats.set_int(MPX .. "SLAMVAN5_MG50_SHOTS", 500)
			stats.set_int(MPX .. "SLAMVAN5_MG50_HITS", 500)
			stats.set_int(MPX .. "SLAMVAN5_MG50_HEADSHOTS", 500)
			stats.set_int(MPX .. "SLAMVAN5_MG50_HELDTIME", 5963259)
			stats.set_int(MPX .. "SLAMVAN5_MG50_ENEMY_KILLS", 500)
			stats.set_int(MPX .. "SLAMVAN5_LAS_KILLS", 500)
			stats.set_int(MPX .. "SLAMVAN5_LAS_DEATHS", 100)
			stats.set_int(MPX .. "SLAMVAN5_LAS_SHOTS", 500)
			stats.set_int(MPX .. "SLAMVAN5_LAS_HITS", 500)
			stats.set_int(MPX .. "SLAMVAN5_LAS_HEADSHOTS", 500)
			stats.set_int(MPX .. "SLAMVAN5_LAS_HELDTIME", 5963259)
			stats.set_int(MPX .. "SLAMVAN5_LAS_ENEMY_KILLS", 500)
			stats.set_int(MPX .. "SLAMVAN6_MG50_KILLS", 500)
			stats.set_int(MPX .. "SLAMVAN6_MG50_DEATHS", 100)
			stats.set_int(MPX .. "SLAMVAN6_MG50_SHOTS", 500)
			stats.set_int(MPX .. "SLAMVAN6_MG50_HITS", 500)
			stats.set_int(MPX .. "SLAMVAN6_MG50_HEADSHOTS", 500)
			stats.set_int(MPX .. "SLAMVAN6_MG50_HELDTIME", 5963259)
			stats.set_int(MPX .. "SLAMVAN6_MG50_ENEMY_KILLS", 500)
			stats.set_int(MPX .. "SCARAB_MG50_KILLS", 500)
			stats.set_int(MPX .. "SCARAB_MG50_DEATHS", 100)
			stats.set_int(MPX .. "SCARAB_MG50_SHOTS", 500)
			stats.set_int(MPX .. "SCARAB_MG50_HITS", 500)
			stats.set_int(MPX .. "SCARAB_MG50_HEADSHOTS", 500)
			stats.set_int(MPX .. "SCARAB_MG50_HELDTIME", 5963259)
			stats.set_int(MPX .. "SCARAB_MG50_ENEMY_KILLS", 500)
			stats.set_int(MPX .. "SCARAB2_MG50_KILLS", 500)
			stats.set_int(MPX .. "SCARAB2_MG50_DEATHS", 100)
			stats.set_int(MPX .. "SCARAB2_MG50_SHOTS", 500)
			stats.set_int(MPX .. "SCARAB2_MG50_HITS", 500)
			stats.set_int(MPX .. "SCARAB2_MG50_HEADSHOTS", 500)
			stats.set_int(MPX .. "SCARAB2_MG50_HELDTIME", 5963259)
			stats.set_int(MPX .. "SCARAB2_MG50_ENEMY_KILLS", 500)
			stats.set_int(MPX .. "SCARAB2_LAS_KILLS", 500)
			stats.set_int(MPX .. "SCARAB2_LAS_DEATHS", 100)
			stats.set_int(MPX .. "SCARAB2_LAS_SHOTS", 500)
			stats.set_int(MPX .. "SCARAB2_LAS_HITS", 500)
			stats.set_int(MPX .. "SCARAB2_LAS_HEADSHOTS", 500)
			stats.set_int(MPX .. "SCARAB2_LAS_HELDTIME", 5963259)
			stats.set_int(MPX .. "SCARAB2_LAS_ENEMY_KILLS", 500)
			stats.set_int(MPX .. "SCARAB3_MG50_KILLS", 500)
			stats.set_int(MPX .. "SCARAB3_MG50_DEATHS", 100)
			stats.set_int(MPX .. "SCARAB3_MG50_SHOTS", 500)
			stats.set_int(MPX .. "SCARAB3_MG50_HITS", 500)
			stats.set_int(MPX .. "SCARAB3_MG50_HEADSHOTS", 500)
			stats.set_int(MPX .. "SCARAB3_MG50_HELDTIME", 5963259)
			stats.set_int(MPX .. "SCARAB3_MG50_ENEMY_KILLS", 500)
			stats.set_int(MPX .. "MONSTER3_KIN_KILLS", 500)
			stats.set_int(MPX .. "MONSTER3_KIN_DEATHS", 100)
			stats.set_int(MPX .. "MONSTER3_KIN_SHOTS", 500)
			stats.set_int(MPX .. "MONSTER3_KIN_HITS", 500)
			stats.set_int(MPX .. "MONSTER3_KIN_HELDTIME", 5963259)
			stats.set_int(MPX .. "MONSTER3_KIN_ENEMY_KILL", 500)
			stats.set_int(MPX .. "MONSTER4_KIN_KILLS", 500)
			stats.set_int(MPX .. "MONSTER4_KIN_DEATHS", 100)
			stats.set_int(MPX .. "MONSTER4_KIN_SHOTS", 500)
			stats.set_int(MPX .. "MONSTER4_KIN_HITS", 500)
			stats.set_int(MPX .. "MONSTER4_KIN_HELDTIME", 5963259)
			stats.set_int(MPX .. "MONSTER4_KIN_ENEMY_KILLS", 500)
			stats.set_int(MPX .. "MONSTER5_KIN_KILLS", 500)
			stats.set_int(MPX .. "MONSTER5_KIN_DEATHS", 100)
			stats.set_int(MPX .. "MONSTER5_KIN_SHOTS", 500)
			stats.set_int(MPX .. "MONSTER5_KIN_HITS", 500)
			stats.set_int(MPX .. "MONSTER5_KIN_HELDTIME", 5963259)
			stats.set_int(MPX .. "MONSTER5_KIN_ENEMY_KILLS", 500)
			stats.set_int(MPX .. "ISSI4_MG50_KILLS", 500)
			stats.set_int(MPX .. "ISSI4_MG50_DEATHS", 100)
			stats.set_int(MPX .. "ISSI4_MG50_SHOTS", 500)
			stats.set_int(MPX .. "ISSI4_MG50_HITS", 500)
			stats.set_int(MPX .. "ISSI4_MG50_HEADSHOTS", 500)
			stats.set_int(MPX .. "ISSI4_MG50_HELDTIME", 5963259)
			stats.set_int(MPX .. "ISSI4_MG50_ENEMY_KILLS", 500)
			stats.set_int(MPX .. "ISSI4_KIN_KILLS", 500)
			stats.set_int(MPX .. "ISSI4_KIN_DEATHS", 100)
			stats.set_int(MPX .. "ISSI4_KIN_SHOTS", 500)
			stats.set_int(MPX .. "ISSI4_KIN_HITS", 500)
			stats.set_int(MPX .. "ISSI4_KIN_HELDTIME", 5963259)
			stats.set_int(MPX .. "ISSI4_KIN_ENEMY_KILLS", 500)
			stats.set_int(MPX .. "ISSI5_MG50_KILLS", 500)
			stats.set_int(MPX .. "ISSI5_MG50_DEATHS", 100)
			stats.set_int(MPX .. "ISSI5_MG50_SHOTS", 500)
			stats.set_int(MPX .. "ISSI5_MG50_HITS", 500)
			stats.set_int(MPX .. "ISSI5_MG50_HEADSHOTS", 500)
			stats.set_int(MPX .. "ISSI5_MG50_HELDTIME", 5963259)
			stats.set_int(MPX .. "ISSI5_MG50_ENEMY_KILLS", 500)
			stats.set_int(MPX .. "ISSI5_LAS_KILLS", 500)
			stats.set_int(MPX .. "ISSI5_LAS_DEATHS", 100)
			stats.set_int(MPX .. "ISSI5_LAS_SHOTS", 500)
			stats.set_int(MPX .. "ISSI5_LAS_HITS", 500)
			stats.set_int(MPX .. "ISSI5_LAS_HEADSHOTS", 500)
			stats.set_int(MPX .. "ISSI5_LAS_HELDTIME", 5963259)
			stats.set_int(MPX .. "ISSI5_LAS_ENEMY_KILLS", 500)
			stats.set_int(MPX .. "ISSI5_KIN_KILLS", 500)
			stats.set_int(MPX .. "ISSI5_KIN_DEATHS", 100)
			stats.set_int(MPX .. "ISSI5_KIN_SHOTS", 500)
			stats.set_int(MPX .. "ISSI5_KIN_HITS", 500)
			stats.set_int(MPX .. "ISSI5_KIN_HELDTIME", 5963259)
			stats.set_int(MPX .. "ISSI5_KIN_ENEMY_KILLS", 500)
			stats.set_int(MPX .. "ISSI6_MG50_KILLS", 500)
			stats.set_int(MPX .. "ISSI6_MG50_DEATHS", 100)
			stats.set_int(MPX .. "ISSI6_MG50_SHOTS", 500)
			stats.set_int(MPX .. "ISSI6_MG50_HITS", 500)
			stats.set_int(MPX .. "ISSI6_MG50_HEADSHOTS", 500)
			stats.set_int(MPX .. "ISSI6_MG50_HELDTIME", 5963259)
			stats.set_int(MPX .. "ISSI6_MG50_ENEMY_KILLS", 500)
			stats.set_int(MPX .. "ISSI6_KIN_KILLS", 500)
			stats.set_int(MPX .. "ISSI6_KIN_DEATHS", 100)
			stats.set_int(MPX .. "ISSI6_KIN_SHOTS", 500)
			stats.set_int(MPX .. "ISSI6_KIN_HITS", 500)
			stats.set_int(MPX .. "ISSI6_KIN_HELDTIME", 5963259)
			stats.set_int(MPX .. "ISSI6_KIN_ENEMY_KILLS", 500)
			stats.set_int(MPX .. "ARN_SPECTATOR_KILLS", 500)
			stats.set_int(MPX .. "ARN_LIFETIME_KILLS", 500)
			stats.set_int(MPX .. "ARN_LIFETIME_DEATHS", 100)
			stats.set_int(MPX .. "TRSMALL2_QUAD_KILLS", 500)
			stats.set_int(MPX .. "TRSMALL2_QUAD_DEATHS", 100)
			stats.set_int(MPX .. "TRSMALL2_QUAD_SHOTS", 500)
			stats.set_int(MPX .. "TRSMALL2_QUAD_HITS", 500)
			stats.set_int(MPX .. "TRSMALL2_QUAD_HEADSHOTS", 500)
			stats.set_int(MPX .. "TRSMALL2_QUAD_HELDTIME", 5963259)
			stats.set_int(MPX .. "TRSMALL2_QUAD_ENEMY_KILLS", 500)
			stats.set_int(MPX .. "TRSMALL2_DUAL_KILLS", 500)
			stats.set_int(MPX .. "TRSMALL2_DUAL_DEATHS", 100)
			stats.set_int(MPX .. "TRSMALL2_DUAL_SHOTS", 500)
			stats.set_int(MPX .. "TRSMALL2_DUAL_HITS", 500)
			stats.set_int(MPX .. "TRSMALL2_DUAL_HELDTIME", 5963259)
			stats.set_int(MPX .. "TRSMALL2_DUAL_ENEMY_KILLS", 500)
			stats.set_int(MPX .. "TRSMALL2_MISS_KILLS", 500)
			stats.set_int(MPX .. "TRSMALL2_MISS_DEATHS", 100)
			stats.set_int(MPX .. "TRSMALL2_MISS_SHOTS", 500)
			stats.set_int(MPX .. "TRSMALL2_MISS_HITS", 500)
			stats.set_int(MPX .. "TRSMALL2_MISS_HELDTIME", 5963259)
			stats.set_int(MPX .. "TRSMALL2_MISS_ENEMY_KILLS", 500)
			stats.set_int(MPX .. "TRLARGE_CANNON_KILLS", 500)
			stats.set_int(MPX .. "TRLARGE_CANNON_DEATHS", 100)
			stats.set_int(MPX .. "TRLARGE_CANNON_SHOTS", 500)
			stats.set_int(MPX .. "TRLARGE_CANNON_HITS", 500)
			stats.set_int(MPX .. "TRLARGE_CANNON_HELDTIME", 5963259)
			stats.set_int(MPX .. "TRLARGE_CANNON_ENEMY_KILLS", 500)
			stats.set_int(MPX .. "POUNDER2_MINI_KILLS", 500)
			stats.set_int(MPX .. "POUNDER2_MINI_DEATHS", 100)
			stats.set_int(MPX .. "POUNDER2_MINI_SHOTS", 500)
			stats.set_int(MPX .. "POUNDER2_MINI_HITS", 500)
			stats.set_int(MPX .. "POUNDER2_MINI_HEADSHOTS", 500)
			stats.set_int(MPX .. "POUNDER2_MINI_HELDTIME", 5963259)
			stats.set_int(MPX .. "POUNDER2_MINI_ENEMY_KILLS", 500)
			stats.set_int(MPX .. "POUNDER2_MISS_KILLS", 500)
			stats.set_int(MPX .. "POUNDER2_MISS_DEATHS", 100)
			stats.set_int(MPX .. "POUNDER2_MISS_SHOTS", 500)
			stats.set_int(MPX .. "POUNDER2_MISS_HITS", 500)
			stats.set_int(MPX .. "POUNDER2_MISS_HEADSHOTS", 500)
			stats.set_int(MPX .. "POUNDER2_MISS_HELDTIME", 5963259)
			stats.set_int(MPX .. "POUNDER2_MISS_ENEMY_KILLS", 500)
			stats.set_int(MPX .. "POUNDER2_BARR_KILLS", 500)
			stats.set_int(MPX .. "POUNDER2_BARR_DEATHS", 100)
			stats.set_int(MPX .. "POUNDER2_BARR_SHOTS", 500)
			stats.set_int(MPX .. "POUNDER2_BARR_HITS", 500)
			stats.set_int(MPX .. "POUNDER2_BARR_HELDTIME", 5963259)
			stats.set_int(MPX .. "POUNDER2_BARR_ENEMY_KILLS", 500)
			stats.set_int(MPX .. "POUNDER2_GL_KILLS", 500)
			stats.set_int(MPX .. "POUNDER2_GL_DEATHS", 100)
			stats.set_int(MPX .. "POUNDER2_GL_SHOTS", 500)
			stats.set_int(MPX .. "POUNDER2_GL_HITS", 500)
			stats.set_int(MPX .. "POUNDER2_GL_HELDTIME", 5963259)
			stats.set_int(MPX .. "POUNDER2_GL_ENEMY_KILLS", 500)
			stats.set_int(MPX .. "SCRAMJET_MG_KILLS", 500)
			stats.set_int(MPX .. "SCRAMJET_MG_DEATHS", 100)
			stats.set_int(MPX .. "SCRAMJET_MG_SHOTS", 500)
			stats.set_int(MPX .. "SCRAMJET_MG_HITS", 500)
			stats.set_int(MPX .. "SCRAMJET_MG_HEADSHOTS", 500)
			stats.set_int(MPX .. "SCRAMJET_MG_HELDTIME", 5963259)
			stats.set_int(MPX .. "SCRAMJET_MG_ENEMY_KILLS", 500)
			stats.set_int(MPX .. "SCRAMJET_MISS_KILLS", 500)
			stats.set_int(MPX .. "SCRAMJET_MISS_DEATHS", 100)
			stats.set_int(MPX .. "SCRAMJET_MISS_SHOTS", 500)
			stats.set_int(MPX .. "SCRAMJET_MISS_HITS", 500)
			stats.set_int(MPX .. "SCRAMJET_MISS_HELDTIME", 5963259)
			stats.set_int(MPX .. "SCRAMJET_MISS_ENEMY_KILLS", 500)
			stats.set_int(MPX .. "SPEEDO4_MG_KILLS", 500)
			stats.set_int(MPX .. "SPEEDO4_MG_DEATHS", 100)
			stats.set_int(MPX .. "SPEEDO4_MG_SHOTS", 500)
			stats.set_int(MPX .. "SPEEDO4_MG_HITS", 500)
			stats.set_int(MPX .. "SPEEDO4_MG_HEADSHOTS", 500)
			stats.set_int(MPX .. "SPEEDO4_MG_HELDTIME", 5963259)
			stats.set_int(MPX .. "SPEEDO4_MG_ENEMY_KILLS", 500)
			stats.set_int(MPX .. "SPEEDO4_TURR_KILLS", 500)
			stats.set_int(MPX .. "SPEEDO4_TURR_DEATHS", 100)
			stats.set_int(MPX .. "SPEEDO4_TURR_SHOTS", 500)
			stats.set_int(MPX .. "SPEEDO4_TURR_HITS", 500)
			stats.set_int(MPX .. "SPEEDO4_TURR_HEADSHOTS", 500)
			stats.set_int(MPX .. "SPEEDO4_TURR_HELDTIME", 5963259)
			stats.set_int(MPX .. "SPEEDO4_TURR_ENEMY_KILLS", 500)
			stats.set_int(MPX .. "SPEEDO4_MINI_KILLS", 500)
			stats.set_int(MPX .. "SPEEDO4_MINI_DEATHS", 100)
			stats.set_int(MPX .. "SPEEDO4_MINI_SHOTS", 500)
			stats.set_int(MPX .. "SPEEDO4_MINI_HITS", 500)
			stats.set_int(MPX .. "SPEEDO4_MINI_HEADSHOTS", 500)
			stats.set_int(MPX .. "SPEEDO4_MINI_HELDTIME", 5963259)
			stats.set_int(MPX .. "SPEEDO4_MINI_ENEMY_KILLS", 500)
			stats.set_int(MPX .. "STRIKEFORCE_BAR_KILLS", 500)
			stats.set_int(MPX .. "STRIKEFORCE_BAR_DEATHS", 100)
			stats.set_int(MPX .. "STRIKEFORCE_BAR_SHOTS", 500)
			stats.set_int(MPX .. "STRIKEFORCE_BAR_HITS", 500)
			stats.set_int(MPX .. "STRIKEFORCE_BAR_HELDTIME", 5963259)
			stats.set_int(MPX .. "STRIKEFORCE_BAR_ENEMY_KILLS", 500)
			stats.set_int(MPX .. "STRIKEFORCE_CAN_KILLS", 500)
			stats.set_int(MPX .. "STRIKEFORCE_CAN_DEATHS", 100)
			stats.set_int(MPX .. "STRIKEFORCE_CAN_SHOTS", 500)
			stats.set_int(MPX .. "STRIKEFORCE_CAN_HITS", 500)
			stats.set_int(MPX .. "STRIKEFORCE_CAN_HELDTIME", 5963259)
			stats.set_int(MPX .. "STRIKEFORCE_CAN_ENEMY_KILLS", 500)
			stats.set_int(MPX .. "STRIKEFORCE_MIS_KILLS", 500)
			stats.set_int(MPX .. "STRIKEFORCE_MIS_DEATHS", 100)
			stats.set_int(MPX .. "STRIKEFORCE_MIS_SHOTS", 500)
			stats.set_int(MPX .. "STRIKEFORCE_MIS_HITS", 500)
			stats.set_int(MPX .. "STRIKEFORCE_MIS_HELDTIME", 5963259)
			stats.set_int(MPX .. "STRIKEFORCE_MIS_ENEMY_KILLS", 500)
			stats.set_int(MPX .. "TERBYTE_MISS_KILLS", 500)
			stats.set_int(MPX .. "TERBYTE_MISS_DEATHS", 100)
			stats.set_int(MPX .. "TERBYTE_MISS_SHOTS", 500)
			stats.set_int(MPX .. "TERBYTE_MISS_HITS", 500)
			stats.set_int(MPX .. "TERBYTE_MISS_HELDTIME", 5963259)
			stats.set_int(MPX .. "TERBYTE_MISS_ENEMY_KILLS", 500)
			stats.set_int(MPX .. "TERBYTE_HMISS_KILLS", 500)
			stats.set_int(MPX .. "TERBYTE_HMISS_DEATHS", 100)
			stats.set_int(MPX .. "TERBYTE_HMISS_SHOTS", 500)
			stats.set_int(MPX .. "TERBYTE_HMISS_HITS", 500)
			stats.set_int(MPX .. "TERBYTE_HMISS_HELDTIME", 5963259)
			stats.set_int(MPX .. "TERBYTE_HMISS_ENEMY_KILLS", 500)
			stats.set_int(MPX .. "CARACARA_MINI_KILLS", 500)
			stats.set_int(MPX .. "CARACARA_MINI_DEATHS", 100)
			stats.set_int(MPX .. "CARACARA_MINI_SHOTS", 500)
			stats.set_int(MPX .. "CARACARA_MINI_HITS", 500)
			stats.set_int(MPX .. "CARACARA_MINI_HEADSHOTS", 500)
			stats.set_int(MPX .. "CARACARA_MINI_HELDTIME", 5963259)
			stats.set_int(MPX .. "CARACARA_MINI_ENEMY_KILLS", 500)
			stats.set_int(MPX .. "CARACARA_TURR_KILLS", 500)
			stats.set_int(MPX .. "CARACARA_TURR_DEATHS", 100)
			stats.set_int(MPX .. "CARACARA_TURR_SHOTS", 500)
			stats.set_int(MPX .. "CARACARA_TURR_HITS", 500)
			stats.set_int(MPX .. "CARACARA_TURR_HEADSHOTS", 500)
			stats.set_int(MPX .. "CARACARA_TURR_HELDTIME", 5963259)
			stats.set_int(MPX .. "CARACARA_TURR_ENEMY_KILLS", 500)
			stats.set_int(MPX .. "SPARROW_MINI_KILLS", 500)
			stats.set_int(MPX .. "SPARROW_MINI_DEATHS", 100)
			stats.set_int(MPX .. "SPARROW_MINI_SHOTS", 500)
			stats.set_int(MPX .. "SPARROW_MINI_HITS", 500)
			stats.set_int(MPX .. "SPARROW_MINI_HEADSHOTS", 500)
			stats.set_int(MPX .. "SPARROW_MINI_HELDTIME", 5963259)
			stats.set_int(MPX .. "SPARROW_MINI_ENEMY_KILLS", 500)
			stats.set_int(MPX .. "SPARROW_ROCKET_KILLS", 500)
			stats.set_int(MPX .. "SPARROW_ROCKET_DEATHS", 100)
			stats.set_int(MPX .. "SPARROW_ROCKET_SHOTS", 500)
			stats.set_int(MPX .. "SPARROW_ROCKET_HITS", 500)
			stats.set_int(MPX .. "SPARROW_ROCKET_HELDTIME", 5963259)
			stats.set_int(MPX .. "SPARROW_ROCKET_ENEMY_KILLS", 500)
			stats.set_int(MPX .. "APC_CANN_KILLS", 500)
			stats.set_int(MPX .. "APC_CANN_DEATHS", 100)
			stats.set_int(MPX .. "APC_CANN_SHOTS", 500)
			stats.set_int(MPX .. "APC_CANN_HITS", 500)
			stats.set_int(MPX .. "APC_CANN_HELDTIME", 5963259)
			stats.set_int(MPX .. "APC_CANN_ENEMY_KILLS", 500)
			stats.set_int(MPX .. "APC_MISS_KILLS", 500)
			stats.set_int(MPX .. "APC_MISS_DEATHS", 100)
			stats.set_int(MPX .. "APC_MISS_SHOTS", 500)
			stats.set_int(MPX .. "APC_MISS_HITS", 500)
			stats.set_int(MPX .. "APC_MISS_HELDTIME", 5963259)
			stats.set_int(MPX .. "APC_MISS_ENEMY_KILLS", 500)
			stats.set_int(MPX .. "APC_MG_KILLS", 500)
			stats.set_int(MPX .. "APC_MG_DEATHS", 100)
			stats.set_int(MPX .. "APC_MG_SHOTS", 500)
			stats.set_int(MPX .. "APC_MG_HITS", 500)
			stats.set_int(MPX .. "APC_MG_HEADSHOTS", 500)
			stats.set_int(MPX .. "APC_MG_HELDTIME", 5963259)
			stats.set_int(MPX .. "APC_MG_ENEMY_KILLS", 500)
			stats.set_int(MPX .. "ARDENT_MG_KILLS", 500)
			stats.set_int(MPX .. "ARDENT_MG_DEATHS", 100)
			stats.set_int(MPX .. "ARDENT_MG_SHOTS", 500)
			stats.set_int(MPX .. "ARDENT_MG_HITS", 500)
			stats.set_int(MPX .. "ARDENT_MG_HEADSHOTS", 500)
			stats.set_int(MPX .. "ARDENT_MG_HELDTIME", 5963259)
			stats.set_int(MPX .. "ARDENT_MG_ENEMY_KILLS", 500)
			stats.set_int(MPX .. "DUNE3_MG_KILLS", 500)
			stats.set_int(MPX .. "DUNE3_MG_DEATHS", 100)
			stats.set_int(MPX .. "DUNE3_MG_SHOTS", 500)
			stats.set_int(MPX .. "DUNE3_MG_HITS", 500)
			stats.set_int(MPX .. "DUNE3_MG_HEADSHOTS", 500)
			stats.set_int(MPX .. "DUNE3_MG_HELDTIME", 5963259)
			stats.set_int(MPX .. "DUNE3_MG_ENEMY_KILLS", 500)
			stats.set_int(MPX .. "DUNE3_GL_KILLS", 500)
			stats.set_int(MPX .. "DUNE3_GL_DEATHS", 100)
			stats.set_int(MPX .. "DUNE3_GL_SHOTS", 500)
			stats.set_int(MPX .. "DUNE3_GL_HITS", 500)
			stats.set_int(MPX .. "DUNE3_GL_HELDTIME", 5963259)
			stats.set_int(MPX .. "DUNE3_GL_ENEMY_KILLS", 500)
			stats.set_int(MPX .. "DUNE3_MINI_KILLS", 500)
			stats.set_int(MPX .. "DUNE3_MINI_DEATHS", 100)
			stats.set_int(MPX .. "DUNE3_MINI_SHOTS", 500)
			stats.set_int(MPX .. "DUNE3_MINI_HITS", 500)
			stats.set_int(MPX .. "DUNE3_MINI_HEADSHOTS", 500)
			stats.set_int(MPX .. "DUNE3_MINI_HELDTIME", 5963259)
			stats.set_int(MPX .. "DUNE3_MINI_ENEMY_KILLS", 500)
			stats.set_int(MPX .. "HALFTRACK_DUAL_KILLS", 500)
			stats.set_int(MPX .. "HALFTRACK_DUAL_DEATHS", 100)
			stats.set_int(MPX .. "HALFTRACK_DUAL_SHOTS", 500)
			stats.set_int(MPX .. "HALFTRACK_DUAL_HITS", 500)
			stats.set_int(MPX .. "HALFTRACK_DUAL_HEADSHOTS", 500)
			stats.set_int(MPX .. "HALFTRACK_DUAL_HELDTIME", 5963259)
			stats.set_int(MPX .. "HALFTRACK_DUAL_ENEMY_KILLS", 500)
			stats.set_int(MPX .. "HALFTRACK_QUAD_KILLS", 500)
			stats.set_int(MPX .. "HALFTRACK_QUAD_DEATHS", 100)
			stats.set_int(MPX .. "HALFTRACK_QUAD_SHOTS", 500)
			stats.set_int(MPX .. "HALFTRACK_QUAD_HITS", 500)
			stats.set_int(MPX .. "HALFTRACK_QUAD_HEADSHOTS", 500)
			stats.set_int(MPX .. "HALFTRACK_QUAD_HELDTIME", 5963259)
			stats.set_int(MPX .. "HALFTRACK_QUAD_ENEMY_KILLS", 500)
			stats.set_int(MPX .. "INSURGENT3_MINI_KILLS", 500)
			stats.set_int(MPX .. "INSURGENT3_MINI_DEATHS", 100)
			stats.set_int(MPX .. "INSURGENT3_MINI_SHOTS", 500)
			stats.set_int(MPX .. "INSURGENT3_MINI_HITS", 500)
			stats.set_int(MPX .. "INSURGENT3_MINI_HEADSHOTS", 500)
			stats.set_int(MPX .. "INSURGENT3_MINI_HELDTIME", 5963259)
			stats.set_int(MPX .. "INSURGENT3_MINI_ENEMY_KILLS", 500)
			stats.set_int(MPX .. "INSURGENT3_TURR_KILLS", 500)
			stats.set_int(MPX .. "INSURGENT3_TURR_DEATHS", 100)
			stats.set_int(MPX .. "INSURGENT3_TURR_SHOTS", 500)
			stats.set_int(MPX .. "INSURGENT3_TURR_HITS", 500)
			stats.set_int(MPX .. "INSURGENT3_TURR_HEADSHOTS", 500)
			stats.set_int(MPX .. "INSURGENT3_TURR_HELDTIME", 5963259)
			stats.set_int(MPX .. "INSURGENT3_TURR_ENEMY_KILLS", 500)
			stats.set_int(MPX .. "NIGHTSHARK_MG_KILLS", 500)
			stats.set_int(MPX .. "NIGHTSHARK_MG_DEATHS", 100)
			stats.set_int(MPX .. "NIGHTSHARK_MG_SHOTS", 500)
			stats.set_int(MPX .. "NIGHTSHARK_MG_HITS", 500)
			stats.set_int(MPX .. "NIGHTSHARK_MG_HEADSHOTS", 500)
			stats.set_int(MPX .. "NIGHTSHARK_MG_HELDTIME", 5963259)
			stats.set_int(MPX .. "NIGHTSHARK_MG_ENEMY_KILLS", 500)
			stats.set_int(MPX .. "OPPRESSOR_MG_KILLS", 500)
			stats.set_int(MPX .. "OPPRESSOR_MG_DEATHS", 100)
			stats.set_int(MPX .. "OPPRESSOR_MG_SHOTS", 500)
			stats.set_int(MPX .. "OPPRESSOR_MG_HITS", 500)
			stats.set_int(MPX .. "OPPRESSOR_MG_HEADSHOTS", 500)
			stats.set_int(MPX .. "OPPRESSOR_MG_HELDTIME", 5963259)
			stats.set_int(MPX .. "OPPRESSOR_MG_ENEMY_KILLS", 500)
			stats.set_int(MPX .. "OPPRESSOR_MISS_KILLS", 500)
			stats.set_int(MPX .. "OPPRESSOR_MISS_DEATHS", 100)
			stats.set_int(MPX .. "OPPRESSOR_MISS_SHOTS", 500)
			stats.set_int(MPX .. "OPPRESSOR_MISS_HITS", 500)
			stats.set_int(MPX .. "OPPRESSOR_MISS_HELDTIME", 5963259)
			stats.set_int(MPX .. "OPPRESSOR_MISS_ENEMY_KILLS", 500)
			stats.set_int(MPX .. "TAMPA3_MISS_KILLS", 500)
			stats.set_int(MPX .. "TAMPA3_MISS_DEATHS", 100)
			stats.set_int(MPX .. "TAMPA3_MISS_SHOTS", 500)
			stats.set_int(MPX .. "TAMPA3_MISS_HITS", 500)
			stats.set_int(MPX .. "TAMPA3_MISS_HELDTIME", 5963259)
			stats.set_int(MPX .. "TAMPA3_MISS_ENEMY_KILLS", 500)
			stats.set_int(MPX .. "TAMPA3_MORT_KILLS", 500)
			stats.set_int(MPX .. "TAMPA3_MORT_DEATHS", 100)
			stats.set_int(MPX .. "TAMPA3_MORT_SHOTS", 500)
			stats.set_int(MPX .. "TAMPA3_MORT_HITS", 500)
			stats.set_int(MPX .. "TAMPA3_MORT_HELDTIME", 5963259)
			stats.set_int(MPX .. "TAMPA3_MORT_ENEMY_KILLS", 500)
			stats.set_int(MPX .. "TAMPA3_FMINI_KILLS", 500)
			stats.set_int(MPX .. "TAMPA3_FMINI_DEATHS", 100)
			stats.set_int(MPX .. "TAMPA3_FMINI_SHOTS", 500)
			stats.set_int(MPX .. "TAMPA3_FMINI_HITS", 500)
			stats.set_int(MPX .. "TAMPA3_FMINI_HEADSHOTS", 500)
			stats.set_int(MPX .. "TAMPA3_FMINI_HELDTIME", 5963259)
			stats.set_int(MPX .. "TAMPA3_FMINI_ENEMY_KILLS", 500)
			stats.set_int(MPX .. "TAMPA3_DMINI_KILLS", 500)
			stats.set_int(MPX .. "TAMPA3_DMINI_DEATHS", 100)
			stats.set_int(MPX .. "TAMPA3_DMINI_SHOTS", 500)
			stats.set_int(MPX .. "TAMPA3_DMINI_HITS", 500)
			stats.set_int(MPX .. "TAMPA3_DMINI_HEADSHOTS", 500)
			stats.set_int(MPX .. "TAMPA3_DMINI_HELDTIME", 5963259)
			stats.set_int(MPX .. "TAMPA3_DMINI_ENEMY_KILLS", 500)
			stats.set_int(MPX .. "TECHNICAL3_MINI_KILLS", 500)
			stats.set_int(MPX .. "TECHNICAL3_MINI_DEATHS", 100)
			stats.set_int(MPX .. "TECHNICAL3_MINI_SHOTS", 500)
			stats.set_int(MPX .. "TECHNICAL3_MINI_HITS", 500)
			stats.set_int(MPX .. "TECHNICAL3_MINI_HEADSHOTS", 500)
			stats.set_int(MPX .. "TECHNICAL3_MINI_HELDTIME", 5963259)
			stats.set_int(MPX .. "TECHNICAL3_MINI_ENEMY_KILLS", 500)
			stats.set_int(MPX .. "TECHNICAL3_TURR_KILLS", 500)
			stats.set_int(MPX .. "TECHNICAL3_TURR_DEATHS", 100)
			stats.set_int(MPX .. "TECHNICAL3_TURR_SHOTS", 500)
			stats.set_int(MPX .. "TECHNICAL3_TURR_HITS", 500)
			stats.set_int(MPX .. "TECHNICAL3_TURR_HEADSHOTS", 500)
			stats.set_int(MPX .. "TECHNICAL3_TURR_HELDTIME", 5963259)
			stats.set_int(MPX .. "TECHNICAL3_TURR_ENEMY_KILLS", 500)
			stats.set_int(MPX .. "KHANJALI_ROCKET_KILLS", 500)
			stats.set_int(MPX .. "KHANJALI_ROCKET_DEATHS", 100)
			stats.set_int(MPX .. "KHANJALI_ROCKET_SHOTS", 500)
			stats.set_int(MPX .. "KHANJALI_ROCKET_HITS", 500)
			stats.set_int(MPX .. "KHANJALI_ROCKET_HELDTIME", 5963259)
			stats.set_int(MPX .. "KHANJALI_ROCKET_ENEMY_KILLS", 500)
			stats.set_int(MPX .. "KHANJALI_HCANN_KILLS", 500)
			stats.set_int(MPX .. "KHANJALI_HCANN_DEATHS", 100)
			stats.set_int(MPX .. "KHANJALI_HCANN_SHOTS", 500)
			stats.set_int(MPX .. "KHANJALI_HCANN_HITS", 500)
			stats.set_int(MPX .. "KHANJALI_HCANN_HELDTIME", 5963259)
			stats.set_int(MPX .. "KHANJALI_HCANN_ENEMY_KILLS", 500)
			stats.set_int(MPX .. "KHANJALI_MG_KILLS", 500)
			stats.set_int(MPX .. "KHANJALI_MG_DEATHS", 100)
			stats.set_int(MPX .. "KHANJALI_MG_SHOTS", 500)
			stats.set_int(MPX .. "KHANJALI_MG_HITS", 500)
			stats.set_int(MPX .. "KHANJALI_MG_HEADSHOTS", 500)
			stats.set_int(MPX .. "KHANJALI_MG_HELDTIME", 5963259)
			stats.set_int(MPX .. "KHANJALI_MG_ENEMY_KILLS", 500)
			stats.set_int(MPX .. "KHANJALI_GL_KILLS", 500)
			stats.set_int(MPX .. "KHANJALI_GL_DEATHS", 100)
			stats.set_int(MPX .. "KHANJALI_GL_SHOTS", 500)
			stats.set_int(MPX .. "KHANJALI_GL_HITS", 500)
			stats.set_int(MPX .. "KHANJALI_GL_HELDTIME", 5963259)
			stats.set_int(MPX .. "KHANJALI_GL_ENEMY_KILLS", 500)
			stats.set_int(MPX .. "REVOLTER_MG_KILLS", 500)
			stats.set_int(MPX .. "REVOLTER_MG_DEATHS", 100)
			stats.set_int(MPX .. "REVOLTER_MG_SHOTS", 500)
			stats.set_int(MPX .. "REVOLTER_MG_HITS", 500)
			stats.set_int(MPX .. "REVOLTER_MG_HEADSHOTS", 500)
			stats.set_int(MPX .. "REVOLTER_MG_HELDTIME", 5963259)
			stats.set_int(MPX .. "REVOLTER_MG_ENEMY_KILLS", 500)
			stats.set_int(MPX .. "SAVESTRA_MG_KILLS", 500)
			stats.set_int(MPX .. "SAVESTRA_MG_DEATHS", 100)
			stats.set_int(MPX .. "SAVESTRA_MG_SHOTS", 500)
			stats.set_int(MPX .. "SAVESTRA_MG_HITS", 500)
			stats.set_int(MPX .. "SAVESTRA_MG_HEADSHOTS", 500)
		end)
		JSXX:add_sameline()   ------同行
		JSXX:add_button("统计数据部分 4", function()
			stats.set_int("MPPLY_NUM_CAPTURES_CREATED", 100)
			stats.set_int("MPPLY_PILOT_SCHOOL_MEDAL_0", -1)
			stats.set_int("MPPLY_PILOT_SCHOOL_MEDAL_1", -1)
			stats.set_int("MPPLY_PILOT_SCHOOL_MEDAL_2", -1)
			stats.set_int("MPPLY_PILOT_SCHOOL_MEDAL_3", -1)
			stats.set_int("MPPLY_PILOT_SCHOOL_MEDAL_4", -1)
			stats.set_int("MPPLY_PILOT_SCHOOL_MEDAL_5", -1)
			stats.set_int("MPPLY_PILOT_SCHOOL_MEDAL_6", -1)
			stats.set_int("MPPLY_PILOT_SCHOOL_MEDAL_7", -1)
			stats.set_int("MPPLY_PILOT_SCHOOL_MEDAL_8", -1)
			stats.set_int("MPPLY_PILOT_SCHOOL_MEDAL_9", -1)
			stats.set_int("MPPLY_HEIST_ACH_TRACKER", -1)
			stats.set_int("MPPLY_GANGOPS_ALLINORDER", 100)
			stats.set_int("MPPLY_GANGOPS_LOYALTY", 100)
			stats.set_int("MPPLY_GANGOPS_CRIMMASMD", 100)
			stats.set_int("MPPLY_GANGOPS_LOYALTY2", 100)
			stats.set_int("MPPLY_GANGOPS_LOYALTY3", 100)
			stats.set_int("MPPLY_GANGOPS_CRIMMASMD2", 100)
			stats.set_int("MPPLY_GANGOPS_CRIMMASMD3", 100)
			stats.set_int("MPPLY_GANGOPS_SUPPORT", 100)
			stats.set_int("MPPLY_AWD_FM_CR_DM_MADE", 600)
			stats.set_int("MPPLY_AWD_FM_CR_RACES_MADE", 1000)
			stats.set_int("MPPLY_AWD_FM_CR_MISSION_SCORE", 100)
			stats.set_int("MPPLY_TOTAL_RACES_WON", 500)
			stats.set_int("MPPLY_TOTAL_RACES_LOST", 250)
			stats.set_int("MPPLY_TOTAL_CUSTOM_RACES_WON", 500)
			stats.set_int("MPPLY_TOTAL_DEATHMATCH_LOST", 250)
			stats.set_int("MPPLY_TOTAL_DEATHMATCH_WON", 500)
			stats.set_int("MPPLY_TOTAL_TDEATHMATCH_LOST", 250)
			stats.set_int("MPPLY_TOTAL_TDEATHMATCH_WON", 500)
			stats.set_int("MPPLY_SHOOTINGRANGE_WINS", 500)
			stats.set_int("MPPLY_SHOOTINGRANGE_LOSSES", 250)
			stats.set_int("MPPLY_TENNIS_MATCHES_WON", 500)
			stats.set_int("MPPLY_TENNIS_MATCHES_LOST", 250)
			stats.set_int("MPPLY_GOLF_WINS", 500)
			stats.set_int("MPPLY_GOLF_LOSSES", 250)
			stats.set_int("MPPLY_DARTS_TOTAL_WINS", 500)
			stats.set_int("MPPLY_DARTS_TOTAL_MATCHES", 750)
			stats.set_int("MPPLY_SHOOTINGRANGE_TOTAL_MATCH", 800)
			stats.set_int("MPPLY_BJ_WINS", 500)
			stats.set_int("MPPLY_BJ_LOST", 250)
			stats.set_int("MPPLY_RACE_2_POINT_WINS", 500)
			stats.set_int("MPPLY_RACE_2_POINT_LOST", 250)
			stats.set_int("MPPLY_KILLS_PLAYERS", 3593)
			stats.set_int("MPPLY_DEATHS_PLAYER", 1002)
			stats.set_int("MPPLY_MISSIONS_CREATED", 500)
			stats.set_int("MPPLY_LTS_CREATED", 500)
			stats.set_int("MPPLY_AWD_FM_CR_PLAYED_BY_PEEP", 1598)
			stats.set_int("MPPLY_FM_MISSION_LIKES", 1500)
		end)
		JSXX:add_sameline()   ------同行
		JSXX:add_button("Bools 部分 1", function()
			PlayerIndex = globals.get_int(1574918)
			if PlayerIndex == 0 then
				MPX = "MP0_"
			else
				MPX = "MP1_"
			end
			stats.set_bool(MPX .. "AWD_TEEING_OFF", true)
			stats.set_bool(MPX .. "AWD_PARTY_NIGHT", true)
			stats.set_bool(MPX .. "AWD_BILLIONAIRE_GAMES", true)
			stats.set_bool(MPX .. "AWD_HOOD_PASS", true)
			stats.set_bool(MPX .. "AWD_STUDIO_TOUR", true)
			stats.set_bool(MPX .. "AWD_DONT_MESS_DRE", true)
			stats.set_bool(MPX .. "AWD_BACKUP", true)
			stats.set_bool(MPX .. "AWD_SHORTFRANK_1", true)
			stats.set_bool(MPX .. "AWD_SHORTFRANK_2", true)
			stats.set_bool(MPX .. "AWD_SHORTFRANK_3", true)
			stats.set_bool(MPX .. "AWD_CONTR_KILLER", true)
			stats.set_bool(MPX .. "AWD_DOGS_BEST_FRIEND", true)
			stats.set_bool(MPX .. "AWD_MUSIC_STUDIO", true)
			stats.set_bool(MPX .. "AWD_SHORTLAMAR_1", true)
			stats.set_bool(MPX .. "AWD_SHORTLAMAR_2", true)
			stats.set_bool(MPX .. "AWD_SHORTLAMAR_3", true)
			stats.set_bool(MPX .. "BS_FRANKLIN_DIALOGUE_0", true)
			stats.set_bool(MPX .. "BS_FRANKLIN_DIALOGUE_1", true)
			stats.set_bool(MPX .. "BS_FRANKLIN_DIALOGUE_2", true)
			stats.set_bool(MPX .. "BS_IMANI_D_APP_SETUP", true)
			stats.set_bool(MPX .. "BS_IMANI_D_APP_STRAND", true)
			stats.set_bool(MPX .. "BS_IMANI_D_APP_PARTY", true)
			stats.set_bool(MPX .. "BS_IMANI_D_APP_PARTY_2", true)
			stats.set_bool(MPX .. "BS_IMANI_D_APP_PARTY_F", true)
			stats.set_bool(MPX .. "BS_IMANI_D_APP_BILL", true)
			stats.set_bool(MPX .. "BS_IMANI_D_APP_BILL_2", true)
			stats.set_bool(MPX .. "BS_IMANI_D_APP_BILL_F", true)
			stats.set_bool(MPX .. "BS_IMANI_D_APP_HOOD", true)
			stats.set_bool(MPX .. "BS_IMANI_D_APP_HOOD_2", true)
			stats.set_bool(MPX .. "BS_IMANI_D_APP_HOOD_F", true)
			stats.set_bool(MPX .. "AWD_SCOPEOUT", true)
			stats.set_bool(MPX .. "AWD_CREWEDUP", true)
			stats.set_bool(MPX .. "AWD_MOVINGON", true)
			stats.set_bool(MPX .. "AWD_PROMOCAMP", true)
			stats.set_bool(MPX .. "AWD_GUNMAN", true)
			stats.set_bool(MPX .. "AWD_SMASHNGRAB", true)
			stats.set_bool(MPX .. "AWD_INPLAINSI", true)
			stats.set_bool(MPX .. "AWD_UNDETECTED", true)
			stats.set_bool(MPX .. "AWD_ALLROUND", true)
			stats.set_bool(MPX .. "AWD_ELITETHEIF", true)
			stats.set_bool(MPX .. "AWD_PRO", true)
			stats.set_bool(MPX .. "AWD_SUPPORTACT", true)
			stats.set_bool(MPX .. "AWD_SHAFTED", true)
			stats.set_bool(MPX .. "AWD_COLLECTOR", true)
			stats.set_bool(MPX .. "AWD_DEADEYE", true)
			stats.set_bool(MPX .. "AWD_PISTOLSATDAWN", true)
			stats.set_bool(MPX .. "AWD_TRAFFICAVOI", true)
			stats.set_bool(MPX .. "AWD_CANTCATCHBRA", true)
			stats.set_bool(MPX .. "AWD_WIZHARD", true)
			stats.set_bool(MPX .. "AWD_APEESCAP", true)
			stats.set_bool(MPX .. "AWD_MONKEYKIND", true)
			stats.set_bool(MPX .. "AWD_AQUAAPE", true)
			stats.set_bool(MPX .. "AWD_KEEPFAITH", true)
			stats.set_bool(MPX .. "AWD_TRUELOVE", true)
			stats.set_bool(MPX .. "AWD_NEMESIS", true)
			stats.set_bool(MPX .. "AWD_FRIENDZONED", true)
			stats.set_bool(MPX .. "IAP_CHALLENGE_0", true)
			stats.set_bool(MPX .. "IAP_CHALLENGE_1", true)
			stats.set_bool(MPX .. "IAP_CHALLENGE_2v", true)
			stats.set_bool(MPX .. "IAP_CHALLENGE_3", true)
			stats.set_bool(MPX .. "IAP_CHALLENGE_4v", true)
			stats.set_bool(MPX .. "IAP_GOLD_TANK", true)
			stats.set_bool(MPX .. "SCGW_WON_NO_DEATHS", true)
			stats.set_bool(MPX .. "AWD_KINGOFQUB3D", true)
			stats.set_bool(MPX .. "AWD_QUBISM", true)
			stats.set_bool(MPX .. "AWD_QUIBITS", true)
			stats.set_bool(MPX .. "AWD_GODOFQUB3D", true)
			stats.set_bool(MPX .. "AWD_STRAIGHT_TO_VIDEO", true)
			stats.set_bool(MPX .. "AWD_MONKEY_C_MONKEY_DO", true)
			stats.set_bool(MPX .. "AWD_TRAINED_TO_KILL", true)
			stats.set_bool(MPX .. "AWD_DIRECTOR", true)
			stats.set_bool(MPX .. "VCM_FLOW_CS_RSC_SEEN", true)
			stats.set_bool(MPX .. "VCM_FLOW_CS_BWL_SEEN", true)
			stats.set_bool(MPX .. "VCM_FLOW_CS_MTG_SEEN", true)
			stats.set_bool(MPX .. "VCM_FLOW_CS_OIL_SEEN", true)
			stats.set_bool(MPX .. "VCM_FLOW_CS_DEF_SEEN", true)
			stats.set_bool(MPX .. "VCM_FLOW_CS_FIN_SEEN", true)
			stats.set_bool(MPX .. "WAS_CHAR_TRANSFERED", true)
			stats.set_bool(MPX .. "CL_RACE_MODDED_CAR", true)
			stats.set_bool(MPX .. "CL_DRIVE_RALLY", true)
			stats.set_bool(MPX .. "CL_PLAY_GTA_RACE", true)
			stats.set_bool(MPX .. "CL_PLAY_BOAT_RACE", true)
			stats.set_bool(MPX .. "CL_PLAY_FOOT_RACE", true)
			stats.set_bool(MPX .. "CL_PLAY_TEAM_DM", true)
			stats.set_bool(MPX .. "CL_PLAY_VEHICLE_DM", true)
			stats.set_bool(MPX .. "CL_PLAY_MISSION_CONTACT", true)
			stats.set_bool(MPX .. "CL_PLAY_A_PLAYLIST", true)
			stats.set_bool(MPX .. "CL_PLAY_POINT_TO_POINT", true)
			stats.set_bool(MPX .. "CL_PLAY_ONE_ON_ONE_DM", true)
			stats.set_bool(MPX .. "CL_PLAY_ONE_ON_ONE_RACE", true)
			stats.set_bool(MPX .. "CL_SURV_A_BOUNTY", true)
			stats.set_bool(MPX .. "CL_SET_WANTED_LVL_ON_PLAY", true)
			stats.set_bool(MPX .. "CL_GANG_BACKUP_GANGS", true)
			stats.set_bool(MPX .. "CL_GANG_BACKUP_LOST", true)
			stats.set_bool(MPX .. "CL_GANG_BACKUP_VAGOS", true)
			stats.set_bool(MPX .. "CL_CALL_MERCENARIES", true)
			stats.set_bool(MPX .. "CL_PHONE_MECH_DROP_CAR", true)
			stats.set_bool(MPX .. "CL_GONE_OFF_RADAR", true)
			stats.set_bool(MPX .. "CL_FILL_TITAN", true)
			stats.set_bool(MPX .. "CL_MOD_CAR_USING_APP", true)
			stats.set_bool(MPX .. "CL_MOD_CAR_USING_APP", true)
			stats.set_bool(MPX .. "CL_BUY_INSURANCE", true)
			stats.set_bool(MPX .. "CL_BUY_GARAGE", true)
			stats.set_bool(MPX .. "CL_ENTER_FRIENDS_HOUSE", true)
			stats.set_bool(MPX .. "CL_CALL_STRIPPER_HOUSE", true)
			stats.set_bool(MPX .. "CL_CALL_FRIEND", true)
			stats.set_bool(MPX .. "CL_SEND_FRIEND_REQUEST", true)
			stats.set_bool(MPX .. "CL_W_WANTED_PLAYER_TV", true)
			stats.set_bool(MPX .. "PILOT_ASPASSEDLESSON_0", true)
			stats.set_bool(MPX .. "PILOT_ASPASSEDLESSON_1", true)
			stats.set_bool(MPX .. "PILOT_ASPASSEDLESSON_2", true)
			stats.set_bool(MPX .. "PILOT_ASPASSEDLESSON_3", true)
			stats.set_bool(MPX .. "PILOT_ASPASSEDLESSON_4", true)
			stats.set_bool(MPX .. "PILOT_ASPASSEDLESSON_5", true)
			stats.set_bool(MPX .. "PILOT_ASPASSEDLESSON_6", true)
			stats.set_bool(MPX .. "PILOT_ASPASSEDLESSON_7", true)
			stats.set_bool(MPX .. "PILOT_ASPASSEDLESSON_8", true)
			stats.set_bool(MPX .. "PILOT_ASPASSEDLESSON_9", true)
			stats.set_bool(MPX .. "AWD_FIRST_TIME1", true)
			stats.set_bool(MPX .. "AWD_FIRST_TIME2", true)
			stats.set_bool(MPX .. "AWD_FIRST_TIME3", true)
			stats.set_bool(MPX .. "AWD_FIRST_TIME4", true)
			stats.set_bool(MPX .. "AWD_FIRST_TIME5", true)
			stats.set_bool(MPX .. "AWD_FIRST_TIME6", true)
			stats.set_bool(MPX .. "AWD_ALL_IN_ORDER", true)
			stats.set_bool(MPX .. "AWD_SUPPORTING_ROLE", true)
			stats.set_bool(MPX .. "AWD_ACTIVATE_2_PERSON_KEY", true)
			stats.set_bool(MPX .. "AWD_ALL_ROLES_HEIST", true)
			stats.set_bool(MPX .. "AWD_LEADER", true)
			stats.set_bool(MPX .. "AWD_SURVIVALIST", true)
			stats.set_bool(MPX .. "AWD_BUY_EVERY_GUN", true)
			stats.set_bool(MPX .. "AWD_DAILYOBJMONTHBONUS", true)
			stats.set_bool(MPX .. "AWD_DAILYOBJWEEKBONUS", true)
			stats.set_bool(MPX .. "AWD_DRIVELESTERCAR5MINS", true)
			stats.set_bool(MPX .. "AWD_FINISH_HEIST_NO_DAMAGE", true)
			stats.set_bool(MPX .. "AWD_FM25DIFFERENTDM", true)
			stats.set_bool(MPX .. "AWD_FM25DIFFERENTRACES", true)
			stats.set_bool(MPX .. "AWD_FM25DIFITEMSCLOTHES", true)
			stats.set_bool(MPX .. "AWD_FMFURTHESTWHEELIE", true)
			stats.set_bool(MPX .. "AWD_FM6DARTCHKOUT", true)
			stats.set_bool(MPX .. "AWD_FM_GOLF_HOLE_IN_1", true)
			stats.set_bool(MPX .. "AWD_FM_SHOOTRANG_GRAN_WON", true)
			stats.set_bool(MPX .. "AWD_FM_TENNIS_5_SET_WINS", true)
			stats.set_bool(MPX .. "AWD_FMATTGANGHQ", true)
			stats.set_bool(MPX .. "AWD_FMFULLYMODDEDCAR", true)
			stats.set_bool(MPX .. "AWD_FMKILL3ANDWINGTARACE", true)
			stats.set_bool(MPX .. "AWD_FMKILLSTREAKSDM", true)
			stats.set_bool(MPX .. "AWD_FMMOSTKILLSGANGHIDE", true)
			stats.set_bool(MPX .. "AWD_FMMOSTKILLSSURVIVE", true)
			stats.set_bool(MPX .. "AWD_FMPICKUPDLCCRATE1ST", true)
			stats.set_bool(MPX .. "AWD_FMRACEWORLDRECHOLDER", true)
			stats.set_bool(MPX .. "AWD_FMTATTOOALLBODYPARTS", true)
			stats.set_bool(MPX .. "AWD_FMWINALLRACEMODES", true)
			stats.set_bool(MPX .. "AWD_FMWINCUSTOMRACE", true)
			stats.set_bool(MPX .. "AWD_FMWINEVERYGAMEMODE", true)
			stats.set_bool(MPX .. "AWD_SPLIT_HEIST_TAKE_EVENLY", true)
			stats.set_bool(MPX .. "AWD_STORE_20_CAR_IN_GARAGES", true)
			stats.set_bool(MPX .. "SR_TIER_1_REWARD", true)
			stats.set_bool(MPX .. "SR_TIER_3_REWARD", true)
			stats.set_bool(MPX .. "SR_INCREASE_THROW_CAP", true)
			stats.set_bool(MPX .. "AWD_CLUB_COORD", true)
			stats.set_bool(MPX .. "AWD_CLUB_HOTSPOT", true)
			stats.set_bool(MPX .. "AWD_CLUB_CLUBBER", true)
			stats.set_bool(MPX .. "AWD_BEGINNER", true)
			stats.set_bool(MPX .. "AWD_FIELD_FILLER", true)
			stats.set_bool(MPX .. "AWD_ARMCHAIR_RACER", true)
			stats.set_bool(MPX .. "AWD_LEARNER", true)
			stats.set_bool(MPX .. "AWD_SUNDAY_DRIVER", true)
			stats.set_bool(MPX .. "AWD_THE_ROOKIE", true)
			stats.set_bool(MPX .. "AWD_BUMP_AND_RUN", true)
			stats.set_bool(MPX .. "AWD_GEAR_HEAD", true)
			stats.set_bool(MPX .. "AWD_DOOR_SLAMMER", true)
			stats.set_bool(MPX .. "AWD_HOT_LAP", true)
			stats.set_bool(MPX .. "AWD_ARENA_AMATEUR", true)
			stats.set_bool(MPX .. "AWD_PAINT_TRADER", true)
			stats.set_bool(MPX .. "AWD_SHUNTER", true)
			stats.set_bool(MPX .. "AWD_JOCK", true)
			stats.set_bool(MPX .. "AWD_WARRIOR", true)
			stats.set_bool(MPX .. "AWD_T_BONE", true)
			stats.set_bool(MPX .. "AWD_MAYHEM", true)
			stats.set_bool(MPX .. "AWD_WRECKER", true)
			stats.set_bool(MPX .. "AWD_CRASH_COURSE", true)
			stats.set_bool(MPX .. "AWD_ARENA_LEGEND", true)
			stats.set_bool(MPX .. "AWD_PEGASUS", true)
			stats.set_bool(MPX .. "AWD_CONTACT_SPORT", true)
			stats.set_bool(MPX .. "AWD_UNSTOPPABLE", true)
			stats.set_bool(MPX .. "LOW_FLOW_CS_DRV_SEEN", true)
			stats.set_bool(MPX .. "LOW_FLOW_CS_TRA_SEEN", true)
			stats.set_bool(MPX .. "LOW_FLOW_CS_FUN_SEEN", true)
			stats.set_bool(MPX .. "LOW_FLOW_CS_PHO_SEEN", true)
			stats.set_bool(MPX .. "LOW_FLOW_CS_FIN_SEEN", true)
			stats.set_bool(MPX .. "LOW_BEN_INTRO_CS_SEEN", true)
			stats.set_bool(MPX .. "CASINOPSTAT_BOOL0", true)
			stats.set_bool(MPX .. "CASINOPSTAT_BOOL1", true)
			stats.set_bool(MPX .. "FILM4SHIRTUNLOCK", true)
			stats.set_bool(MPX .. "FILM5SHIRTUNLOCK", true)
			stats.set_bool(MPX .. "FILM6SHIRTUNLOCK", true)
			stats.set_bool(MPX .. "FILM7SHIRTUNLOCK", true)
			stats.set_bool(MPX .. "FILM8SHIRTUNLOCK", true)
			stats.set_bool(MPX .. "FILM9SHIRTUNLOCK", true)
			stats.set_bool(MPX .. "ACCOUNTANTSHIRTUNLOCK", true)
			stats.set_bool(MPX .. "BAHAMAMAMASHIRTUNLOCK", true)
			stats.set_bool(MPX .. "DRONESHIRTUNLOCK", true)
			stats.set_bool(MPX .. "GROTTISHIRTUNLOCK", true)
			stats.set_bool(MPX .. "GOLFSHIRTUNLOCK", true)
			stats.set_bool(MPX .. "MAISONETTESHIRTUNLOCK", true)
			stats.set_bool(MPX .. "MANOPAUSESHIRTUNLOCK", true)
			stats.set_bool(MPX .. "MELTDOWNSHIRTUNLOCK", true)
			stats.set_bool(MPX .. "PACIFICBLUFFSSHIRTUNLOCK", true)
			stats.set_bool(MPX .. "PROLAPSSHIRTUNLOCK", true)
			stats.set_bool(MPX .. "TENNISSHIRTUNLOCK", true)
			stats.set_bool(MPX .. "TOESHOESSHIRTUNLOCK", true)
			stats.set_bool(MPX .. "VANILLAUNICORNSHIRTUNLOCK", true)
			stats.set_bool(MPX .. "MARLOWESHIRTUNLOCK", true)
			stats.set_bool(MPX .. "CRESTSHIRTUNLOCK", true)
		end)
		JSXX:add_sameline()   ------同行
		JSXX:add_button("Bools 部分 2", function()
			stats.set_bool("MPPLY_AWD_GANGOPS_ALLINORDER", true)
			stats.set_bool("MPPLY_AWD_GANGOPS_SUPPORT", true)
			stats.set_bool("MPPLY_AWD_GANGOPS_LOYALTY2", true)
			stats.set_bool("MPPLY_AWD_GANGOPS_CRIMMASMD2", true)
			stats.set_bool("MPPLY_AWD_GANGOPS_LOYALTY3", true)
			stats.set_bool("MPPLY_AWD_GANGOPS_CRIMMASMD3", true)
			stats.set_bool("MPPLY_AWD_GANGOPS_LOYALTY", true)
			stats.set_bool("MPPLY_AWD_GANGOPS_CRIMMASMD", true)
			stats.set_bool("MPPLY_MELEECHLENGECOMPLETED", true)
			stats.set_bool("MPPLY_HEADSHOTCHLENGECOMPLETED", true)
			stats.set_bool("MPPLY_AWD_COMPLET_HEIST_MEM", true)
			stats.set_bool("MPPLY_AWD_COMPLET_HEIST_1STPER", true)
			stats.set_bool("MPPLY_AWD_FLEECA_FIN", true)
			stats.set_bool("MPPLY_AWD_HST_ORDER", true)
			stats.set_bool("MPPLY_AWD_HST_SAME_TEAM", true)
			stats.set_bool("MPPLY_AWD_HST_ULT_CHAL", true)
			stats.set_bool("MPPLY_AWD_HUMANE_FIN", true)
			stats.set_bool("MPPLY_AWD_PACIFIC_FIN", true)
			stats.set_bool("MPPLY_AWD_PRISON_FIN", true)
			stats.set_bool("MPPLY_AWD_SERIESA_FIN", true)
			stats.set_bool("MPPLY_AWD_GANGOPS_IAA", true)
			stats.set_bool("MPPLY_AWD_GANGOPS_SUBMARINE", true)
			stats.set_bool("MPPLY_AWD_GANGOPS_MISSILE", true)
		end)

        JSXX:add_separator()  ------分割线

	--逐个解锁----------------------------------------------------------------------------------
		JSXX:add_text("   逐个解锁:"  )
		JSXX:add_button("胜利", function()
			stats.set_int(MPX .. "AWD_FM_DM_WINS", 50)
			stats.set_int(MPX .. "AWD_FM_TDM_WINS", 50)
			stats.set_int(MPX .. "AWD_FM_TDM_MVP", 50)
			stats.set_int(MPX .. "AWD_RACES_WON", 50)
			stats.set_int(MPX .. "AWD_FMWINAIRRACE", 25)
			stats.set_int(MPX .. "AWD_FMWINSEARACE", 25)
			stats.set_int(MPX .. "AWD_FM_GTA_RACES_WON", 50)
			stats.set_bool(MPX .. "AWD_FMKILL3ANDWINGTARACE", true)
			stats.set_int(MPX .. "AWD_FMRALLYWONDRIVE", 25)
			stats.set_int(MPX .. "AWD_FMRALLYWONNAV", 25)
			stats.set_bool(MPX .. "AWD_FMWINCUSTOMRACE", true)
			stats.set_int(MPX .. "AWD_FMWINRACETOPOINTS", 25)
			stats.set_bool(MPX .. "CL_RACE_MODDED_CAR", true)
			stats.set_int(MPX .. "AWD_FM_RACE_LAST_FIRST", 25)
			stats.set_bool(MPX .. "AWD_FMRACEWORLDRECHOLDER", true)
			stats.set_int(MPX .. "AWD_FM_RACES_FASTEST_LAP", 50)
			stats.set_bool(MPX .. "AWD_FMWINALLRACEMODES", true)
			stats.set_int(MPX .. "AWD_FMHORDWAVESSURVIVE", 10)
			stats.set_int(MPX .. "NUMBER_SLIPSTREAMS_IN_RACE", 100)
			stats.set_int(MPX .. "NUMBER_TURBO_STARTS_IN_RACE", 50)
			stats.set_int(MPX .. "AWD_NO_ARMWRESTLING_WINS", 25)
			stats.set_int(MPX .. "MOST_ARM_WRESTLING_WINS", 25)
			stats.set_int(MPX .. "AWD_WIN_AT_DARTS", 25)
			stats.set_int(MPX .. "AWD_FM_GOLF_WON", 25)
			stats.set_int(MPX .. "AWD_FM_TENNIS_WON", 25)
			stats.set_bool(MPX .. "AWD_FM_TENNIS_5_SET_WINS", true)
			stats.set_bool(MPX .. "AWD_FM_TENNIS_STASETWIN", true)
			stats.set_int(MPX .. "AWD_FM_SHOOTRANG_CT_WON", 25)
			stats.set_int(MPX .. "AWD_FM_SHOOTRANG_RT_WON", 25)
			stats.set_int(MPX .. "AWD_FM_SHOOTRANG_TG_WON", 25)
			stats.set_bool(MPX .. "AWD_FM_SHOOTRANG_GRAN_WON", true)
			stats.set_bool(MPX .. "AWD_FMWINEVERYGAMEMODE", true)
			stats.set_int(MPX .. "AWD_WIN_CAPTURES", 50)
			stats.set_int(MPX .. "AWD_WIN_CAPTURE_DONT_DYING", 25)
			stats.set_int(MPX .. "AWD_WIN_LAST_TEAM_STANDINGS", 50)
			stats.set_int(MPX .. "AWD_ONLY_PLAYER_ALIVE_LTS", 50)
			stats.set_int(MPX .. "AWD_KILL_TEAM_YOURSELF_LTS", 25)
			stats.set_int(MPX .. "AIR_LAUNCHES_OVER_40M", 25)
			stats.set_int(MPX .. "AWD_CARS_EXPORTED", 50)
			stats.set_int(MPX .. "AWD_LESTERDELIVERVEHICLES", 25)
			stats.set_int(MPX .. "TOTAL_RACES_WON", 500)
			stats.set_int(MPX .. "TOTAL_RACES_LOST", 250)
			stats.set_int(MPX .. "TOTAL_CUSTOM_RACES_WON", 500)
			stats.set_int(MPX .. "TOTAL_DEATHMATCH_LOST", 250)
			stats.set_int(MPX .. "TOTAL_DEATHMATCH_WON", 500)
			stats.set_int(MPX .. "TOTAL_TDEATHMATCH_LOST", 250)
			stats.set_int(MPX .. "TOTAL_TDEATHMATCH_WON", 500)
			stats.set_int(MPX .. "SHOOTINGRANGE_WINS", 500)
			stats.set_int(MPX .. "SHOOTINGRANGE_LOSSES", 250)
			stats.set_int(MPX .. "TENNIS_MATCHES_WON", 500)
			stats.set_int(MPX .. "TENNIS_MATCHES_LOST", 250)
			stats.set_int(MPX .. "GOLF_WINS", 500)
			stats.set_int(MPX .. "GOLF_LOSSES", 250)
			stats.set_int(MPX .. "DARTS_TOTAL_WINS", 500)
			stats.set_int(MPX .. "DARTS_TOTAL_MATCHES", 750)
			stats.set_int(MPX .. "SHOOTINGRANGE_TOTAL_MATCH", 800)
			stats.set_int(MPX .. "BJ_WINS", 500)
			stats.set_int(MPX .. "BJ_LOST", 250)
			stats.set_int(MPX .. "RACE_2_POINT_WINS", 500)
			stats.set_int(MPX .. "RACE_2_POINT_LOST", 250)
			stats.set_int(MPX .. "KILLS_PLAYERS", 3593)
			stats.set_int(MPX .. "DEATHS_PLAYER", 1002)
			stats.set_int(MPX .. "MISSIONS_CREATED", 500)
			stats.set_int(MPX .. "LTS_CREATED", 500)
			stats.set_int(MPX .. "FM_MISSION_LIKES", 1500)		end)
        JSXX:add_sameline()   ------同行
		JSXX:add_button("一般", function()
			stats.set_bool(MPX .. "AWD_FM25DIFFERENTDM", true)
			stats.set_int(MPX .. "CR_DIFFERENT_DM", 25)
			stats.set_bool(MPX .. "AWD_FM25DIFFERENTRACES", true)
			stats.set_int(MPX .. "CR_DIFFERENT_RACES", 25)
			stats.set_int(MPX .. "AWD_PARACHUTE_JUMPS_20M", 25)
			stats.set_int(MPX .. "AWD_PARACHUTE_JUMPS_50M", 25)
			stats.set_int(MPX .. "AWD_FMBASEJMP", 25)
			stats.set_bool(MPX .. "AWD_FMATTGANGHQ", true)
			stats.set_bool(MPX .. "AWD_FM6DARTCHKOUT", true)
			stats.set_int(MPX .. "AWD_FM_GOLF_BIRDIES", 25)
			stats.set_bool(MPX .. "AWD_FM_GOLF_HOLE_IN_1", true)
			stats.set_int(MPX .. "AWD_FM_TENNIS_ACE", 25)
			stats.set_int(MPX .. "AWD_FMBBETWIN", 50000)
			stats.set_int(MPX .. "AWD_LAPDANCES", 25)
			stats.set_int(MPX .. "AWD_FMCRATEDROPS", 25)
			stats.set_bool(MPX .. "AWD_FMPICKUPDLCCRATE1ST", true)
			stats.set_bool(MPX .. "AWD_FM25DIFITEMSCLOTHES", true)
			stats.set_int(MPX .. "AWD_NO_HAIRCUTS", 25)
			stats.set_bool(MPX .. "AWD_BUY_EVERY_GUN", true)
			stats.set_bool(MPX .. "AWD_DRIVELESTERCAR5MINS", true)
			stats.set_bool(MPX .. "AWD_FMTATTOOALLBODYPARTS", true)
			stats.set_int(MPX .. "AWD_DROPOFF_CAP_PACKAGES", 100)
			stats.set_int(MPX .. "AWD_PICKUP_CAP_PACKAGES", 100)
			stats.set_int(MPX .. "AWD_MENTALSTATE_TO_NORMAL", 50)
			stats.set_bool(MPX .. "AWD_STORE_20_CAR_IN_GARAGES", true)
			stats.set_int(MPX .. "AWD_TRADE_IN_YOUR_PROPERTY", 25)
			stats.set_bool(MPX .. "AWD_DAILYOBJWEEKBONUS", true)
			stats.set_bool(MPX .. "AWD_DAILYOBJMONTHBONUS", true)
			stats.set_int(MPX .. "AWD_FM_CR_DM_MADE", 25)
			stats.set_int(MPX .. "AWD_FM_CR_RACES_MADE", 25)
			stats.set_int(MPX .. "AWD_FM_CR_PLAYED_BY_PEEP", 1598)
			stats.set_int(MPX .. "AWD_FM_CR_MISSION_SCORE", 100)
			stats.set_bool(MPX .. "CL_DRIVE_RALLY", true)
			stats.set_bool(MPX .. "CL_PLAY_GTA_RACE", true)
			stats.set_bool(MPX .. "CL_PLAY_BOAT_RACE", true)
			stats.set_bool(MPX .. "CL_PLAY_FOOT_RACE", true)
			stats.set_bool(MPX .. "CL_PLAY_TEAM_DM", true)
			stats.set_bool(MPX .. "CL_PLAY_VEHICLE_DM", true)
			stats.set_bool(MPX .. "CL_PLAY_MISSION_CONTACT", true)
			stats.set_bool(MPX .. "CL_PLAY_A_PLAYLIST", true)
			stats.set_bool(MPX .. "CL_PLAY_POINT_TO_POINT", true)
			stats.set_bool(MPX .. "CL_PLAY_ONE_ON_ONE_DM", true)
			stats.set_bool(MPX .. "CL_PLAY_ONE_ON_ONE_RACE", true)
			stats.set_bool(MPX .. "CL_SURV_A_BOUNTY", true)
			stats.set_bool(MPX .. "CL_SET_WANTED_LVL_ON_PLAY", true)
			stats.set_bool(MPX .. "CL_GANG_BACKUP_GANGS", true)
			stats.set_bool(MPX .. "CL_GANG_BACKUP_LOST", true)
			stats.set_bool(MPX .. "CL_GANG_BACKUP_VAGOS", true)
			stats.set_bool(MPX .. "CL_CALL_MERCENARIES", true)
			stats.set_bool(MPX .. "CL_PHONE_MECH_DROP_CAR", true)
			stats.set_bool(MPX .. "CL_GONE_OFF_RADAR", true)
			stats.set_bool(MPX .. "CL_FILL_TITAN", true)
			stats.set_bool(MPX .. "CL_MOD_CAR_USING_APP", true)
			stats.set_bool(MPX .. "CL_MOD_CAR_USING_APP", true)
			stats.set_bool(MPX .. "CL_BUY_INSURANCE", true)
			stats.set_bool(MPX .. "CL_BUY_GARAGE", true)
			stats.set_bool(MPX .. "CL_ENTER_FRIENDS_HOUSE", true)
			stats.set_bool(MPX .. "CL_CALL_STRIPPER_HOUSE", true)
			stats.set_bool(MPX .. "CL_CALL_FRIEND", true)
			stats.set_bool(MPX .. "CL_SEND_FRIEND_REQUEST", true)
			stats.set_bool(MPX .. "CL_W_WANTED_PLAYER_TV", true)
			stats.set_bool(MPX .. "FM_INTRO_CUT_DONE", true)
			stats.set_bool(MPX .. "FM_INTRO_MISS_DONE", true)
			stats.set_bool(MPX .. "SHOOTINGRANGE_SEEN_TUT", true)
			stats.set_bool(MPX .. "TENNIS_SEEN_TUTORIAL", true)
			stats.set_bool(MPX .. "DARTS_SEEN_TUTORIAL", true)
			stats.set_bool(MPX .. "ARMWRESTLING_SEEN_TUTORIAL", true)
			stats.set_bool(MPX .. "HAS_WATCHED_BENNY_CUTSCE", true)
			stats.set_int(MPX .. "NO_PHOTOS_TAKEN", 100)
			stats.set_int(MPX .. "BOUNTSONU", 200)
			stats.set_int(MPX .. "BOUNTPLACED", 500)
			stats.set_int(MPX .. "BETAMOUNT", 500)
			stats.set_int(MPX .. "CRARMWREST", 500)
			stats.set_int(MPX .. "CRBASEJUMP", 500)
			stats.set_int(MPX .. "CRDARTS", 500)
			stats.set_int(MPX .. "CRDM", 500)
			stats.set_int(MPX .. "CRGANGHIDE", 500)
			stats.set_int(MPX .. "CRGOLF", 500)
			stats.set_int(MPX .. "CRHORDE", 500)
			stats.set_int(MPX .. "CRMISSION", 500)
			stats.set_int(MPX .. "CRSHOOTRNG", 500)
			stats.set_int(MPX .. "CRTENNIS", 500)
			stats.set_int(MPX .. "NO_TIMES_CINEMA", 500)		end)
        JSXX:add_sameline()   ------同行
		JSXX:add_button("武器", function()
			stats.set_int(MPX .. "CHAR_WEAP_UNLOCKED", -1)
			stats.set_int(MPX .. "CHAR_WEAP_UNLOCKED2", -1)
			stats.set_int(MPX .. "CHAR_WEAP_UNLOCKED3", -1)
			stats.set_int(MPX .. "CHAR_WEAP_UNLOCKED4", -1)
			stats.set_int(MPX .. "CHAR_WEAP_ADDON_1_UNLCK", -1)
			stats.set_int(MPX .. "CHAR_WEAP_ADDON_2_UNLCK", -1)
			stats.set_int(MPX .. "CHAR_WEAP_ADDON_3_UNLCK", -1)
			stats.set_int(MPX .. "CHAR_WEAP_ADDON_4_UNLCK", -1)
			stats.set_int(MPX .. "CHAR_WEAP_FREE", -1)
			stats.set_int(MPX .. "CHAR_WEAP_FREE2", -1)
			stats.set_int(MPX .. "CHAR_FM_WEAP_FREE", -1)
			stats.set_int(MPX .. "CHAR_FM_WEAP_FREE2", -1)
			stats.set_int(MPX .. "CHAR_FM_WEAP_FREE3", -1)
			stats.set_int(MPX .. "CHAR_FM_WEAP_FREE4", -1)
			stats.set_int(MPX .. "CHAR_WEAP_PURCHASED", -1)
			stats.set_int(MPX .. "CHAR_WEAP_PURCHASED2", -1)
			stats.set_int(MPX .. "WEAPON_PICKUP_BITSET", -1)
			stats.set_int(MPX .. "WEAPON_PICKUP_BITSET2", -1)
			stats.set_int(MPX .. "CHAR_FM_WEAP_UNLOCKED", -1)
			stats.set_int(MPX .. "NO_WEAPONS_UNLOCK", -1)
			stats.set_int(MPX .. "NO_WEAPON_MODS_UNLOCK", -1)
			stats.set_int(MPX .. "NO_WEAPON_CLR_MOD_UNLOCK", -1)
			stats.set_int(MPX .. "CHAR_FM_WEAP_UNLOCKED2", -1)
			stats.set_int(MPX .. "CHAR_FM_WEAP_UNLOCKED3", -1)
			stats.set_int(MPX .. "CHAR_FM_WEAP_UNLOCKED4", -1)
			stats.set_int(MPX .. "CHAR_KIT_1_FM_UNLCK", -1)
			stats.set_int(MPX .. "CHAR_KIT_2_FM_UNLCK", -1)
			stats.set_int(MPX .. "CHAR_KIT_3_FM_UNLCK", -1)
			stats.set_int(MPX .. "CHAR_KIT_4_FM_UNLCK", -1)
			stats.set_int(MPX .. "CHAR_KIT_5_FM_UNLCK", -1)
			stats.set_int(MPX .. "CHAR_KIT_6_FM_UNLCK", -1)
			stats.set_int(MPX .. "CHAR_KIT_7_FM_UNLCK", -1)
			stats.set_int(MPX .. "CHAR_KIT_8_FM_UNLCK", -1)
			stats.set_int(MPX .. "CHAR_KIT_9_FM_UNLCK", -1)
			stats.set_int(MPX .. "CHAR_KIT_10_FM_UNLCK", -1)
			stats.set_int(MPX .. "CHAR_KIT_11_FM_UNLCK", -1)
			stats.set_int(MPX .. "CHAR_KIT_12_FM_UNLCK", -1)
			stats.set_int(MPX .. "CHAR_KIT_FM_PURCHASE", -1)
			stats.set_int(MPX .. "CHAR_WEAP_FM_PURCHASE", -1)
			stats.set_int(MPX .. "CHAR_WEAP_FM_PURCHASE2", -1)
			stats.set_int(MPX .. "CHAR_WEAP_FM_PURCHASE3", -1)
			stats.set_int(MPX .. "CHAR_WEAP_FM_PURCHASE4", -1)
			stats.set_int(MPX .. "FIREWORK_TYPE_1_WHITE", 1000)
			stats.set_int(MPX .. "FIREWORK_TYPE_1_RED", 1000)
			stats.set_int(MPX .. "FIREWORK_TYPE_1_BLUE", 1000)
			stats.set_int(MPX .. "FIREWORK_TYPE_2_WHITE", 1000)
			stats.set_int(MPX .. "FIREWORK_TYPE_2_RED", 1000)
			stats.set_int(MPX .. "FIREWORK_TYPE_2_BLUE", 1000)
			stats.set_int(MPX .. "FIREWORK_TYPE_3_WHITE", 1000)
			stats.set_int(MPX .. "FIREWORK_TYPE_3_RED", 1000)
			stats.set_int(MPX .. "FIREWORK_TYPE_3_BLUE", 1000)
			stats.set_int(MPX .. "FIREWORK_TYPE_4_WHITE", 1000)
			stats.set_int(MPX .. "FIREWORK_TYPE_4_RED", 1000)
			stats.set_int(MPX .. "FIREWORK_TYPE_4_BLUE", 1000)
			stats.set_int(MPX .. "WEAP_FM_ADDON_PURCH", -1)
			for i = 2, 19 do
				stats.set_int(MPX .. "WEAP_FM_ADDON_PURCH" .. i, -1)
			end
			for j = 1, 19 do
				stats.set_int(MPX .. "CHAR_FM_WEAP_ADDON_" .. j .. "_UNLCK", -1)
			end
			for m = 1, 41 do
				stats.set_int(MPX .. "CHAR_KIT_" .. m .. "_FM_UNLCK", -1)
			end
			for l = 2, 41 do
				stats.set_int(MPX .. "CHAR_KIT_FM_PURCHASE" .. l, -1)
			end		end)
        JSXX:add_sameline()   ------同行
		JSXX:add_button("罪行", function()
			stats.set_int(MPX .. "AWD_FMTIME5STARWANTED", 120)
			stats.set_int(MPX .. "AWD_5STAR_WANTED_AVOIDANCE", 50)
			stats.set_int(MPX .. "AWD_FMSHOOTDOWNCOPHELI", 25)
			stats.set_int(MPX .. "AWD_VEHICLES_JACKEDR", 500)
			stats.set_int(MPX .. "AWD_SECURITY_CARS_ROBBED", 25)
			stats.set_int(MPX .. "AWD_HOLD_UP_SHOPS", 20)
			stats.set_int(MPX .. "AWD_ODISTRACTCOPSNOEATH", 25)
			stats.set_int(MPX .. "AWD_ENEMYDRIVEBYKILLS", 100)
			stats.set_int(MPX .. "CHAR_WANTED_LEVEL_TIME5STAR", 18000000)
			stats.set_int(MPX .. "CARS_COPS_EXPLODED", 300)
			stats.set_int(MPX .. "BIKES_EXPLODED", 100)
			stats.set_int(MPX .. "BOATS_EXPLODED", 168)
			stats.set_int(MPX .. "HELIS_EXPLODED", 98)
			stats.set_int(MPX .. "PLANES_EXPLODED", 138)
			stats.set_int(MPX .. "QUADBIKE_EXPLODED", 50)
			stats.set_int(MPX .. "BICYCLE_EXPLODED", 48)
			stats.set_int(MPX .. "SUBMARINE_EXPLODED", 28)
			stats.set_int(MPX .. "TIRES_POPPED_BY_GUNSHOT", 500)
			stats.set_int(MPX .. "NUMBER_CRASHES_CARS", 300)
			stats.set_int(MPX .. "NUMBER_CRASHES_BIKES", 300)
			stats.set_int(MPX .. "BAILED_FROM_VEHICLE", 300)
			stats.set_int(MPX .. "NUMBER_CRASHES_QUADBIKES", 300)
			stats.set_int(MPX .. "NUMBER_STOLEN_COP_VEHICLE", 300)
			stats.set_int(MPX .. "NUMBER_STOLEN_CARS", 300)
			stats.set_int(MPX .. "NUMBER_STOLEN_BIKES", 300)
			stats.set_int(MPX .. "NUMBER_STOLEN_BOATS", 300)
			stats.set_int(MPX .. "NUMBER_STOLEN_HELIS", 300)
			stats.set_int(MPX .. "NUMBER_STOLEN_PLANES", 300)
			stats.set_int(MPX .. "NUMBER_STOLEN_QUADBIKES", 300)
			stats.set_int(MPX .. "NUMBER_STOLEN_BICYCLES", 300)
			stats.set_int(MPX .. "MC_CONTRIBUTION_POINTS", 1000)
			stats.set_int(MPX .. "MEMBERSMARKEDFORDEATH", 700)
			stats.set_int(MPX .. "MCKILLS", 500)
			stats.set_int(MPX .. "MCDEATHS", 700)
			stats.set_int(MPX .. "RIVALPRESIDENTKILLS", 700)
			stats.set_int(MPX .. "RIVALCEOANDVIPKILLS", 700)
			stats.set_int(MPX .. "CLUBHOUSECONTRACTSCOMPLETE", 700)
			stats.set_int(MPX .. "CLUBHOUSECONTRACTEARNINGS", 32698547)
			stats.set_int(MPX .. "CLUBCHALLENGESCOMPLETED", 700)
			stats.set_int(MPX .. "MEMBERCHALLENGESCOMPLETED", 700)
			stats.set_int(MPX .. "GHKILLS", 500)
			stats.set_int(MPX .. "HORDELVL", 10)
			stats.set_int(MPX .. "HORDKILLS", 500)
			stats.set_int(MPX .. "UNIQUECRATES", 500)
			stats.set_int(MPX .. "BJWINS", 500)
			stats.set_int(MPX .. "HORDEWINS", 500)
			stats.set_int(MPX .. "MCMWINS", 500)
			stats.set_int(MPX .. "GANGHIDWINS", 500)
			stats.set_int(MPX .. "KILLS", 800)
			stats.set_int(MPX .. "HITS_PEDS_VEHICLES", 100)
			stats.set_int(MPX .. "SHOTS", 1000)
			stats.set_int(MPX .. "HEADSHOTS", 100)
			stats.set_int(MPX .. "KILLS_ARMED", 650)
			stats.set_int(MPX .. "SUCCESSFUL_COUNTERS", 100)
			stats.set_int(MPX .. "KILLS_PLAYERS", 3593)
			stats.set_int(MPX .. "DEATHS_PLAYER", 1002)
			stats.set_int(MPX .. "KILLS_STEALTH", 100)
			stats.set_int(MPX .. "KILLS_INNOCENTS", 500)
			stats.set_int(MPX .. "KILLS_ENEMY_GANG_MEMBERS", 500)
			stats.set_int(MPX .. "KILLS_FRIENDLY_GANG_MEMBERS", 500)
			stats.set_int(MPX .. "KILLS_BY_OTHERS", 100)
			stats.set_int(MPX .. "BIGGEST_VICTIM_KILLS", 500)
			stats.set_int(MPX .. "ARCHENEMY_KILLS", 500)
			stats.set_int(MPX .. "KILLS_COP", 4500)
			stats.set_int(MPX .. "KILLS_SWAT", 500)
			stats.set_int(MPX .. "STARS_ATTAINED", 5000)
			stats.set_int(MPX .. "STARS_EVADED", 4000)
			stats.set_int(MPX .. "VEHEXPORTED", 500)
			stats.set_int(MPX .. "TOTAL_NO_SHOPS_HELD_UP", 100)
			stats.set_int(MPX .. "CR_GANGATTACK_CITY", 1000)
			stats.set_int(MPX .. "CR_GANGATTACK_COUNTRY", 1000)
			stats.set_int(MPX .. "CR_GANGATTACK_LOST", 1000)
			stats.set_int(MPX .. "CR_GANGATTACK_VAGOS", 1000)
			stats.set_int(MPX .. "NO_NON_CONTRACT_RACE_WIN", 500)
			stats.set_int(MPX .. "DIED_IN_DROWNING", 833)
			stats.set_int(MPX .. "DIED_IN_DROWNINGINVEHICLE", 833)
			stats.set_int(MPX .. "DIED_IN_EXPLOSION", 833)
			stats.set_int(MPX .. "DIED_IN_FALL", 833)
			stats.set_int(MPX .. "DIED_IN_FIRE", 833)
			stats.set_int(MPX .. "DIED_IN_ROAD", 833)
			stats.set_int(MPX .. "GRENADE_ENEMY_KILLS", 50)
			stats.set_int(MPX .. "MICROSMG_ENEMY_KILLS", 500)
			stats.set_int(MPX .. "SMG_ENEMY_KILLS", 500)
			stats.set_int(MPX .. "ASLTSMG_ENEMY_KILLS", 500)
			stats.set_int(MPX .. "CRBNRIFLE_ENEMY_KILLS", 500)
			stats.set_int(MPX .. "ADVRIFLE_ENEMY_KILLS", 500)
			stats.set_int(MPX .. "MG_ENEMY_KILLS", 500)
			stats.set_int(MPX .. "CMBTMG_ENEMY_KILLS", 500)
			stats.set_int(MPX .. "ASLTMG_ENEMY_KILLS", 500)
			stats.set_int(MPX .. "RPG_ENEMY_KILLS", 500)
			stats.set_int(MPX .. "PISTOL_ENEMY_KILLS", 500)
			stats.set_int(MPX .. "PLAYER_HEADSHOTS", 500)
			stats.set_int(MPX .. "SAWNOFF_ENEMY_KILLS", 500)
			stats.set_int(MPX .. "STKYBMB_ENEMY_KILLS", 50)
			stats.set_int(MPX .. "UNARMED_ENEMY_KILLS", 50)
			stats.set_int(MPX .. "SNIPERRFL_ENEMY_KILLS", 500)
			stats.set_int(MPX .. "HVYSNIPER_ENEMY_KILLS", 500)		end)
        JSXX:add_sameline()   ------同行
		JSXX:add_button("车辆", function()
			stats.set_int(MPX .. "AWD_50_VEHICLES_BLOWNUP", 500)
			stats.set_int(MPX .. "CARS_EXPLODED", 500)
			stats.set_int(MPX .. "AWD_CAR_EXPORT", 100)
			stats.set_int(MPX .. "AWD_FMDRIVEWITHOUTCRASH", 30)
			stats.set_int(MPX .. "AWD_PASSENGERTIME", 4)
			stats.set_int(MPX .. "AWD_TIME_IN_HELICOPTER", 4)
			stats.set_int(MPX .. "AWD_VEHICLE_JUMP_OVER_40M", 25)
			stats.set_int(MPX .. "MOST_FLIPS_IN_ONE_JUMP", 5)
			stats.set_int(MPX .. "MOST_SPINS_IN_ONE_JUMP", 5)
			stats.set_int(MPX .. "CHAR_FM_VEHICLE_1_UNLCK", -1)
			stats.set_int(MPX .. "CHAR_FM_VEHICLE_2_UNLCK", -1)
			stats.set_int(MPX .. "NO_CARS_REPAIR", 1000)
			stats.set_int(MPX .. "VEHICLES_SPRAYED", 500)
			stats.set_int(MPX .. "NUMBER_NEAR_MISS_NOCRASH", 500)
			stats.set_int(MPX .. "USJS_FOUND", 50)
			stats.set_int(MPX .. "USJS_COMPLETED", 50)
			stats.set_int(MPX .. "USJS_TOTAL_COMPLETED", 50)
			stats.set_int(MPX .. "CRDEADLINE", 5)
			stats.set_int(MPX .. "FAVOUTFITBIKETIMECURRENT", 2069146067)
			stats.set_int(MPX .. "FAVOUTFITBIKETIME1ALLTIME", 2069146067)
			stats.set_int(MPX .. "FAVOUTFITBIKETYPECURRENT", 2069146067)
			stats.set_int(MPX .. "FAVOUTFITBIKETYPEALLTIME", 2069146067)
			stats.set_int(MPX .. "LONGEST_WHEELIE_DIST", 1000)
			stats.set_int(MPX .. "RACES_WON", 50)
			stats.set_int(MPX .. "COUNT_HOTRING_RACE", 20)
			stats.set_bool(MPX .. "AWD_FMFURTHESTWHEELIE", true)
			stats.set_bool(MPX .. "AWD_FMFULLYMODDEDCAR", true)		end)
        JSXX:add_sameline()   ------同行
		JSXX:add_button("搏斗", function()
			stats.set_int(MPX .. "AWD_100_HEADSHOTS", 500)
			stats.set_int(MPX .. "AWD_FMOVERALLKILLS", 1000)
			stats.set_int(MPX .. "AWD_FMKILLBOUNTY", 25)
			stats.set_int(MPX .. "AWD_FM_DM_3KILLSAMEGUY", 50)
			stats.set_int(MPX .. "AWD_FM_DM_KILLSTREAK", 100)
			stats.set_int(MPX .. "AWD_FM_DM_STOLENKILL", 50)
			stats.set_int(MPX .. "AWD_FM_DM_TOTALKILLS", 500)
			stats.set_bool(MPX .. "AWD_FMKILLSTREAKSDM", true)
			stats.set_bool(MPX .. "AWD_FMMOSTKILLSGANGHIDE", true)
			stats.set_bool(MPX .. "AWD_FMMOSTKILLSSURVIVE", true)
			stats.set_int(MPX .. "AWD_FMREVENGEKILLSDM", 50)
			stats.set_int(MPX .. "AWD_KILL_CARRIER_CAPTURE", 100)
			stats.set_int(MPX .. "AWD_NIGHTVISION_KILLS", 100)
			stats.set_int(MPX .. "AWD_KILL_PSYCHOPATHS", 100)
			stats.set_int(MPX .. "AWD_TAKEDOWNSMUGPLANE", 50)
			stats.set_int(MPX .. "AWD_100_KILLS_PISTOL", 500)
			stats.set_int(MPX .. "AWD_100_KILLS_SMG", 500)
			stats.set_int(MPX .. "AWD_100_KILLS_SHOTGUN", 500)
			stats.set_int(MPX .. "ASLTRIFLE_ENEMY_KILLS", 500)
			stats.set_int(MPX .. "AWD_100_KILLS_SNIPER", 500)
			stats.set_int(MPX .. "MG_ENEMY_KILLS", 500)
			stats.set_int(MPX .. "AWD_25_KILLS_STICKYBOMBS", 50)
			stats.set_int(MPX .. "AWD_50_KILLS_GRENADES", 50)
			stats.set_int(MPX .. "AWD_50_KILLS_ROCKETLAUNCH", 50)
			stats.set_int(MPX .. "AWD_20_KILLS_MELEE", 50)
			stats.set_int(MPX .. "AWD_CAR_BOMBS_ENEMY_KILLS", 25)
			stats.set_int(MPX .. "MELEEKILLS", 700)
			stats.set_int(MPX .. "HITS", 10000)
			stats.set_int(MPX .. "DEATHS", 499)
			stats.set_int(MPX .. "HIGHEST_SKITTLES", 900)
			stats.set_int(MPX .. "NUMBER_NEAR_MISS", 1000)		end)
        JSXX:add_sameline()   ------同行
		JSXX:add_button("抢劫", function()
			stats.set_int(MPX .. "AWD_FINISH_HEISTS", 50)
			stats.set_int(MPX .. "AWD_FINISH_HEIST_SETUP_JOB", 50)
			stats.set_int(MPX .. "AWD_COMPLETE_HEIST_NOT_DIE", -1)
			stats.set_bool(MPX .. "AWD_FINISH_HEIST_NO_DAMAGE", true)
			stats.set_int(MPX .. "AWD_WIN_GOLD_MEDAL_HEISTS", 25)
			stats.set_int(MPX .. "AWD_DO_HEIST_AS_MEMBER", 25)
			stats.set_int(MPX .. "AWD_DO_HEIST_AS_THE_LEADER", 25)
			stats.set_bool(MPX .. "AWD_SPLIT_HEIST_TAKE_EVENLY", true)
			stats.set_bool(MPX .. "AWD_ACTIVATE_2_PERSON_KEY", true)
			stats.set_int(MPX .. "AWD_CONTROL_CROWDS", 25)
			stats.set_bool(MPX .. "AWD_ALL_ROLES_HEIST", true)
			stats.set_int(MPX .. "HEIST_COMPLETION", 25)
			stats.set_int(MPX .. "HEISTS_ORGANISED", -1)
			stats.set_int(MPX .. "HEIST_START", -1)
			stats.set_int(MPX .. "HEIST_END", -1)
			stats.set_int(MPX .. "CUTSCENE_MID_PRISON", -1)
			stats.set_int(MPX .. "CUTSCENE_MID_HUMANE", -1)
			stats.set_int(MPX .. "CUTSCENE_MID_NARC", -1)
			stats.set_int(MPX .. "CUTSCENE_MID_ORNATE", -1)
			stats.set_int(MPX .. "CR_FLEECA_PREP_1", -1)
			stats.set_int(MPX .. "CR_FLEECA_PREP_2", -1)
			stats.set_int(MPX .. "CR_FLEECA_FINALE", -1)
			stats.set_int(MPX .. "CR_PRISON_PLANE", -1)
			stats.set_int(MPX .. "CR_PRISON_BUS", -1)
			stats.set_int(MPX .. "CR_PRISON_STATION", -1)
			stats.set_int(MPX .. "CR_PRISON_UNFINISHED_BIZ", -1)
			stats.set_int(MPX .. "CR_PRISON_FINALE", -1)
			stats.set_int(MPX .. "CR_HUMANE_KEY_CODES", -1)
			stats.set_int(MPX .. "CR_HUMANE_ARMORDILLOS", -1)
			stats.set_int(MPX .. "CR_HUMANE_EMP", -1)
			stats.set_int(MPX .. "CR_HUMANE_VALKYRIE", -1)
			stats.set_int(MPX .. "CR_HUMANE_FINALE", -1)
			stats.set_int(MPX .. "CR_NARC_COKE", -1)
			stats.set_int(MPX .. "CR_NARC_TRASH_TRUCK", -1)
			stats.set_int(MPX .. "CR_NARC_BIKERS", -1)
			stats.set_int(MPX .. "CR_NARC_WEED", -1)
			stats.set_int(MPX .. "CR_NARC_STEAL_METH", -1)
			stats.set_int(MPX .. "CR_NARC_FINALE", -1)
			stats.set_int(MPX .. "CR_PACIFIC_TRUCKS", -1)
			stats.set_int(MPX .. "CR_PACIFIC_WITSEC", -1)
			stats.set_int(MPX .. "CR_PACIFIC_HACK", -1)
			stats.set_int(MPX .. "CR_PACIFIC_BIKES", -1)
			stats.set_int(MPX .. "CR_PACIFIC_CONVOY", -1)
			stats.set_int(MPX .. "CR_PACIFIC_FINALE", -1)
			stats.set_int("MPPLY_HEIST_ACH_TRACKER", -1)
			stats.set_int("MPPLY_WIN_GOLD_MEDAL_HEISTS", 25)
			stats.set_bool("MPPLY_AWD_FLEECA_FIN", true)
			stats.set_bool("MPPLY_AWD_PRISON_FIN", true)
			stats.set_bool("MPPLY_AWD_HUMANE_FIN", true)
			stats.set_bool("MPPLY_AWD_SERIESA_FIN", true)
			stats.set_bool("MPPLY_AWD_PACIFIC_FIN", true)
			stats.set_bool("MPPLY_AWD_HST_ORDER", true)
			stats.set_bool("MPPLY_AWD_COMPLET_HEIST_MEM", true)
			stats.set_bool("MPPLY_AWD_COMPLET_HEIST_1STPER", true)
			stats.set_bool("MPPLY_AWD_HST_SAME_TEAM", true)
			stats.set_bool("MPPLY_AWD_HST_ULT_CHAL", true)
			stats.set_bool(MPX .. "AWD_MATCHING_OUTFIT_HEIST", true)
			stats.set_bool(MPX .. "HEIST_PLANNING_DONE_PRINT", true)
			stats.set_bool(MPX .. "HEIST_PLANNING_DONE_HELP_0", true)
			stats.set_bool(MPX .. "HEIST_PLANNING_DONE_HELP_1", true)
			stats.set_bool(MPX .. "HEIST_PRE_PLAN_DONE_HELP_0", true)
			stats.set_bool(MPX .. "HEIST_CUTS_DONE_FINALE", true)
			stats.set_bool(MPX .. "HEIST_IS_TUTORIAL", true)
			stats.set_bool(MPX .. "HEIST_STRAND_INTRO_DONE", true)
			stats.set_bool(MPX .. "HEIST_CUTS_DONE_ORNATE", true)
			stats.set_bool(MPX .. "HEIST_CUTS_DONE_PRISON", true)
			stats.set_bool(MPX .. "HEIST_CUTS_DONE_BIOLAB", true)
			stats.set_bool(MPX .. "HEIST_CUTS_DONE_NARCOTIC", true)
			stats.set_bool(MPX .. "HEIST_CUTS_DONE_TUTORIAL", true)
			stats.set_bool(MPX .. "HEIST_AWARD_DONE_PREP", true)
			stats.set_bool(MPX .. "HEIST_AWARD_BOUGHT_IN", true)
			stats.set_int(MPX .. "HEIST_PLANNING_STAGE", -1)		end)
        JSXX:add_sameline()   ------同行
		JSXX:add_button("末日", function()
			stats.set_int(MPX .. "GANGOPS_HEIST_STATUS", -1)
			stats.set_int(MPX .. "GANGOPS_HEIST_STATUS", -229384)
			stats.set_int(MPX .. "GANGOPS_FM_MISSION_PROG", -1)
			stats.set_int(MPX .. "GANGOPS_FLOW_MISSION_PROG", -1)
			stats.set_int("MPPLY_GANGOPS_ALLINORDER", 100)
			stats.set_int("MPPLY_GANGOPS_LOYALTY", 100)
			stats.set_int("MPPLY_GANGOPS_CRIMMASMD", 100)
			stats.set_int("MPPLY_GANGOPS_LOYALTY2", 100)
			stats.set_int("MPPLY_GANGOPS_LOYALTY3", 100)
			stats.set_int("MPPLY_GANGOPS_CRIMMASMD2", 100)
			stats.set_int("MPPLY_GANGOPS_CRIMMASMD3", 100)
			stats.set_int("MPPLY_GANGOPS_SUPPORT", 100)
			stats.set_int(MPX .. "CR_GANGOP_MORGUE", 10)
			stats.set_int(MPX .. "CR_GANGOP_DELUXO", 10)
			stats.set_int(MPX .. "CR_GANGOP_SERVERFARM", 10)
			stats.set_int(MPX .. "CR_GANGOP_IAABASE_FIN", 10)
			stats.set_int(MPX .. "CR_GANGOP_STEALOSPREY", 10)
			stats.set_int(MPX .. "CR_GANGOP_FOUNDRY", 10)
			stats.set_int(MPX .. "CR_GANGOP_RIOTVAN", 10)
			stats.set_int(MPX .. "CR_GANGOP_SUBMARINECAR", 10)
			stats.set_int(MPX .. "CR_GANGOP_SUBMARINE_FIN", 10)
			stats.set_int(MPX .. "CR_GANGOP_PREDATOR", 10)
			stats.set_int(MPX .. "CR_GANGOP_BMLAUNCHER", 10)
			stats.set_int(MPX .. "CR_GANGOP_BCCUSTOM", 10)
			stats.set_int(MPX .. "CR_GANGOP_STEALTHTANKS", 10)
			stats.set_int(MPX .. "CR_GANGOP_SPYPLANE", 10)
			stats.set_int(MPX .. "CR_GANGOP_FINALE", 10)
			stats.set_int(MPX .. "CR_GANGOP_FINALE_P2", 10)
			stats.set_int(MPX .. "CR_GANGOP_FINALE_P3", 10)
			stats.set_bool("MPPLY_AWD_GANGOPS_IAA", true)
			stats.set_bool("MPPLY_AWD_GANGOPS_SUBMARINE", true)
			stats.set_bool("MPPLY_AWD_GANGOPS_MISSILE", true)
			stats.set_bool("MPPLY_AWD_GANGOPS_ALLINORDER", true)
			stats.set_bool("MPPLY_AWD_GANGOPS_LOYALTY", true)
			stats.set_bool("MPPLY_AWD_GANGOPS_LOYALTY2", true)
			stats.set_bool("MPPLY_AWD_GANGOPS_LOYALTY3", true)
			stats.set_bool("MPPLY_AWD_GANGOPS_CRIMMASMD", true)
			stats.set_bool("MPPLY_AWD_GANGOPS_CRIMMASMD2", true)
			stats.set_bool("MPPLY_AWD_GANGOPS_CRIMMASMD3", true)
			stats.set_bool("MPPLY_AWD_GANGOPS_SUPPORT", true)
			for j = 0, 63 do
				stats.set_bool_masked(MPX .. "GANGOPSPSTAT_BOOL0", true, j, MPX)
			end
			stats.set_masked_int(MPX .. "DLCSMUGCHARPSTAT_INT260", 3, 16, 8)
			stats.set_masked_int(MPX .. "BUSINESSBATPSTAT_INT260", 3, 24, 8)
			stats.set_masked_int(MPX .. "BUSINESSBATPSTAT_INT260", 3, 32, 8)
			stats.set_masked_int(MPX .. "BUSINESSBATPSTAT_INT260", 3, 40, 8)
			stats.set_masked_int(MPX .. "BUSINESSBATPSTAT_INT260", 3, 48, 8)		end)
        JSXX:add_sameline()   ------同行
		JSXX:add_button("夜店", function()
			stats.set_int(MPX .. "AWD_DANCE_TO_SOLOMUN", 120)
			stats.set_int(MPX .. "AWD_DANCE_TO_TALEOFUS", 120)
			stats.set_int(MPX .. "AWD_DANCE_TO_DIXON", 120)
			stats.set_int(MPX .. "AWD_DANCE_TO_BLKMAD", 120)
			stats.set_int(MPX .. "AWD_CLUB_DRUNK", 200)
			stats.set_int(MPX .. "NIGHTCLUB_VIP_APPEAR", 700)
			stats.set_int(MPX .. "NIGHTCLUB_JOBS_DONE", 700)
			stats.set_int(MPX .. "NIGHTCLUB_EARNINGS", 5721002)
			stats.set_int(MPX .. "HUB_SALES_COMPLETED", 1001)
			stats.set_int(MPX .. "HUB_EARNINGS", 20721002)
			stats.set_int(MPX .. "DANCE_COMBO_DURATION_MINS", 3600000)
			stats.set_int(MPX .. "NIGHTCLUB_PLAYER_APPEAR", 100)
			stats.set_int(MPX .. "LIFETIME_HUB_GOODS_SOLD", 784672)
			stats.set_int(MPX .. "LIFETIME_HUB_GOODS_MADE", 507822)
			stats.set_int(MPX .. "DANCEPERFECTOWNCLUB", 120)
			stats.set_int(MPX .. "NUMUNIQUEPLYSINCLUB", 120)
			stats.set_int(MPX .. "DANCETODIFFDJS", 4)
			stats.set_int(MPX .. "NIGHTCLUB_HOTSPOT_TIME_MS", 3600000)
			stats.set_int(MPX .. "NIGHTCLUB_CONT_TOTAL", 20)
			stats.set_int(MPX .. "NIGHTCLUB_CONT_MISSION", -1)
			stats.set_int(MPX .. "CLUB_CONTRABAND_MISSION", 1000)
			stats.set_int(MPX .. "HUB_CONTRABAND_MISSION", 1000)
			stats.set_bool(MPX .. "AWD_CLUB_HOTSPOT", true)
			stats.set_bool(MPX .. "AWD_CLUB_CLUBBER", true)
			stats.set_bool(MPX .. "AWD_CLUB_COORD", true)
			for j = 0, 63 do
				stats.set_bool_masked(MPX .. "BUSINESSBATPSTAT_BOOL0", true, j, MPX)
				stats.set_bool_masked(MPX .. "BUSINESSBATPSTAT_BOOL1", true, j, MPX)
			end
			if stats.get_masked_int(MPX .. "BUSINESSBATPSTAT_INT380", 0, 8) < 20 then
				stats.set_masked_int(MPX .. "BUSINESSBATPSTAT_INT380", 20, 0, 8)
			end
			stats.set_masked_int(MPX .. "BUSINESSBATPSTAT_INT379", 50, 8, 8)
			stats.set_masked_int(MPX .. "BUSINESSBATPSTAT_INT379", 100, 16, 8)
			stats.set_masked_int(MPX .. "BUSINESSBATPSTAT_INT379", 20, 24, 8)
			stats.set_masked_int(MPX .. "BUSINESSBATPSTAT_INT379", 80, 32, 8)
			stats.set_masked_int(MPX .. "BUSINESSBATPSTAT_INT379", 60, 40, 8)
			stats.set_masked_int(MPX .. "BUSINESSBATPSTAT_INT379", 40, 48, 8)
			stats.set_masked_int(MPX .. "BUSINESSBATPSTAT_INT379", 10, 56, 8)		end)
        JSXX:add_sameline()   ------同行
		JSXX:add_button("竞技场", function()
			stats.set_int(MPX .. "ARN_BS_TRINKET_TICKERS", -1)
			stats.set_int(MPX .. "ARN_BS_TRINKET_SAVED", -1)
			stats.set_int(MPX .. "AWD_WATCH_YOUR_STEP", 50)
			stats.set_int(MPX .. "AWD_TOWER_OFFENSE", 50)
			stats.set_int(MPX .. "AWD_READY_FOR_WAR", 50)
			stats.set_int(MPX .. "AWD_THROUGH_A_LENS", 50)
			stats.set_int(MPX .. "AWD_SPINNER", 50)
			stats.set_int(MPX .. "AWD_YOUMEANBOOBYTRAPS", 50)
			stats.set_int(MPX .. "AWD_MASTER_BANDITO", 50)
			stats.set_int(MPX .. "AWD_SITTING_DUCK", 50)
			stats.set_int(MPX .. "AWD_CROWDPARTICIPATION", 50)
			stats.set_int(MPX .. "AWD_KILL_OR_BE_KILLED", 50)
			stats.set_int(MPX .. "AWD_MASSIVE_SHUNT", 50)
			stats.set_int(MPX .. "AWD_YOURE_OUTTA_HERE", 200)
			stats.set_int(MPX .. "AWD_WEVE_GOT_ONE", 50)
			stats.set_int(MPX .. "AWD_ARENA_WAGEWORKER", 1000000)
			stats.set_int(MPX .. "AWD_TIME_SERVED", 1000)
			stats.set_int(MPX .. "AWD_TOP_SCORE", 55000)
			stats.set_int(MPX .. "AWD_CAREER_WINNER", 1000)
			stats.set_int(MPX .. "ARENAWARS_SP", 0)
			stats.set_int(MPX .. "ARENAWARS_SKILL_LEVEL", 20)
			stats.set_int(MPX .. "ARENAWARS_SP_LIFETIME", 100)
			stats.set_int(MPX .. "ARENAWARS_AP", 0)
			stats.set_int(MPX .. "ARENAWARS_AP_TIER", 1000)
			stats.set_int(MPX .. "ARENAWARS_AP_LIFETIME", 5055000)
			stats.set_int(MPX .. "ARENAWARS_CARRER_UNLK", -1)
			stats.set_int(MPX .. "ARN_W_THEME_SCIFI", 1000)
			stats.set_int(MPX .. "ARN_W_THEME_APOC", 1000)
			stats.set_int(MPX .. "ARN_W_THEME_CONS", 1000)
			stats.set_int(MPX .. "ARN_W_PASS_THE_BOMB", 1000)
			stats.set_int(MPX .. "ARN_W_DETONATION", 1000)
			stats.set_int(MPX .. "ARN_W_ARCADE_RACE", 1000)
			stats.set_int(MPX .. "ARN_W_CTF", 1000)
			stats.set_int(MPX .. "ARN_W_TAG_TEAM", 1000)
			stats.set_int(MPX .. "ARN_W_DESTR_DERBY", 1000)
			stats.set_int(MPX .. "ARN_W_CARNAGE", 1000)
			stats.set_int(MPX .. "ARN_W_MONSTER_JAM", 1000)
			stats.set_int(MPX .. "ARN_W_GAMES_MASTERS", 1000)
			stats.set_int(MPX .. "ARN_L_PASS_THE_BOMB", 500)
			stats.set_int(MPX .. "ARN_L_DETONATION", 500)
			stats.set_int(MPX .. "ARN_L_ARCADE_RACE", 500)
			stats.set_int(MPX .. "ARN_L_CTF", 500)
			stats.set_int(MPX .. "ARN_L_TAG_TEAM", 500)
			stats.set_int(MPX .. "ARN_L_DESTR_DERBY", 500)
			stats.set_int(MPX .. "ARN_L_CARNAGE", 500)
			stats.set_int(MPX .. "ARN_L_MONSTER_JAM", 500)
			stats.set_int(MPX .. "ARN_L_GAMES_MASTERS", 500)
			stats.set_int(MPX .. "NUMBER_OF_CHAMP_BOUGHT", 1000)
			stats.set_int(MPX .. "ARN_SPECTATOR_KILLS", 1000)
			stats.set_int(MPX .. "ARN_LIFETIME_KILLS", 1000)
			stats.set_int(MPX .. "ARN_LIFETIME_DEATHS", 500)
			stats.set_int(MPX .. "ARENAWARS_CARRER_WINS", 1000)
			stats.set_int(MPX .. "ARENAWARS_CARRER_WINT", 1000)
			stats.set_int(MPX .. "ARENAWARS_MATCHES_PLYD", 1000)
			stats.set_int(MPX .. "ARENAWARS_MATCHES_PLYDT", 1000)
			stats.set_int(MPX .. "ARN_SPEC_BOX_TIME_MS", 86400000)
			stats.set_int(MPX .. "ARN_SPECTATOR_DRONE", 1000)
			stats.set_int(MPX .. "ARN_SPECTATOR_CAMS", 1000)
			stats.set_int(MPX .. "ARN_SMOKE", 1000)
			stats.set_int(MPX .. "ARN_DRINK", 1000)
			stats.set_int(MPX .. "ARN_VEH_MONSTER", 1000)
			stats.set_int(MPX .. "ARN_VEH_MONSTER", 1000)
			stats.set_int(MPX .. "ARN_VEH_MONSTER", 1000)
			stats.set_int(MPX .. "ARN_VEH_CERBERUS", 1000)
			stats.set_int(MPX .. "ARN_VEH_CERBERUS2", 1000)
			stats.set_int(MPX .. "ARN_VEH_CERBERUS3", 1000)
			stats.set_int(MPX .. "ARN_VEH_BRUISER", 1000)
			stats.set_int(MPX .. "ARN_VEH_BRUISER2", 1000)
			stats.set_int(MPX .. "ARN_VEH_BRUISER3", 1000)
			stats.set_int(MPX .. "ARN_VEH_SLAMVAN4", 1000)
			stats.set_int(MPX .. "ARN_VEH_SLAMVAN5", 1000)
			stats.set_int(MPX .. "ARN_VEH_SLAMVAN6", 1000)
			stats.set_int(MPX .. "ARN_VEH_BRUTUS", 1000)
			stats.set_int(MPX .. "ARN_VEH_BRUTUS2", 1000)
			stats.set_int(MPX .. "ARN_VEH_BRUTUS3", 1000)
			stats.set_int(MPX .. "ARN_VEH_SCARAB", 1000)
			stats.set_int(MPX .. "ARN_VEH_SCARAB2", 1000)
			stats.set_int(MPX .. "ARN_VEH_SCARAB3", 1000)
			stats.set_int(MPX .. "ARN_VEH_DOMINATOR4", 1000)
			stats.set_int(MPX .. "ARN_VEH_DOMINATOR5", 1000)
			stats.set_int(MPX .. "ARN_VEH_DOMINATOR6", 1000)
			stats.set_int(MPX .. "ARN_VEH_IMPALER2", 1000)
			stats.set_int(MPX .. "ARN_VEH_IMPALER3", 1000)
			stats.set_int(MPX .. "ARN_VEH_IMPALER4", 1000)
			stats.set_int(MPX .. "ARN_VEH_ISSI4", 1000)
			stats.set_int(MPX .. "ARN_VEH_ISSI5", 1000)
			stats.set_int(MPX .. "ARN_VEH_ISSI", 61000)
			stats.set_int(MPX .. "ARN_VEH_IMPERATOR", 1000)
			stats.set_int(MPX .. "ARN_VEH_IMPERATOR2", 1000)
			stats.set_int(MPX .. "ARN_VEH_IMPERATOR3", 1000)
			stats.set_int(MPX .. "ARN_VEH_ZR380", 1000)
			stats.set_int(MPX .. "ARN_VEH_ZR3802", 1000)
			stats.set_int(MPX .. "ARN_VEH_ZR3803", 1000)
			stats.set_int(MPX .. "ARN_VEH_DEATHBIKE", 1000)
			stats.set_int(MPX .. "ARN_VEH_DEATHBIKE2", 1000)
			stats.set_int(MPX .. "ARN_VEH_DEATHBIKE3", 1000)
			stats.set_bool(MPX .. "AWD_BEGINNER", true)
			stats.set_bool(MPX .. "AWD_FIELD_FILLER", true)
			stats.set_bool(MPX .. "AWD_ARMCHAIR_RACER", true)
			stats.set_bool(MPX .. "AWD_LEARNER", true)
			stats.set_bool(MPX .. "AWD_SUNDAY_DRIVER", true)
			stats.set_bool(MPX .. "AWD_THE_ROOKIE", true)
			stats.set_bool(MPX .. "AWD_BUMP_AND_RUN", true)
			stats.set_bool(MPX .. "AWD_GEAR_HEAD", true)
			stats.set_bool(MPX .. "AWD_DOOR_SLAMMER", true)
			stats.set_bool(MPX .. "AWD_HOT_LAP", true)
			stats.set_bool(MPX .. "AWD_ARENA_AMATEUR", true)
			stats.set_bool(MPX .. "AWD_PAINT_TRADER", true)
			stats.set_bool(MPX .. "AWD_SHUNTER", true)
			stats.set_bool(MPX .. "AWD_JOCK", true)
			stats.set_bool(MPX .. "AWD_WARRIOR", true)
			stats.set_bool(MPX .. "AWD_T_BONE", true)
			stats.set_bool(MPX .. "AWD_MAYHEM", true)
			stats.set_bool(MPX .. "AWD_WRECKER", true)
			stats.set_bool(MPX .. "AWD_CRASH_COURSE", true)
			stats.set_bool(MPX .. "AWD_ARENA_LEGEND", true)
			stats.set_bool(MPX .. "AWD_PEGASUS", true)
			stats.set_bool(MPX .. "AWD_UNSTOPPABLE", true)
			stats.set_bool(MPX .. "AWD_CONTACT_SPORT", true)
			stats.set_masked_int(MPX .. "ARENAWARSPSTAT_INT", 1, 35, 8)
			for i = 0, 8 do
				for j = 0, 63 do
					stats.set_bool_masked(MPX .. "ARENAWARSPSTAT_BOOL" .. i, true, j, MPX)
				end
			end		end)
        JSXX:add_sameline()   ------同行
		JSXX:add_button("钻石赌场度假村", function()
			stats.set_int(MPX .. "AWD_ODD_JOBS", 50)
			stats.set_int(MPX .. "VCM_FLOW_PROGRESS", -1)
			stats.set_int(MPX .. "VCM_STORY_PROGRESS", 5)
			stats.set_bool(MPX .. "AWD_FIRST_TIME1", true)
			stats.set_bool(MPX .. "AWD_FIRST_TIME2", true)
			stats.set_bool(MPX .. "AWD_FIRST_TIME3", true)
			stats.set_bool(MPX .. "AWD_FIRST_TIME4", true)
			stats.set_bool(MPX .. "AWD_FIRST_TIME5", true)
			stats.set_bool(MPX .. "AWD_FIRST_TIME6", true)
			stats.set_bool(MPX .. "AWD_ALL_IN_ORDER", true)
			stats.set_bool(MPX .. "AWD_SUPPORTING_ROLE", true)
			stats.set_bool(MPX .. "AWD_LEADER", true)
			stats.set_bool(MPX .. "AWD_SURVIVALIST", true)
			Paragon = stats.get_bool(MPX .. "CAS_VEHICLE_REWARD")
			if Paragon == true then
				stats.set_bool(MPX .. "CAS_VEHICLE_REWARD", true)
			else
				stats.set_bool(MPX .. "CAS_VEHICLE_REWARD", false)
			end
			for i = 0, 6 do
				for j = 0, 63 do
					stats.set_bool_masked(MPX .. "CASINOPSTAT_BOOL" .. i, true, j, MPX)
				end
			end		end)
        JSXX:add_sameline()   ------同行
		JSXX:add_button("钻石赌场盗窃案", function()
			stats.set_int(MPX .. "CAS_HEIST_NOTS", -1)
			stats.set_int(MPX .. "CAS_HEIST_FLOW", -1)
			stats.set_int(MPX .. "SIGNAL_JAMMERS_COLLECTED", 50)
			stats.set_int(MPX .. "AWD_PREPARATION", 40)
			stats.set_int(MPX .. "AWD_ASLEEPONJOB", 20)
			stats.set_int(MPX .. "AWD_DAICASHCRAB", 100000)
			stats.set_int(MPX .. "AWD_BIGBRO", 40)
			stats.set_int(MPX .. "AWD_SHARPSHOOTER", 40)
			stats.set_int(MPX .. "AWD_RACECHAMP", 40)
			stats.set_int(MPX .. "AWD_BATSWORD", 1000000)
			stats.set_int(MPX .. "AWD_COINPURSE", 950000)
			stats.set_int(MPX .. "AWD_ASTROCHIMP", 3000000)
			stats.set_int(MPX .. "AWD_MASTERFUL", 40000)
			stats.set_int(MPX .. "H3_BOARD_DIALOGUE0", -1)
			stats.set_int(MPX .. "H3_BOARD_DIALOGUE1", -1)
			stats.set_int(MPX .. "H3_BOARD_DIALOGUE2", -1)
			stats.set_int(MPX .. "H3_VEHICLESUSED", -1)
			stats.set_int(MPX .. "H3_CR_STEALTH_1A", 100)
			stats.set_int(MPX .. "H3_CR_STEALTH_2B_RAPP", 100)
			stats.set_int(MPX .. "H3_CR_STEALTH_2C_SIDE", 100)
			stats.set_int(MPX .. "H3_CR_STEALTH_3A", 100)
			stats.set_int(MPX .. "H3_CR_STEALTH_4A", 100)
			stats.set_int(MPX .. "H3_CR_STEALTH_5A", 100)
			stats.set_int(MPX .. "H3_CR_SUBTERFUGE_1A", 100)
			stats.set_int(MPX .. "H3_CR_SUBTERFUGE_2A", 100)
			stats.set_int(MPX .. "H3_CR_SUBTERFUGE_2B", 100)
			stats.set_int(MPX .. "H3_CR_SUBTERFUGE_3A", 100)
			stats.set_int(MPX .. "H3_CR_SUBTERFUGE_3B", 100)
			stats.set_int(MPX .. "H3_CR_SUBTERFUGE_4A", 100)
			stats.set_int(MPX .. "H3_CR_SUBTERFUGE_5A", 100)
			stats.set_int(MPX .. "H3_CR_DIRECT_1A", 100)
			stats.set_int(MPX .. "H3_CR_DIRECT_2A1", 100)
			stats.set_int(MPX .. "H3_CR_DIRECT_2A2", 100)
			stats.set_int(MPX .. "H3_CR_DIRECT_2BP", 100)
			stats.set_int(MPX .. "H3_CR_DIRECT_2C", 100)
			stats.set_int(MPX .. "H3_CR_DIRECT_3A", 100)
			stats.set_int(MPX .. "H3_CR_DIRECT_4A", 100)
			stats.set_int(MPX .. "H3_CR_DIRECT_5A", 100)
			stats.set_int(MPX .. "CR_ORDER", 100)
			stats.set_bool(MPX .. "AWD_SCOPEOUT", true)
			stats.set_bool(MPX .. "AWD_CREWEDUP", true)
			stats.set_bool(MPX .. "AWD_MOVINGON", true)
			stats.set_bool(MPX .. "AWD_PROMOCAMP", true)
			stats.set_bool(MPX .. "AWD_GUNMAN", true)
			stats.set_bool(MPX .. "AWD_SMASHNGRAB", true)
			stats.set_bool(MPX .. "AWD_INPLAINSI", true)
			stats.set_bool(MPX .. "AWD_UNDETECTED", true)
			stats.set_bool(MPX .. "AWD_ALLROUND", true)
			stats.set_bool(MPX .. "AWD_ELITETHEIF", true)
			stats.set_bool(MPX .. "AWD_PRO", true)
			stats.set_bool(MPX .. "AWD_SUPPORTACT", true)
			stats.set_bool(MPX .. "AWD_SHAFTED", true)
			stats.set_bool(MPX .. "AWD_COLLECTOR", true)
			stats.set_bool(MPX .. "AWD_DEADEYE", true)
			stats.set_bool(MPX .. "AWD_PISTOLSATDAWN", true)
			stats.set_bool(MPX .. "AWD_TRAFFICAVOI", true)
			stats.set_bool(MPX .. "AWD_CANTCATCHBRA", true)
			stats.set_bool(MPX .. "AWD_WIZHARD", true)
			stats.set_bool(MPX .. "AWD_APEESCAPE", true)
			stats.set_bool(MPX .. "AWD_MONKEYKIND", true)
			stats.set_bool(MPX .. "AWD_AQUAAPE", true)
			stats.set_bool(MPX .. "AWD_KEEPFAITH", true)
			stats.set_bool(MPX .. "AWD_TRUELOVE", true)
			stats.set_bool(MPX .. "AWD_NEMESIS", true)
			stats.set_bool(MPX .. "AWD_FRIENDZONED", true)
			stats.set_bool(MPX .. "VCM_FLOW_CS_RSC_SEEN", true)
			stats.set_bool(MPX .. "VCM_FLOW_CS_BWL_SEEN", true)
			stats.set_bool(MPX .. "VCM_FLOW_CS_MTG_SEEN", true)
			stats.set_bool(MPX .. "VCM_FLOW_CS_OIL_SEEN", true)
			stats.set_bool(MPX .. "VCM_FLOW_CS_DEF_SEEN", true)
			stats.set_bool(MPX .. "VCM_FLOW_CS_FIN_SEEN", true)
			stats.set_bool(MPX .. "HELP_FURIA", true)
			stats.set_bool(MPX .. "HELP_MINITAN", true)
			stats.set_bool(MPX .. "HELP_YOSEMITE2", true)
			stats.set_bool(MPX .. "HELP_ZHABA", true)
			stats.set_bool(MPX .. "HELP_IMORGEN", true)
			stats.set_bool(MPX .. "HELP_SULTAN2", true)
			stats.set_bool(MPX .. "HELP_VAGRANT", true)
			stats.set_bool(MPX .. "HELP_VSTR", true)
			stats.set_bool(MPX .. "HELP_STRYDER", true)
			stats.set_bool(MPX .. "HELP_SUGOI", true)
			stats.set_bool(MPX .. "HELP_KANJO", true)
			stats.set_bool(MPX .. "HELP_FORMULA", true)
			stats.set_bool(MPX .. "HELP_FORMULA2", true)
			stats.set_bool(MPX .. "HELP_JB7002", true)
			for i = 0, 4 do
				for j = 0, 63 do
					stats.set_bool_masked(MPX .. "CASINOHSTPSTAT_BOOL" .. i, true, j, MPX)
				end
			end		end)
        JSXX:add_sameline()   ------同行
		JSXX:add_button("街机游戏", function()
			stats.set_int(MPX .. "AWD_PREPARATION", 50)
			stats.set_int(MPX .. "AWD_ASLEEPONJOB", 20)
			stats.set_int(MPX .. "AWD_DAICASHCRAB", 100000)
			stats.set_int(MPX .. "AWD_BIGBRO", 40)
			stats.set_int(MPX .. "AWD_SHARPSHOOTER", 40)
			stats.set_int(MPX .. "AWD_RACECHAMP", 40)
			stats.set_int(MPX .. "AWD_BATSWORD", 1000000)
			stats.set_int(MPX .. "AWD_COINPURSE", 950000)
			stats.set_int(MPX .. "AWD_ASTROCHIMP", 3000000)
			stats.set_int(MPX .. "AWD_MASTERFUL", 40000)
			stats.set_int(MPX .. "SCGW_NUM_WINS_GANG_0", 50)
			stats.set_int(MPX .. "SCGW_NUM_WINS_GANG_1", 50)
			stats.set_int(MPX .. "SCGW_NUM_WINS_GANG_2", 50)
			stats.set_int(MPX .. "SCGW_NUM_WINS_GANG_3", 50)
			stats.set_int(MPX .. "CH_ARC_CAB_CLAW_TROPHY", -1)
			stats.set_int(MPX .. "CH_ARC_CAB_LOVE_TROPHY", -1)
			stats.set_int(MPX .. "IAP_MAX_MOON_DIST", 2147483647)
			stats.set_int(MPX .. "SCGW_INITIALS_0", 69644)
			stats.set_int(MPX .. "SCGW_INITIALS_1", 50333)
			stats.set_int(MPX .. "SCGW_INITIALS_2", 63512)
			stats.set_int(MPX .. "SCGW_INITIALS_3", 46136)
			stats.set_int(MPX .. "SCGW_INITIALS_4", 21638)
			stats.set_int(MPX .. "SCGW_INITIALS_5", 2133)
			stats.set_int(MPX .. "SCGW_INITIALS_6", 1215)
			stats.set_int(MPX .. "SCGW_INITIALS_7", 2444)
			stats.set_int(MPX .. "SCGW_INITIALS_8", 38023)
			stats.set_int(MPX .. "SCGW_INITIALS_9", 2233)
			stats.set_int(MPX .. "FOOTAGE_INITIALS_0", 0)
			stats.set_int(MPX .. "FOOTAGE_INITIALS_1", 64)
			stats.set_int(MPX .. "FOOTAGE_INITIALS_2", 8457)
			stats.set_int(MPX .. "FOOTAGE_INITIALS_3", 91275)
			stats.set_int(MPX .. "FOOTAGE_INITIALS_4", 53260)
			stats.set_int(MPX .. "FOOTAGE_INITIALS_5", 78663)
			stats.set_int(MPX .. "FOOTAGE_INITIALS_6", 25103)
			stats.set_int(MPX .. "FOOTAGE_INITIALS_7", 102401)
			stats.set_int(MPX .. "FOOTAGE_INITIALS_8", 12672)
			stats.set_int(MPX .. "FOOTAGE_INITIALS_9", 74380)
			stats.set_int(MPX .. "FOOTAGE_SCORE_0", 284544)
			stats.set_int(MPX .. "FOOTAGE_SCORE_1", 275758)
			stats.set_int(MPX .. "FOOTAGE_SCORE_2", 100000)
			stats.set_int(MPX .. "FOOTAGE_SCORE_3", 90000)
			stats.set_int(MPX .. "FOOTAGE_SCORE_4", 80000)
			stats.set_int(MPX .. "FOOTAGE_SCORE_5", 70000)
			stats.set_int(MPX .. "FOOTAGE_SCORE_6", 60000)
			stats.set_int(MPX .. "FOOTAGE_SCORE_7", 50000)
			stats.set_int(MPX .. "FOOTAGE_SCORE_8", 40000)
			stats.set_int(MPX .. "FOOTAGE_SCORE_9", 30000)
			for i = 0, 9 do
				stats.set_int(MPX .. "IAP_INITIALS_" .. i, 50)
				stats.set_int(MPX .. "IAP_SCORE_" .. i, 50)
				stats.set_int(MPX .. "IAP_SCORE_" .. i, 50)
				stats.set_int(MPX .. "SCGW_SCORE_" .. i, 50)
				stats.set_int(MPX .. "DG_DEFENDER_INITIALS_" .. i, 69644)
				stats.set_int(MPX .. "DG_DEFENDER_SCORE_" .. i, 50)
				stats.set_int(MPX .. "DG_MONKEY_INITIALS_" .. i, 69644)
				stats.set_int(MPX .. "DG_MONKEY_SCORE_" .. i, 50)
				stats.set_int(MPX .. "DG_PENETRATOR_INITIALS_" .. i, 69644)
				stats.set_int(MPX .. "DG_PENETRATOR_SCORE_" .. i, 50)
				stats.set_int(MPX .. "GGSM_INITIALS_" .. i, 69644)
				stats.set_int(MPX .. "GGSM_SCORE_" .. i, 50)
				stats.set_int(MPX .. "TWR_INITIALS_" .. i, 69644)
				stats.set_int(MPX .. "TWR_SCORE_" .. i, 50)
			end
			stats.set_bool(MPX .. "AWD_SCOPEOUT", true)
			stats.set_bool(MPX .. "AWD_CREWEDUP", true)
			stats.set_bool(MPX .. "AWD_MOVINGON", true)
			stats.set_bool(MPX .. "AWD_PROMOCAMP", true)
			stats.set_bool(MPX .. "AWD_GUNMAN", true)
			stats.set_bool(MPX .. "AWD_SMASHNGRAB", true)
			stats.set_bool(MPX .. "AWD_INPLAINSI", true)
			stats.set_bool(MPX .. "AWD_UNDETECTED", true)
			stats.set_bool(MPX .. "AWD_ALLROUND", true)
			stats.set_bool(MPX .. "AWD_ELITETHEIF", true)
			stats.set_bool(MPX .. "AWD_PRO", true)
			stats.set_bool(MPX .. "AWD_SUPPORTACT", true)
			stats.set_bool(MPX .. "AWD_SHAFTED", true)
			stats.set_bool(MPX .. "AWD_COLLECTOR", true)
			stats.set_bool(MPX .. "AWD_DEADEYE", true)
			stats.set_bool(MPX .. "AWD_PISTOLSATDAWN", true)
			stats.set_bool(MPX .. "AWD_TRAFFICAVOI", true)
			stats.set_bool(MPX .. "AWD_CANTCATCHBRA", true)
			stats.set_bool(MPX .. "AWD_WIZHARD", true)
			stats.set_bool(MPX .. "AWD_APEESCAP", true)
			stats.set_bool(MPX .. "AWD_MONKEYKIND", true)
			stats.set_bool(MPX .. "AWD_AQUAAPE", true)
			stats.set_bool(MPX .. "AWD_KEEPFAITH", true)
			stats.set_bool(MPX .. "AWD_TRUELOVE", true)
			stats.set_bool(MPX .. "AWD_NEMESIS", true)
			stats.set_bool(MPX .. "AWD_FRIENDZONED", true)
			stats.set_bool(MPX .. "IAP_CHALLENGE_0", true)
			stats.set_bool(MPX .. "IAP_CHALLENGE_1", true)
			stats.set_bool(MPX .. "IAP_CHALLENGE_2", true)
			stats.set_bool(MPX .. "IAP_CHALLENGE_3", true)
			stats.set_bool(MPX .. "IAP_CHALLENGE_4", true)
			stats.set_bool(MPX .. "IAP_GOLD_TANK", true)
			stats.set_bool(MPX .. "SCGW_WON_NO_DEATHS", true)
			for j = 290449, 290468 do
				globals.set_int(j, 1)
			end
			for i = 0, 4 do
				for j = 0, 63 do
					stats.set_bool_masked(MPX .. "CASINOHSTPSTAT_BOOL" .. i, true, j, MPX)
				end
			end
			for i = 0, 6 do
				for j = 0, 63 do
					stats.set_bool_masked(MPX .. "CASINOPSTAT_BOOL" .. i, true, j, MPX)
				end
			end		end)
        JSXX:add_sameline()   ------同行
		JSXX:add_button("LS 夏季特Ji", function()
			stats.set_bool(MPX .. "AWD_KINGOFQUB3D", true)
			stats.set_bool(MPX .. "AWD_QUBISM", true)
			stats.set_bool(MPX .. "AWD_QUIBITS", true)
			stats.set_bool(MPX .. "AWD_GODOFQUB3D", true)
			stats.set_bool(MPX .. "AWD_ELEVENELEVEN", true)
			stats.set_bool(MPX .. "AWD_GOFOR11TH", true)
			stats.set_masked_int(MPX .. "SU20PSTAT_INT", 1, 35, 8)
			for i = 0, 1 do
				for j = 0, 63 do
					stats.set_bool_masked(MPX .. "SU20PSTAT_BOOL" .. i, true, j, MPX)
					stats.set_bool_masked(MPX .. "SU20TATTOOSTAT_BOOL" .. i, true, j, MPX)
				end
			end		end)
        JSXX:add_sameline()   ------同行
		JSXX:add_button("佩里科岛", function()
			stats.set_bool(MPX .. "AWD_INTELGATHER", true)
			stats.set_bool(MPX .. "AWD_COMPOUNDINFILT", true)
			stats.set_bool(MPX .. "AWD_LOOT_FINDER", true)
			stats.set_bool(MPX .. "AWD_MAX_DISRUPT", true)
			stats.set_bool(MPX .. "AWD_THE_ISLAND_HEIST", true)
			stats.set_bool(MPX .. "AWD_GOING_ALONE", true)
			stats.set_bool(MPX .. "AWD_TEAM_WORK", true)
			stats.set_bool(MPX .. "AWD_MIXING_UP", true)
			stats.set_bool(MPX .. "AWD_TEAM_WORK", true)
			stats.set_bool(MPX .. "AWD_MIXING_UP", true)
			stats.set_bool(MPX .. "AWD_PRO_THIEF", true)
			stats.set_bool(MPX .. "AWD_CAT_BURGLAR", true)
			stats.set_bool(MPX .. "AWD_ONE_OF_THEM", true)
			stats.set_bool(MPX .. "AWD_GOLDEN_GUN", true)
			stats.set_bool(MPX .. "AWD_ELITE_THIEF", true)
			stats.set_bool(MPX .. "AWD_PROFESSIONAL", true)
			stats.set_bool(MPX .. "AWD_HELPING_OUT", true)
			stats.set_bool(MPX .. "AWD_COURIER", true)
			stats.set_bool(MPX .. "AWD_PARTY_VIBES", true)
			stats.set_bool(MPX .. "AWD_HELPING_HAND", true)
			stats.set_bool(MPX .. "AWD_ELEVENELEVEN", true)
			stats.set_bool(MPX .. "COMPLETE_H4_F_USING_VETIR", true)
			stats.set_bool(MPX .. "COMPLETE_H4_F_USING_LONGFIN", true)
			stats.set_bool(MPX .. "COMPLETE_H4_F_USING_ANNIH", true)
			stats.set_bool(MPX .. "COMPLETE_H4_F_USING_ALKONOS", true)
			stats.set_bool(MPX .. "COMPLETE_H4_F_USING_PATROLB", true)
			stats.set_int(MPX .. "AWD_LOSTANDFOUND", 500000)
			stats.set_int(MPX .. "AWD_SUNSET", 1800000)
			stats.set_int(MPX .. "AWD_TREASURE_HUNTER", 1000000)
			stats.set_int(MPX .. "AWD_WRECK_DIVING", 1000000)
			stats.set_int(MPX .. "AWD_KEINEMUSIK", 1800000)
			stats.set_int(MPX .. "AWD_PALMS_TRAX", 1800000)
			stats.set_int(MPX .. "AWD_MOODYMANN", 1800000)
			stats.set_int(MPX .. "AWD_FILL_YOUR_BAGS", 1000000000)
			stats.set_int(MPX .. "AWD_WELL_PREPARED", 80)
			stats.set_int(MPX .. "H4_H4_DJ_MISSIONS", -1)
			stats.set_int(MPX .. "H4CNF_APPROACH", -1)
			stats.set_int(MPX .. "H4_MISSIONS", -1)
			stats.set_int(MPX .. "H4_PLAYTHROUGH_STATUS", 100)
			for i = 0, 2 do
				for j = 0, 63 do
					stats.set_bool_masked(MPX .. "HISLANDPSTAT_BOOL" .. i, true, j, MPX)
				end
			end		end)
        JSXX:add_sameline()   ------同行
		JSXX:add_button("LS Tuners", function()
			stats.set_int(MPX .. "AWD_CAR_CLUB_MEM", 100)
			stats.set_int(MPX .. "AWD_SPRINTRACER", 50)
			stats.set_int(MPX .. "AWD_STREETRACER", 50)
			stats.set_int(MPX .. "AWD_PURSUITRACER", 50)
			stats.set_int(MPX .. "AWD_TEST_CAR", 240)
			stats.set_int(MPX .. "AWD_AUTO_SHOP", 50)
			stats.set_int(MPX .. "AWD_GROUNDWORK", 40)
			stats.set_int(MPX .. "AWD_CAR_EXPORT", 100)
			stats.set_int(MPX .. "AWD_ROBBERY_CONTRACT", 100)
			stats.set_int(MPX .. "AWD_FACES_OF_DEATH", 100)
			stats.set_bool(MPX .. "AWD_CAR_CLUB", true)
			stats.set_bool(MPX .. "AWD_PRO_CAR_EXPORT", true)
			stats.set_bool(MPX .. "AWD_UNION_DEPOSITORY", true)
			stats.set_bool(MPX .. "AWD_MILITARY_CONVOY", true)
			stats.set_bool(MPX .. "AWD_FLEECA_BANK", true)
			stats.set_bool(MPX .. "AWD_FREIGHT_TRAIN", true)
			stats.set_bool(MPX .. "AWD_BOLINGBROKE_ASS", true)
			stats.set_bool(MPX .. "AWD_IAA_RAID", true)
			stats.set_bool(MPX .. "AWD_METH_JOB", true)
			stats.set_bool(MPX .. "AWD_BUNKER_RAID", true)
			stats.set_bool(MPX .. "AWD_STRAIGHT_TO_VIDEO", true)
			stats.set_bool(MPX .. "AWD_MONKEY_C_MONKEY_DO", true)
			stats.set_bool(MPX .. "AWD_TRAINED_TO_KILL", true)
			stats.set_bool(MPX .. "AWD_DIRECTOR", true)
			for i = 0, 8 do
				for j = 0, 63 do
					stats.set_bool_masked(MPX .. "TUNERPSTAT_BOOL" .. i, true, j, MPX)
				end
			end		end)
        JSXX:add_sameline()   ------同行
		JSXX:add_button("合同", function()
			stats.set_int(MPX .. "AWD_CONTRACTOR", 50)
			stats.set_int(MPX .. "AWD_COLD_CALLER", 50)
			stats.set_int(MPX .. "AWD_PRODUCER", 60)
			stats.set_int(MPX .. "FIXERTELEPHONEHITSCOMPL", 10)
			stats.set_int(MPX .. "PAYPHONE_BONUS_KILL_METHOD", 10)
			stats.set_int(MPX .. "PAYPHONE_BONUS_KILL_METHOD", -1)
			stats.set_int(MPX .. "FIXER_GENERAL_BS", -1)
			stats.set_int(MPX .. "FIXER_COMPLETED_BS", -1)
			stats.set_int(MPX .. "FIXER_STORY_BS", -1)
			stats.set_int(MPX .. "FIXER_STORY_STRAND", -1)
			stats.set_int(MPX .. "FIXER_STORY_COOLDOWN", -1)
			stats.set_int(MPX .. "FIXER_COUNT", 510)
			stats.set_int(MPX .. "FIXER_SC_VEH_RECOVERED", 85)
			stats.set_int(MPX .. "FIXER_SC_VAL_RECOVERED", 85)
			stats.set_int(MPX .. "FIXER_SC_GANG_TERMINATED", 85)
			stats.set_int(MPX .. "FIXER_SC_VIP_RESCUED", 85)
			stats.set_int(MPX .. "FIXER_SC_ASSETS_PROTECTED", 85)
			stats.set_int(MPX .. "FIXER_SC_EQ_DESTROYED", 85)
			stats.set_int(MPX .. "FIXER_EARNINGS", 19734860)
			stats.set_bool(MPX .. "AWD_TEEING_OFF", true)
			stats.set_bool(MPX .. "AWD_PARTY_NIGHT", true)
			stats.set_bool(MPX .. "AWD_BILLIONAIRE_GAMES", true)
			stats.set_bool(MPX .. "AWD_HOOD_PASS", true)
			stats.set_bool(MPX .. "AWD_STUDIO_TOUR", true)
			stats.set_bool(MPX .. "AWD_DONT_MESS_DRE", true)
			stats.set_bool(MPX .. "AWD_BACKUP", true)
			stats.set_bool(MPX .. "AWD_SHORTFRANK_1", true)
			stats.set_bool(MPX .. "AWD_SHORTFRANK_2", true)
			stats.set_bool(MPX .. "AWD_SHORTFRANK_3", true)
			stats.set_bool(MPX .. "AWD_CONTR_KILLER", true)
			stats.set_bool(MPX .. "AWD_DOGS_BEST_FRIEND", true)
			stats.set_bool(MPX .. "AWD_MUSIC_STUDIO", true)
			stats.set_bool(MPX .. "AWD_SHORTLAMAR_1", true)
			stats.set_bool(MPX .. "AWD_SHORTLAMAR_2", true)
			stats.set_bool(MPX .. "AWD_SHORTLAMAR_3", true)
			stats.set_bool(MPX .. "BS_FRANKLIN_DIALOGUE_0", true)
			stats.set_bool(MPX .. "BS_FRANKLIN_DIALOGUE_1", true)
			stats.set_bool(MPX .. "BS_FRANKLIN_DIALOGUE_2", true)
			stats.set_bool(MPX .. "BS_IMANI_D_APP_SETUP", true)
			stats.set_bool(MPX .. "BS_IMANI_D_APP_STRAND", true)
			stats.set_bool(MPX .. "BS_IMANI_D_APP_PARTY", true)
			stats.set_bool(MPX .. "BS_IMANI_D_APP_PARTY_2", true)
			stats.set_bool(MPX .. "BS_IMANI_D_APP_PARTY_F", true)
			stats.set_bool(MPX .. "BS_IMANI_D_APP_BILL", true)
			stats.set_bool(MPX .. "BS_IMANI_D_APP_BILL_2", true)
			stats.set_bool(MPX .. "BS_IMANI_D_APP_BILL_F", true)
			stats.set_bool(MPX .. "BS_IMANI_D_APP_HOOD", true)
			stats.set_bool(MPX .. "BS_IMANI_D_APP_HOOD_2", true)
			stats.set_bool(MPX .. "BS_IMANI_D_APP_HOOD_F", true)
			for j = 0, 63 do
				stats.set_bool_masked(MPX .. "FIXERPSTAT_BOOL0", true, j, MPX)
				stats.set_bool_masked(MPX .. "FIXERPSTAT_BOOL1", true, j, MPX)
				stats.set_bool_masked(MPX .. "FIXERTATTOOSTAT_BOOL0", true, j, MPX)
			end		end)




        JSXX:add_separator()  ------分割线

    --属性相关----------------------------------------------------------------------------------

        JSXX:add_button("属性全满", function()
	        stats.set_int(MPX .. "SCRIPT_INCREASE_DRIV", 100)
	        stats.set_int(MPX .. "SCRIPT_INCREASE_FLY", 100)
	        stats.set_int(MPX .. "SCRIPT_INCREASE_LUNG", 100)
	        stats.set_int(MPX .. "SCRIPT_INCREASE_SHO", 100)
	        stats.set_int(MPX .. "SCRIPT_INCREASE_STAM", 100)
	        stats.set_int(MPX .. "SCRIPT_INCREASE_STL", 100)
	        stats.set_int(MPX .. "SCRIPT_INCREASE_STRN", 100)        end)
        JSXX:add_sameline()   ------同行
        JSXX:add_button("属性清零", function()
	        stats.set_int(MPX .. "SCRIPT_INCREASE_DRIV", 0)
	        stats.set_int(MPX .. "SCRIPT_INCREASE_FLY", 0)
	        stats.set_int(MPX .. "SCRIPT_INCREASE_LUNG", 0)
	        stats.set_int(MPX .. "SCRIPT_INCREASE_SHO", 0)
	        stats.set_int(MPX .. "SCRIPT_INCREASE_STAM", 0)
	        stats.set_int(MPX .. "SCRIPT_INCREASE_STL", 0)
	        stats.set_int(MPX .. "SCRIPT_INCREASE_STRN", 0)        end)
        JSXX:add_sameline()   ------同行
        JSXX:add_button("快速运行并重新加载", function()
	        stats.set_int(MPX .. "CHAR_ABILITY_1_UNLCK", -1)
	        stats.set_int(MPX .. "CHAR_ABILITY_2_UNLCK", -1)
	        stats.set_int(MPX .. "CHAR_ABILITY_3_UNLCK", -1)
	        stats.set_int(MPX .. "CHAR_FM_ABILITY_1_UNLCK", -1)
	        stats.set_int(MPX .. "CHAR_FM_ABILITY_2_UNLCK", -1)
	        stats.set_int(MPX .. "CHAR_FM_ABILITY_3_UNLCK", -1)
	        globals.set_int(1575020, 1)
	        globals.set_int(1574589, 1)

	        globals.set_int(1574589, 0)        end)
        JSXX:add_sameline()   ------同行
        JSXX:add_button("重置快速运行并重新加载", function()
	        stats.set_int(MPX .. "CHAR_ABILITY_1_UNLCK", 0)
	        stats.set_int(MPX .. "CHAR_ABILITY_2_UNLCK", 0)
	        stats.set_int(MPX .. "CHAR_ABILITY_3_UNLCK", 0)
	        stats.set_int(MPX .. "CHAR_FM_ABILITY_1_UNLCK", 0)
	        stats.set_int(MPX .. "CHAR_FM_ABILITY_2_UNLCK", 0)
	        stats.set_int(MPX .. "CHAR_FM_ABILITY_3_UNLCK", 0)
	        globals.set_int(1575020, 1)
	        globals.set_int(1574589, 1)

	        globals.set_int(1574589, 0)        end)
        JSXX:add_sameline()   ------同行
        JSXX:add_button("清除报告", function()
			stats.set_int("MPPLY_REPORT_STRENGTH", 0)
			stats.set_int("MPPLY_COMMEND_STRENGTH", 0)
			stats.set_int("MPPLY_GRIEFING", 0)
			stats.set_int("MPPLY_VC_ANNOYINGME", 0)
			stats.set_int("MPPLY_VC_HATE", 0)
			stats.set_int("MPPLY_TC_ANNOYINGME", 0)
			stats.set_int("MPPLY_TC_HATE", 0)
			stats.set_int("MPPLY_OFFENSIVE_LANGUAGE", 0)
			stats.set_int("MPPLY_OFFENSIVE_TAGPLATE", 0)
			stats.set_int("MPPLY_OFFENSIVE_UGC", 0)
			stats.set_int("MPPLY_BAD_CREW_NAME", 0)
			stats.set_int("MPPLY_BAD_CREW_MOTTO", 0)
			stats.set_int("MPPLY_BAD_CREW_STATUS", 0)
			stats.set_int("MPPLY_BAD_CREW_EMBLEM", 0)
			stats.set_int("MPPLY_EXPLOITS", 0)
			stats.set_int("MPPLY_BECAME_BADSPORT_NUM", 0)
			stats.set_int("MPPLY_DESTROYED_PVEHICLES", 0)
			stats.set_int("MPPLY_BECAME_CHEATER_NUM", 0)
			stats.set_int("MPPLY_BADSPORT_MESSAGE", 0)
			stats.set_int("MPPLY_GAME_EXPLOITS", 0)
			stats.set_int("MPPLY_PLAYER_MENTAL_STATE", 0)
			stats.set_int("MPPLY_PLAYERMADE_TITLE", 0)
			stats.set_int("MPPLY_PLAYERMADE_DESC", 0)
			stats.set_bool("MPPLY_ISPUNISHED", false)
			stats.set_bool("MPPLY_WAS_I_BAD_SPORT", false)
			stats.set_bool("MPPLY_WAS_I_CHEATER", false)
			stats.set_bool("MPPLY_CHAR_IS_BADSPORT", false)
			stats.set_int("MPPLY_OVERALL_BADSPORT", 0)
			stats.set_int("MPPLY_OVERALL_CHEAT", 0)        end)
        JSXX:add_button("清除精神状态", function()
            stats.set_int(MPX .. "BAD_SPORT_BITSET",0)
            stats.set_int(MPX .. "MPPLY_WAS_I_BAD_SPORT",0)
            stats.set_int(MPX .. "MPPLY_OVERALL_BADSPORT",0)
            stats.set_int(MPX .. "MPPLY_CHAR_IS_BADSPORT",0)
            stats.set_int(MPX .. "MPPLY_BECAME_BADSPORT_NUM",0)
            stats.set_int(MPX .. "MPPLY_DESTROYED_PVEHICLES",0)
            stats.set_int("MPPLY_REPORT_STRENGTH",0);
            stats.set_int("MPPLY_COMMEND_STRENGTH",100);
            stats.set_int("MPPLY_FRIENDLY",100);
            stats.set_int("MPPLY_HELPFUL",100);
            stats.set_int("MPPLY_GRIEFING",0);
            stats.set_int("MPPLY_VC_ANNOYINGME",0);
            stats.set_int("MPPLY_VC_HATE",0);
            stats.set_int("MPPLY_OFFENSIVE_LANGUAGE",0);
            stats.set_int("MPPLY_OFFENSIVE_TAGPLATE",0);
            stats.set_int("MPPLY_OFFENSIVE_UGC",0);
            stats.set_int("MPPLY_BAD_CREW_NAME",0);
            stats.set_int("MPPLY_BAD_CREW_MOTTO",0);
            stats.set_int("MPPLY_BAD_CREW_STATUS",0);
            stats.set_int("MPPLY_BAD_CREW_EMBLEM",0);
            stats.set_int("MPPLY_GAME_EXPLOITS",0);
            stats.set_int("MPPLY_EXPLOITS",0);
            stats.set_int("MPPLY_ISPUNISHED",0);
            stats.set_int("MP1_BAD_SPORT_BITSET",0)
            stats.set_int("MP1_MPPLY_WAS_I_BAD_SPORT",0)
            stats.set_int("MP1_MPPLY_OVERALL_BADSPORT",0)
            stats.set_int("MP1_MPPLY_CHAR_IS_BADSPORT",0)
            stats.set_int("MP1_MPPLY_BECAME_BADSPORT_NUM",0)
            stats.set_int("MP1_MPPLY_DESTROYED_PVEHICLES",0)        end)



        JSXX:add_separator()  ------分割线

    --其它一些解锁----------------------------------------------------------------------------------

		JSXX:add_button("阻止所有人使用天基炮", function()
			script.run_in_fiber(function (blockorbroom)

				local objHash = joaat("prop_fnclink_03e")
				STREAMING.REQUEST_MODEL(objHash)
				while not STREAMING.HAS_MODEL_LOADED(objHash) do
					STREAMING.REQUEST_MODEL(objHash)
					log.info(3)
					blockorbroom:yield()
				end   

				local object = {}
    
				object[1] = OBJECT.CREATE_OBJECT(objHash, 335.8 - 1.5,4833.9 + 1.5, -60,true, 1, 0)
				object[2] = OBJECT.CREATE_OBJECT(objHash, 335.8 - 1.5,4833.9 - 1.5, -60,true, 1, 0)
    
				object[3] = OBJECT.CREATE_OBJECT(objHash, 335.8 + 1.5,4833.9 + 1.5, -60,true, 1, 0)
				local rot_3 = ENTITY.GET_ENTITY_ROTATION(object[3], 2)
				rot_3.z = -90.0
				ENTITY.SET_ENTITY_ROTATION(object[3], rot_3.x, rot_3.y, rot_3.z, 1, true)
    
				object[4] = OBJECT.CREATE_OBJECT(objHash, 335.8 - 1.5,4833.9 + 1.5, -60,true, 1, 0)
				local rot_4 = ENTITY.GET_ENTITY_ROTATION(object[4], 2)
				rot_4.z = -90.0
				ENTITY.SET_ENTITY_ROTATION(object[4], rot_4.x, rot_4.y,rot_4.z, 1, true)
				ENTITY.IS_ENTITY_STATIC(object[1]) 
				ENTITY.IS_ENTITY_STATIC(object[2])
				ENTITY.IS_ENTITY_STATIC(object[3])
				ENTITY.IS_ENTITY_STATIC(object[4])
				ENTITY.SET_ENTITY_CAN_BE_DAMAGED(object[1], false) 
				ENTITY.SET_ENTITY_CAN_BE_DAMAGED(object[2], false) 
				ENTITY.SET_ENTITY_CAN_BE_DAMAGED(object[3], false) 
				ENTITY.SET_ENTITY_CAN_BE_DAMAGED(object[4], false) 
    
				for i = 1, 4 do ENTITY.FREEZE_ENTITY_POSITION(object[i], true) end
				STREAMING.SET_MODEL_AS_NO_LONGER_NEEDED(objHash)
    
			end)    end)
        JSXX:add_sameline()   ------同行
        JSXX:add_button("删除交易错误", function()
            for i = 4536677, 4536679 do globals.set_int(i, 0) end     end)
        JSXX:add_sameline()   ------同行
        JSXX:add_button("解锁所有联系人", function()
	        stats.set_int(MPX .. "FM_ACT_PHN", -1)
	        stats.set_int(MPX .. "FM_ACT_PH2", -1)
	        stats.set_int(MPX .. "FM_ACT_PH3", -1)
	        stats.set_int(MPX .. "FM_ACT_PH4", -1)
	        stats.set_int(MPX .. "FM_ACT_PH5", -1)
	        stats.set_int(MPX .. "FM_VEH_TX1", -1)
	        stats.set_int(MPX .. "FM_ACT_PH6", -1)
	        stats.set_int(MPX .. "FM_ACT_PH7", -1)
	        stats.set_int(MPX .. "FM_ACT_PH8", -1)
	        stats.set_int(MPX .. "FM_ACT_PH9", -1)
            stats.set_int(MPX .. "FM_CUT_DONE", -1)
            stats.set_int(MPX .. "FM_CUT_DONE_2", -1)        end)
        JSXX:add_sameline()   ------同行
		JSXX:add_button("解锁所有飞行学校", function()
			stats.set_int("MPPLY_NUM_CAPTURES_CREATED", 100)
			for i = 0, 9 do
				stats.set_int("MPPLY_PILOT_SCHOOL_MEDAL_" .. i, -1)
				stats.set_int(MPX .. "PILOT_SCHOOL_MEDAL_" .. i, -1)
				stats.set_bool(MPX .. "PILOT_ASPASSEDLESSON_" .. i, true)
			end		end)
        JSXX:add_sameline()   ------同行
        JSXX:add_button("通关全部飞行驾校", function()
            stats.set_bool(MPX .. "PILOT_ASPASSEDLESSON_0", true)
	        stats.set_bool(MPX .. "PILOT_ASPASSEDLESSON_1", true)
	        stats.set_bool(MPX .. "PILOT_ASPASSEDLESSON_2", true)
	        stats.set_bool(MPX .. "PILOT_ASPASSEDLESSON_3", true)
	        stats.set_bool(MPX .. "PILOT_ASPASSEDLESSON_4", true)
	        stats.set_bool(MPX .. "PILOT_ASPASSEDLESSON_5", true)
	        stats.set_bool(MPX .. "PILOT_ASPASSEDLESSON_6", true)
	        stats.set_bool(MPX .. "PILOT_ASPASSEDLESSON_7", true)
	        stats.set_bool(MPX .. "PILOT_ASPASSEDLESSON_8", true)
	        stats.set_bool(MPX .. "PILOT_ASPASSEDLESSON_9", true)

            stats.set_int(MPX .. "PILOT_SCHOOL_MEDAL_0", 1)
            stats.set_int(MPX .. "PILOT_SCHOOL_MEDAL_1", 1)
            stats.set_int(MPX .. "PILOT_SCHOOL_MEDAL_2", 1)
            stats.set_int(MPX .. "PILOT_SCHOOL_MEDAL_3", 1)
            stats.set_int(MPX .. "PILOT_SCHOOL_MEDAL_4", 1)
            stats.set_int(MPX .. "PILOT_SCHOOL_MEDAL_5", 1)
            stats.set_int(MPX .. "PILOT_SCHOOL_MEDAL_6", 1)
            stats.set_int(MPX .. "PILOT_SCHOOL_MEDAL_7", 1)
            stats.set_int(MPX .. "PILOT_SCHOOL_MEDAL_8", 1)
            stats.set_int(MPX .. "PILOT_SCHOOL_MEDAL_9", 1)        end)
        JSXX:add_sameline()   ------同行
		JSXX:add_button("解锁所有沙坑射击场", function()
			stats.set_int(MPX .. "SR_HIGHSCORE_1", 690)
			stats.set_int(MPX .. "SR_HIGHSCORE_2", 1860)
			stats.set_int(MPX .. "SR_HIGHSCORE_3", 2690)
			stats.set_int(MPX .. "SR_HIGHSCORE_4", 2660)
			stats.set_int(MPX .. "SR_HIGHSCORE_5", 2650)
			stats.set_int(MPX .. "SR_HIGHSCORE_6", 450)
			stats.set_int(MPX .. "SR_TARGETS_HIT", 269)
			stats.set_int(MPX .. "SR_WEAPON_BIT_SET", -1)
			stats.set_bool(MPX .. "SR_TIER_1_REWARD", true)
			stats.set_bool(MPX .. "SR_TIER_3_REWARD", true)
			stats.set_bool(MPX .. "SR_INCREASE_THROW_CAP", true)		end)
        JSXX:add_sameline()   ------同行
		local checkmiss = JSXX:add_checkbox("移除虎Jing导弹冷却并提升射程")--只是一个开关，代码往后面找


        JSXX:add_separator()  ------分割线

    --护甲零食----------------------------------------------------------------------------------    
        JSXX:add_text("护甲零食:")
        JSXX:add_sameline()   ------同行
        JSXX:add_button("补充库存/护甲", function()
		    stats.set_int(MPX .. "NO_BOUGHT_YUM_SNACKS", 30)
		    stats.set_int(MPX .. "NO_BOUGHT_HEALTH_SNACKS", 15)
		    stats.set_int(MPX .. "NO_BOUGHT_EPIC_SNACKS", 5)
		    stats.set_int(MPX .. "NUMBER_OF_CHAMP_BOUGHT", 5)
		    stats.set_int(MPX .. "NUMBER_OF_ORANGE_BOUGHT", 11)
		    stats.set_int(MPX .. "NUMBER_OF_BOURGE_BOUGHT", 10)
		    stats.set_int(MPX .. "NUMBER_OF_SPRUNK_BOUGHT", 10)
		    stats.set_int(MPX .. "CIGARETTES_BOUGHT", 20)
		    stats.set_int(MPX .. "MP_CHAR_ARMOUR_1_COUNT", 10)
		    stats.set_int(MPX .. "MP_CHAR_ARMOUR_2_COUNT", 10)
		    stats.set_int(MPX .. "MP_CHAR_ARMOUR_3_COUNT", 10)
		    stats.set_int(MPX .. "MP_CHAR_ARMOUR_4_COUNT", 10)
		    stats.set_int(MPX .. "MP_CHAR_ARMOUR_5_COUNT", 10)
		    stats.set_int(MPX .. "BREATHING_APPAR_BOUGHT", 20)      end)
        JSXX:add_sameline()   ------同行
        JSXX:add_button("补充库存/护甲 x1000", function()
		    stats.set_int(MPX .. "NO_BOUGHT_YUM_SNACKS", 1000)
		    stats.set_int(MPX .. "NO_BOUGHT_HEALTH_SNACKS", 1000)
		    stats.set_int(MPX .. "NO_BOUGHT_EPIC_SNACKS", 1000)
		    stats.set_int(MPX .. "NUMBER_OF_CHAMP_BOUGHT", 1000)
		    stats.set_int(MPX .. "NUMBER_OF_ORANGE_BOUGHT", 1000)
		    stats.set_int(MPX .. "NUMBER_OF_BOURGE_BOUGHT", 1000)
		    stats.set_int(MPX .. "NUMBER_OF_SPRUNK_BOUGHT", 1000)
		    stats.set_int(MPX .. "CIGARETTES_BOUGHT", 1000)
		    stats.set_int(MPX .. "MP_CHAR_ARMOUR_1_COUNT", 1000)
		    stats.set_int(MPX .. "MP_CHAR_ARMOUR_2_COUNT", 1000)
		    stats.set_int(MPX .. "MP_CHAR_ARMOUR_3_COUNT", 1000)
		    stats.set_int(MPX .. "MP_CHAR_ARMOUR_4_COUNT", 1000)
		    stats.set_int(MPX .. "MP_CHAR_ARMOUR_5_COUNT", 1000)
		    stats.set_int(MPX .. "BREATHING_APPAR_BOUGHT", 1000)      end)
        JSXX:add_separator()  ------分割线

    --载具相关----------------------------------------------------------------------------------

        JSXX:add_button("恢复1.66下架载具", function()
            for x = 14908, 14916 do
                globals.set_int(262145 + x, 1)
            end
    
            for x = 17482, 17500 do
                globals.set_int(262145 + x, 1)
            end

            for x = 17654, 17675 do
                globals.set_int(262145 + x, 1)
            end
    
            for x = 19311, 19335 do
                globals.set_int(262145 + x, 1)
            end

            for x = 20392, 20395 do
                globals.set_int(262145 + x, 1)
            end
    
            for x = 21274, 21279 do
                globals.set_int(262145 + x, 1)
            end

            for x = 22073, 22092 do
                globals.set_int(262145 + x, 1)
            end
    
            for x = 23041, 23068 do
                globals.set_int(262145 + x, 1)
            end

            for x = 24262, 24375 do
                globals.set_int(262145 + x, 1)
            end
    
            for x = 25969, 25975 do
                globals.set_int(262145 + x, 1)
            end

            for x = 25980, 26000 do
                globals.set_int(262145 + x, 1)
            end
    
            for x = 26956, 26957 do
                globals.set_int(262145 + x, 1)
            end

            for x = 28820, 28840 do
                globals.set_int(262145 + x, 1)
            end
    
            globals.set_int(262145 + 28863, 1)
            globals.set_int(262145 + 28866, 1)

            for x = 29534, 29541 do
                globals.set_int(262145 + x, 1)
            end
    
            for x = 29883, 29889 do
                globals.set_int(262145 + x, 1)
            end

            for x = 30348, 30364 do
                globals.set_int(262145 + x, 1)
            end
    
            for x = 31216, 31232 do
                globals.set_int(262145 + x, 1)
            end

            for x = 32099, 32113 do
                globals.set_int(262145 + x, 1)
            end
    
            for x = 33341, 33359 do
                globals.set_int(262145 + x, 1)
            end

            for x = 34212, 34227 do
                globals.set_int(262145 + x, 1)
            end
    
            for x = 35167, 35443 do
                globals.set_int(262145 + x, 1)
            end    end)
        JSXX:add_sameline()   ------同行  
        JSXX:add_button("解锁所有载具颜色", function()
            stats.set_int(MPX .. "CHAR_FM_CARMOD_1_UNLCK", -1)
            stats.set_int(MPX .. "CHAR_FM_CARMOD_2_UNLCK", -1)
            stats.set_int(MPX .. "CHAR_FM_CARMOD_3_UNLCK", -1)
            stats.set_int(MPX .. "CHAR_FM_CARMOD_4_UNLCK", -1)
            stats.set_int(MPX .. "CHAR_FM_CARMOD_5_UNLCK", -1)
            stats.set_int(MPX .. "CHAR_FM_CARMOD_6_UNLCK", -1)
            stats.set_int(MPX .. "CHAR_FM_CARMOD_7_UNLCK", -1)
            stats.set_int(MPX .. "AWD_FMRALLYWONDRIVE", 25)
            stats.set_int(MPX .. "AWD_FMRALLYWONNAV", 25)
            stats.set_int(MPX .. "AWD_FMWINSEARACE", 25)
            stats.set_int(MPX .. "AWD_FMWINAIRRACE", 25)
            stats.set_int(MPX .. "NUMBER_TURBO_STARTS_IN_RACE", 50)
            stats.set_int(MPX .. "USJS_COMPLETED", 50)
            stats.set_int(MPX .. "RACES_WON", 50)
            stats.set_int(MPX .. "AWD_FM_RACES_FASTEST_LAP", 50)
            stats.set_int(MPX .. "NUMBER_SLIPSTREAMS_IN_RACE", 100)
            stats.set_int("MPPLY_TOTAL_RACES_WON", 500)        end)
        JSXX:add_sameline()   ------同行  
		JSXX:add_button("解锁隐藏的汽车外观", function()
			stats.set_int("MPPLY_XMASLIVERIES", -1)
			for i = 1, 20 do
				stats.set_int("MPPLY_XMASLIVERIES" .. i, -1)
			end		end)
        JSXX:add_sameline()   ------同行    
		JSXX:add_button("改车店全部解锁", function()
			stats.set_int(MPX .. "CHAR_FM_CARMOD_1_UNLCK", -1)
			stats.set_int(MPX .. "CHAR_FM_CARMOD_2_UNLCK", -1)
			stats.set_int(MPX .. "CHAR_FM_CARMOD_3_UNLCK", -1)
			stats.set_int(MPX .. "CHAR_FM_CARMOD_4_UNLCK", -1)
			stats.set_int(MPX .. "CHAR_FM_CARMOD_5_UNLCK", -1)
			stats.set_int(MPX .. "CHAR_FM_CARMOD_6_UNLCK", -1)
			stats.set_int(MPX .. "CHAR_FM_CARMOD_7_UNLCK", -1)
			stats.set_int(MPX .. "AWD_WIN_CAPTURES", 50)
			stats.set_int(MPX .. "AWD_DROPOFF_CAP_PACKAGES", 100)
			stats.set_int(MPX .. "AWD_KILL_CARRIER_CAPTURE", 100)
			stats.set_int(MPX .. "AWD_FINISH_HEISTS", 50)
			stats.set_int(MPX .. "AWD_FINISH_HEIST_SETUP_JOB", 50)
			stats.set_int(MPX .. "AWD_NIGHTVISION_KILLS", 100)
			stats.set_int(MPX .. "AWD_WIN_LAST_TEAM_STANDINGS", 50)
			stats.set_int(MPX .. "AWD_ONLY_PLAYER_ALIVE_LTS", 50)
			stats.set_int(MPX .. "AWD_FMRALLYWONDRIVE", 25)
			stats.set_int(MPX .. "AWD_FMRALLYWONNAV", 25)
			stats.set_int(MPX .. "AWD_FMWINSEARACE", 25)
			stats.set_int(MPX .. "AWD_RACES_WON", 50)
			stats.set_int(MPX .. "MOST_FLIPS_IN_ONE_JUMP", 5)
			stats.set_int(MPX .. "MOST_SPINS_IN_ONE_JUMP", 5)
			stats.set_int(MPX .. "NUMBER_SLIPSTREAMS_IN_RACE", 100)
			stats.set_int(MPX .. "NUMBER_TURBO_STARTS_IN_RACE", 50)
			stats.set_int(MPX .. "RACES_WON", 50)
			stats.set_int(MPX .. "USJS_COMPLETED", 50)
			stats.set_int(MPX .. "USJS_FOUND", 50)
			stats.set_int(MPX .. "USJS_TOTAL_COMPLETED", 50)
			stats.set_int(MPX .. "AWD_FM_GTA_RACES_WON", 50)
			stats.set_int(MPX .. "AWD_FM_RACE_LAST_FIRST", 25)
			stats.set_int(MPX .. "AWD_FM_RACES_FASTEST_LAP", 50)
			stats.set_int(MPX .. "AWD_FMBASEJMP", 25)
			stats.set_int(MPX .. "AWD_FMWINAIRRACE", 25)
			stats.set_int(MPX .. "TOTAL_RACES_WON", 50)
            gui.show_message("改车店全部解锁" ,"某些颜色可能无法保存")			end)
        JSXX:add_sameline()   ------同行 
        JSXX:add_button("解锁金属质感喷漆和Ge合金轮", function()
            stats.set_int(MPX .. "CHAR_FM_CARMOD_1_UNLCK", -1)
            stats.set_int(MPX .. "CHAR_FM_CARMOD_2_UNLCK", -1)
            stats.set_int(MPX .. "CHAR_FM_CARMOD_3_UNLCK", -1)
            stats.set_int(MPX .. "CHAR_FM_CARMOD_4_UNLCK", -1)
            stats.set_int(MPX .. "CHAR_FM_CARMOD_5_UNLCK", -1)
            stats.set_int(MPX .. "CHAR_FM_CARMOD_6_UNLCK", -1)
            stats.set_int(MPX .. "CHAR_FM_CARMOD_7_UNLCK", -1)
            stats.set_int(MPX .. "NUMBER_TURBO_STARTS_IN_RACE", 50)
            stats.set_int(MPX .. "USJS_COMPLETED", 50)
            stats.set_int(MPX .. "AWD_FM_RACES_FASTEST_LAP", 50)
            stats.set_int(MPX .. "NUMBER_SLIPSTREAMS_IN_RACE", 100)
            stats.set_int(MPX .. "AWD_WIN_CAPTURES", 50)
            stats.set_int(MPX .. "AWD_DROPOFF_CAP_PACKAGES", 100)
            stats.set_int(MPX .. "AWD_KILL_CARRIER_CAPTURE", 100)
            stats.set_int(MPX .. "AWD_FINISH_HEISTS", 50)
            stats.set_int(MPX .. "AWD_FINISH_HEIST_SETUP_JOB", 50)
            stats.set_int(MPX .. "AWD_NIGHTVISION_KILLS", 100)
            stats.set_int(MPX .. "AWD_WIN_LAST_TEAM_STANDINGS", 50)
            stats.set_int(MPX .. "AWD_ONLY_PLAYER_ALIVE_LTS", 50)
            stats.set_int(MPX .. "AWD_FMRALLYWONDRIVE", 25)
            stats.set_int(MPX .. "AWD_FMRALLYWONNAV", 25)
            stats.set_int(MPX .. "AWD_FMWINSEARACE", 25)
            stats.set_int(MPX .. "AWD_FMWINAIRRACE", 25)
            stats.set_int(MPX .. "AWD_RACES_WON", 50)
            stats.set_int(MPX .. "RACES_WON", 500)
            stats.set_int("MPPLY_TOTAL_RACES_WON", 500)        end)
        JSXX:add_sameline()   ------同行
        JSXX:add_button("尤多拉解开出租车制服", function()
	        stats.set_masked_int(MPX .. "DLC22022PSTAT_INT536", 10, 16, 8)  end)
        JSXX:add_sameline()   ------同行
        JSXX:add_button("解锁百老汇出租车制服", function()
	        stats.set_int(MPX .. "AWD_TAXIDRIVER", 50)  end)


        JSXX:add_button("重置载具出售冷却", function()
            stats.set_int("MPPLY_VEHICLE_SELL_TIME", 0)
            stats.set_int("MPPLY_NUM_CARS_SOLD_TODAY", 0)        end)
        JSXX:add_sameline()   ------同行
        JSXX:add_button("解锁限定载具节日涂装", function()
            stats.set_int("MPPLY_XMASLIVERIES0", -1)
            stats.set_int("MPPLY_XMASLIVERIES1", -1)
            stats.set_int("MPPLY_XMASLIVERIES2", -1)
            stats.set_int("MPPLY_XMASLIVERIES3", -1)
            stats.set_int("MPPLY_XMASLIVERIES4", -1)
            stats.set_int("MPPLY_XMASLIVERIES5", -1)
            stats.set_int("MPPLY_XMASLIVERIES6", -1)
            stats.set_int("MPPLY_XMASLIVERIES7", -1)
            stats.set_int("MPPLY_XMASLIVERIES8", -1)
            stats.set_int("MPPLY_XMASLIVERIES9", -1)
            stats.set_int("MPPLY_XMASLIVERIES10", -1)
            stats.set_int("MPPLY_XMASLIVERIES11", -1)
            stats.set_int("MPPLY_XMASLIVERIES12", -1)
            stats.set_int("MPPLY_XMASLIVERIES13", -1)
            stats.set_int("MPPLY_XMASLIVERIES14", -1)
            stats.set_int("MPPLY_XMASLIVERIES15", -1)
            stats.set_int("MPPLY_XMASLIVERIES16", -1)
            stats.set_int("MPPLY_XMASLIVERIES17", -1)
            stats.set_int("MPPLY_XMASLIVERIES18", -1)
            stats.set_int("MPPLY_XMASLIVERIES19", -1)
            stats.set_int("MPPLY_XMASLIVERIES20", -1)        end)
        JSXX:add_sameline()   ------同行
        JSXX:add_button("解锁末日载具批发价", function()
            stats.set_int(MPX .. "GANGOPS_FLOW_BITSET_MISS0", 48326)

            stats.set_int("MP1_GANGOPS_FLOW_BITSET_MISS0", 48326)        end)
        JSXX:add_sameline()   ------同行
        JSXX:add_button("在枪支箱行车模式解锁棒球和小刀皮肤", function()
	        globals.set_int(262145 + 34131, 0)
	        globals.set_int(262145 + 34094 + 9, -1716189206) ----- Knife
	        globals.set_int(262145 + 34094 + 10, -1786099057) ----- BaseBall Bat
        end)
        JSXX:add_sameline()   ------同行
        JSXX:add_button("枪支箱行车中解锁丢失的枪支", function()
	        globals.set_int(262145 + 34094 + 5, -22923932) ----- RailGun
	        globals.set_int(262145 + 34094 + 6, -1238556825) ----- WidoMaker
	        globals.set_int(262145 + 34094 + 7, -1355376991) ----- RayPistol
	        globals.set_int(262145 + 34094 + 8, 1198256469) ----- HellBringer
	        globals.set_int(262145 + 34094 + 9, 350597077) ----- TecPistol
	        globals.set_int(262145 + 34094 + 10, 2138347493) ----- FireWork Launcher
        end)


        JSXX:add_text("竞技场战争恢复菜单:")
		JSXX:add_sameline()   ------同行
		JSXX:add_button("解锁彩色前照灯", function()
			stats.set_bool_masked(MPX .. "ARENAWARSPSTAT_BOOL0", true, 18) -- Blue Lights
			stats.set_bool_masked(MPX .. "ARENAWARSPSTAT_BOOL0", true, 19) -- Electric Blue Lights
			stats.set_bool_masked(MPX .. "ARENAWARSPSTAT_BOOL0", true, 20) -- Mint Green Lights
			stats.set_bool_masked(MPX .. "ARENAWARSPSTAT_BOOL0", true, 21) -- Lime Green Lights
			stats.set_bool_masked(MPX .. "ARENAWARSPSTAT_BOOL0", true, 22) -- Yellow Lights
			stats.set_bool_masked(MPX .. "ARENAWARSPSTAT_BOOL0", true, 23) -- Golden Shower Lights
			stats.set_bool_masked(MPX .. "ARENAWARSPSTAT_BOOL0", true, 24) -- Orange Lights
			stats.set_bool_masked(MPX .. "ARENAWARSPSTAT_BOOL0", true, 25) -- Red Lights
			stats.set_bool_masked(MPX .. "ARENAWARSPSTAT_BOOL0", true, 26) -- Pony Pink Lights
			stats.set_bool_masked(MPX .. "ARENAWARSPSTAT_BOOL0", true, 27) -- Hot Pink Lights
			stats.set_bool_masked(MPX .. "ARENAWARSPSTAT_BOOL0", true, 28) -- Purple Lights
			stats.set_bool_masked(MPX .. "ARENAWARSPSTAT_BOOL0", true, 29) -- Blacklight Lights
		end)
		JSXX:add_sameline()   ------同行
		JSXX:add_button("解锁彩色前大灯的交易价格", function()
			stats.set_bool_masked(MPX .. "ARENAWARSPSTAT_BOOL0", true, 18) -- Trade Price Blue Lights
			stats.set_bool_masked(MPX .. "ARENAWARSPSTAT_BOOL0", true, 19) -- Trade Price Electric Blue Lights
			stats.set_bool_masked(MPX .. "ARENAWARSPSTAT_BOOL0", true, 20) -- Trade Price Mint Green Lights
			stats.set_bool_masked(MPX .. "ARENAWARSPSTAT_BOOL0", true, 21) -- Trade Price Lime Green Lights
			stats.set_bool_masked(MPX .. "ARENAWARSPSTAT_BOOL0", true, 22) -- Trade Price Yellow Lights
			stats.set_bool_masked(MPX .. "ARENAWARSPSTAT_BOOL0", true, 23) -- Trade Price Golden Shower Lights
			stats.set_bool_masked(MPX .. "ARENAWARSPSTAT_BOOL0", true, 24) -- Trade Price Orange Lights
			stats.set_bool_masked(MPX .. "ARENAWARSPSTAT_BOOL0", true, 25) -- Trade Price Red Lights
			stats.set_bool_masked(MPX .. "ARENAWARSPSTAT_BOOL0", true, 26) -- Trade Price Pony Pink Lights
			stats.set_bool_masked(MPX .. "ARENAWARSPSTAT_BOOL0", true, 27) -- Trade Price Hot Pink Lights
			stats.set_bool_masked(MPX .. "ARENAWARSPSTAT_BOOL0", true, 28) -- Trade Price Purple Lights
			stats.set_bool_masked(MPX .. "ARENAWARSPSTAT_BOOL0", true, 29) -- Trade Price Blacklight Lights
		end)
		JSXX:add_sameline()   ------同行
		JSXX:add_button("解锁竞技场战车的交易价格", function()
			stats.set_bool_masked(MPX .. "ARENAWARSPSTAT_BOOL0", true, 1) -- Trade Price Apocalypse Cerberus
			stats.set_bool_masked(MPX .. "ARENAWARSPSTAT_BOOL0", true, 2) -- Trade Price Future Shock Cerberus
			stats.set_bool_masked(MPX .. "ARENAWARSPSTAT_BOOL0", true, 3) -- Trade Price Apocalypse Brutus
			stats.set_bool_masked(MPX .. "ARENAWARSPSTAT_BOOL0", true, 4) -- Trade Price Nightmare Cerberus
			stats.set_bool_masked(MPX .. "ARENAWARSPSTAT_BOOL0", true, 5) -- Trade Price Apocalypse ZR380
			stats.set_bool_masked(MPX .. "ARENAWARSPSTAT_BOOL0", true, 6) -- Trade Price Future Shock Brutus
			stats.set_bool_masked(MPX .. "ARENAWARSPSTAT_BOOL0", true, 7) -- Trade Price Impaler
			stats.set_bool_masked(MPX .. "ARENAWARSPSTAT_BOOL0", true, 10) -- Trade Price Rat-Truck
			stats.set_bool_masked(MPX .. "ARENAWARSPSTAT_BOOL0", true, 11) -- Trade Price Glendale
			stats.set_bool_masked(MPX .. "ARENAWARSPSTAT_BOOL0", true, 12) -- Trade Price Slamvan
			stats.set_bool_masked(MPX .. "ARENAWARSPSTAT_BOOL0", true, 13) -- Trade Price Dominator
			stats.set_bool_masked(MPX .. "ARENAWARSPSTAT_BOOL0", true, 14) -- Trade Price Issi Classic
			stats.set_bool_masked(MPX .. "ARENAWARSPSTAT_BOOL0", true, 16) -- Trade Price Gargoyle
			stats.set_bool_masked(MPX .. "ARENAWARSPSTAT_BOOL2", true, 11) -- Trade Price Nightmare Brutus
			stats.set_bool_masked(MPX .. "ARENAWARSPSTAT_BOOL2", true, 12) -- Trade Price Apocalypse Scarab
			stats.set_bool_masked(MPX .. "ARENAWARSPSTAT_BOOL2", true, 13) -- Trade Price Future Shock Scarab
			stats.set_bool_masked(MPX .. "ARENAWARSPSTAT_BOOL2", true, 14) -- Trade Price Nightmare Scarab
			stats.set_bool_masked(MPX .. "ARENAWARSPSTAT_BOOL2", true, 15) -- Trade Price Future Shock ZR380
			stats.set_bool_masked(MPX .. "ARENAWARSPSTAT_BOOL2", true, 16) -- Trade Price Nightmare ZR380
			stats.set_bool_masked(MPX .. "ARENAWARSPSTAT_BOOL2", true, 17) -- Trade Price Apocalypse Imperator
			stats.set_bool_masked(MPX .. "ARENAWARSPSTAT_BOOL2", true, 18) -- Trade Price Future Shock Imperator
			stats.set_bool_masked(MPX .. "ARENAWARSPSTAT_BOOL2", true, 19) -- Trade Price Nightmare Imperator
		end)

        JSXX:add_separator()  ------分割线

    --武器相关----------------------------------------------------------------------------------

        JSXX:add_button("解锁所有武器颜色", function()
	        stats.set_int(MPX .. "MOLOTOV_ENEMY_KILLS", 600)
            stats.set_int(MPX .. "CMBTPISTOL_ENEMY_KILLS", 600)
            stats.set_int(MPX .. "PISTOL50_ENEMY_KILLS", 600)
            stats.set_int(MPX .. "APPISTOL_ENEMY_KILLS", 600)
            stats.set_int(MPX .. "MICROSMG_ENEMY_KILLS", 500)
            stats.set_int(MPX .. "SMG_ENEMY_KILLS", 500)
            stats.set_int(MPX .. "ASLTSMG_ENEMY_KILLS", 500)
            stats.set_int(MPX .. "ASLTRIFLE_ENEMY_KILLS", 500)
            stats.set_int(MPX .. "CRBNRIFLE_ENEMY_KILLS", 500)
            stats.set_int(MPX .. "ADVRIFLE_ENEMY_KILLS", 500)
            stats.set_int(MPX .. "MG_ENEMY_KILLS", 500)
            stats.set_int(MPX .. "CMBTMG_ENEMY_KILLS", 500)
            stats.set_int(MPX .. "ASLTMG_ENEMY_KILLS", 500)
            stats.set_int(MPX .. "PUMP_ENEMY_KILLS", 600)
            stats.set_int(MPX .. "SAWNOFF_ENEMY_KILLS", 500)
            stats.set_int(MPX .. "BULLPUP_ENEMY_KILLS", 600)
            stats.set_int(MPX .. "ASLTSHTGN_ENEMY_KILLS", 600)
            stats.set_int(MPX .. "SNIPERRFL_ENEMY_KILLS", 500)
            stats.set_int(MPX .. "HVYSNIPER_ENEMY_KILLS", 500)
            stats.set_int(MPX .. "GRNLAUNCH_ENEMY_KILLS", 600)
            stats.set_int(MPX .. "RPG_ENEMY_KILLS", 500)
            stats.set_int(MPX .. "MINIGUNS_ENEMY_KILLS", 600)
            stats.set_int(MPX .. "GRENADE_ENEMY_KILLS", 50)
            stats.set_int(MPX .. "SMKGRENADE_ENEMY_KILLS", 600)
            stats.set_int(MPX .. "STKYBMB_ENEMY_KILLS", 50)
            stats.set_int(MPX .. "MOLOTOV_ENEMY_KILLS", 600)                      end)




        JSXX:add_separator()  ------分割线

    --服装相关----------------------------------------------------------------------------------

		JSXX:add_button("解锁钻石赌场抢劫服装", function()
			stats.set_bool_masked(MPX .. "CASINOHSTPSTAT_BOOL1", true, 63) -- Refuse Collectors
			stats.set_bool_masked(MPX .. "CASINOHSTPSTAT_BOOL2", true, 0) -- Undertakers
			stats.set_bool_masked(MPX .. "CASINOHSTPSTAT_BOOL2", true, 1) -- Valet Outfits
			stats.set_bool_masked(MPX .. "CASINOHSTPSTAT_BOOL2", true, 3) -- Prison Guards
			stats.set_bool_masked(MPX .. "CASINOHSTPSTAT_BOOL2", true, 4) -- FIB Suits
			stats.set_bool_masked(MPX .. "CASINOHSTPSTAT_BOOL2", true, 6) -- Gruppe Sechs Gear
			stats.set_bool_masked(MPX .. "CASINOHSTPSTAT_BOOL2", true, 7) -- Bugstars Uniforms
			stats.set_bool_masked(MPX .. "CASINOHSTPSTAT_BOOL2", true, 8) -- Maintenance
			stats.set_bool_masked(MPX .. "CASINOHSTPSTAT_BOOL2", true, 9) -- Yung Ancestors
			stats.set_bool_masked(MPX .. "CASINOHSTPSTAT_BOOL2", true, 10) -- Firefighter Gear
			stats.set_bool_masked(MPX .. "CASINOHSTPSTAT_BOOL2", true, 11) -- Orderly Armor
			stats.set_bool_masked(MPX .. "CASINOHSTPSTAT_BOOL2", true, 12) -- Upscale Armor
			stats.set_bool_masked(MPX .. "CASINOHSTPSTAT_BOOL2", true, 13) -- Evening Armor
			stats.set_bool_masked(MPX .. "CASINOHSTPSTAT_BOOL2", true, 14) -- Reinforced: Padded Combat
			stats.set_bool_masked(MPX .. "CASINOHSTPSTAT_BOOL2", true, 15) -- Reinforced: Bulk Combat
			stats.set_bool_masked(MPX .. "CASINOHSTPSTAT_BOOL2", true, 16) -- Reinforced: Compact Combat
			stats.set_bool_masked(MPX .. "CASINOHSTPSTAT_BOOL2", true, 17) -- Balaclava Crook
			stats.set_bool_masked(MPX .. "CASINOHSTPSTAT_BOOL2", true, 18) -- Classic Crook
			stats.set_bool_masked(MPX .. "CASINOHSTPSTAT_BOOL2", true, 19) -- High-end Crook
			stats.set_bool_masked(MPX .. "CASINOHSTPSTAT_BOOL2", true, 20) -- Infiltration: Upgraded Tech
			stats.set_bool_masked(MPX .. "CASINOHSTPSTAT_BOOL2", true, 21) -- Infiltration: Advanced Tech
			stats.set_bool_masked(MPX .. "CASINOHSTPSTAT_BOOL2", true, 22) -- Infiltration: Modernized Tech
		end)




        JSXX:add_separator()  ------分割线

    --设施相关----------------------------------------------------------------------------------

		JSXX:add_button("解锁所有地堡研究", function()
			for j = 0, 63 do
				stats.set_bool_masked(MPX .. "DLCGUNPSTAT_BOOL0", true, j, MPX)
				stats.set_bool_masked(MPX .. "DLCGUNPSTAT_BOOL1", true, j, MPX)
				stats.set_bool_masked(MPX .. "DLCGUNPSTAT_BOOL2", true, j, MPX)
				stats.set_bool_masked(MPX .. "GUNTATPSTAT_BOOL0", true, j, MPX)
				stats.set_bool_masked(MPX .. "GUNTATPSTAT_BOOL1", true, j, MPX)
				stats.set_bool_masked(MPX .. "GUNTATPSTAT_BOOL2", true, j, MPX)
				stats.set_bool_masked(MPX .. "GUNTATPSTAT_BOOL3", true, j, MPX)
				stats.set_bool_masked(MPX .. "GUNTATPSTAT_BOOL4", true, j, MPX)
				stats.set_bool_masked(MPX .. "GUNTATPSTAT_BOOL5", true, j, MPX)
			end
			local bitSize = 8
			for j = 0, 64 / bitSize - 1 do
				stats.set_masked_int(MPX .. "GUNRPSTAT_INT0", -1, j * bitSize, bitSize)
				stats.set_masked_int(MPX .. "GUNRPSTAT_INT1", -1, j * bitSize, bitSize)
				stats.set_masked_int(MPX .. "GUNRPSTAT_INT2", -1, j * bitSize, bitSize)
				stats.set_masked_int(MPX .. "GUNRPSTAT_INT3", -1, j * bitSize, bitSize)
				stats.set_masked_int(MPX .. "GUNRPSTAT_INT4", -1, j * bitSize, bitSize)
				stats.set_masked_int(MPX .. "GUNRPSTAT_INT5", -1, j * bitSize, bitSize)
				stats.set_masked_int(MPX .. "GUNRPSTAT_INT6", -1, j * bitSize, bitSize)
				stats.set_masked_int(MPX .. "GUNRPSTAT_INT7", -1, j * bitSize, bitSize)
				stats.set_masked_int(MPX .. "GUNRPSTAT_INT8", -1, j * bitSize, bitSize)
				stats.set_masked_int(MPX .. "GUNRPSTAT_INT9", -1, j * bitSize, bitSize)
				stats.set_masked_int(MPX .. "GUNRPSTAT_INT10", -1, j * bitSize, bitSize)
				stats.set_masked_int(MPX .. "GUNRPSTAT_INT11", -1, j * bitSize, bitSize)
				stats.set_masked_int(MPX .. "GUNRPSTAT_INT12", -1, j * bitSize, bitSize)
			end		end)


        JSXX:add_separator()  ------分割线

    --纹身相关----------------------------------------------------------------------------------

		JSXX:add_button("解锁所有纹身", function()
			stats.set_int(MPX .. "TATTOO_FM_CURRENT_32", -1)
			for i = 0, 47 do
				stats.set_int(MPX .. "TATTOO_FM_UNLOCKS_" .. i, -1)
			end		end)

        JSXX:add_separator()  ------分割线

    --任务相关----------------------------------------------------------------------------------

		JSXX:add_button("移除达克斯任务冷却", function()
			stats.set_int(MPX .. "XM22JUGGALOWORKCDTIMER", -1)		end)
        JSXX:add_sameline()   ------同行
		JSXX:add_button("移除VIP/MC冷却", function()
			stats.set_int("MPPLY_VIPGAMEPLAYDISABLEDTIMER", 0)		end)
        JSXX:add_sameline()   ------同行
        JSXX:add_button("跳过游艇任务", function()
            stats.set_int(MPX .. "YACHT_MISSION_PROG", 0)
            stats.set_int(MPX .. "YACHT_MISSION_FLOW", 21845)
            stats.set_int(MPX .. "CASINO_DECORATION_GIFT_1", -1)        end)
        JSXX:add_sameline()   ------同行
        JSXX:add_button("跳过拉马任务", function()
	        stats.set_bool(MPX .. "LOW_FLOW_CS_DRV_SEEN", true)
	        stats.set_bool(MPX .. "LOW_FLOW_CS_TRA_SEEN", true)
	        stats.set_bool(MPX .. "LOW_FLOW_CS_FUN_SEEN", true)
	        stats.set_bool(MPX .. "LOW_FLOW_CS_PHO_SEEN", true)
	        stats.set_bool(MPX .. "LOW_FLOW_CS_FIN_SEEN", true)
	        stats.set_bool(MPX .. "LOW_BEN_INTRO_CS_SEEN", true)
	        stats.set_int(MPX .. "LOWRIDER_FLOW_COMPLETE", 4)
	        stats.set_int(MPX .. "LOW_FLOW_CURRENT_PROG", 9)
	        stats.set_int(MPX .. "LOW_FLOW_CURRENT_CALL", 9)
	        stats.set_int(MPX .. "LOW_FLOW_CS_HELPTEXT", 66)        end)
        JSXX:add_sameline()   ------同行
        JSXX:add_button("跳过贝克女士任务", function()
	        stats.set_int(MPX .. "AWD_ODD_JOBS", 50)
	        stats.set_int(MPX .. "VCM_FLOW_PROGRESS", -1)
	        stats.set_int(MPX .. "VCM_STORY_PROGRESS", 5)
	        stats.set_bool(MPX .. "AWD_FIRST_TIME1", true)
	        stats.set_bool(MPX .. "AWD_FIRST_TIME2", true)
	        stats.set_bool(MPX .. "AWD_FIRST_TIME3", true)
	        stats.set_bool(MPX .. "AWD_FIRST_TIME4", true)
	        stats.set_bool(MPX .. "AWD_FIRST_TIME5", true)
	        stats.set_bool(MPX .. "AWD_FIRST_TIME6", true)
	        stats.set_bool(MPX .. "AWD_ALL_IN_ORDER", true)
	        stats.set_bool(MPX .. "AWD_SUPPORTING_ROLE", true)
	        stats.set_bool(MPX .. "AWD_LEADER", true)
	        stats.set_bool(MPX .. "AWD_SURVIVALIST", true)
	        Paragon = stats.get_bool(MPX .. "CAS_VEHICLE_REWARD")
	        if Paragon == true then
		        stats.set_bool(MPX .. "CAS_VEHICLE_REWARD", true)
	        else
		        stats.set_bool(MPX .. "CAS_VEHICLE_REWARD", false)
	        end
	        for i = 0, 6 do
		        for j = 0, 63 do
			        stats.set_bool_masked(MPX .. "CASINOPSTAT_BOOL" .. i, true, j, MPX)
		        end
	        end               end)
        JSXX:add_sameline()   ------同行
        JSXX:add_button("解锁摩托帮任务和外星蛋补给任务", function()
            stats.set_int(MPX .. "LFETIME_BIKER_BUY_COMPLET5", 500)
            stats.set_int(MPX .. "LFETIME_BIKER_BUY_UNDERTA5", 500)        end)

        JSXX:add_text("地下车友会:")
        JSXX:add_sameline()   ------同行
        JSXX:add_button("完成所有前置", function()
           stats.set_int(MPX .. "TUNER_GEN_BS", 0xFFFFFFF)        end)
        JSXX:add_sameline()   ------同行
        JSXX:add_button("重置前置任务", function()
            stats.set_int(MPX .. "TUNER_GEN_BS", 12467)        end)
        JSXX:add_sameline()   ------同行
        JSXX:add_button("重置合约", function()
            stats.set_int(MPX .. "TUNER_GEN_BS", 8371)
            stats.set_int(MPX .. "TUNER_CURRENT", 0xFFFFFFF)        end)
        JSXX:add_sameline()   ------同行
        JSXX:add_button("重置总营收和完成的任务", function()
            stats.set_int(MPX .. "TUNER_COUNT", 0)
            stats.set_int(MPX .. "TUNER_EARNINGS", 0)        end)


        JSXX:add_text("解锁合约:")
        JSXX:add_sameline()   ------同行
        JSXX:add_button("联合储蓄银行合约", function()
            stats.set_int(MPX .. "TUNER_GEN_BS", 12543)
            stats.set_int(MPX .. "TUNER_CURRENT", 0)        end)
        JSXX:add_sameline()   ------同行
        JSXX:add_button("大钞交易", function()
            stats.set_int(MPX .. "TUNER_GEN_BS", 4351)
            stats.set_int(MPX .. "TUNER_CURRENT", 1)        end)
        JSXX:add_sameline()   ------同行
        JSXX:add_button("银行合约", function()
            stats.set_int(MPX .. "TUNER_GEN_BS", 12543)
            stats.set_int(MPX .. "TUNER_CURRENT", 2)        end)
        JSXX:add_sameline()   ------同行
        JSXX:add_button("电控单元合约", function()
            stats.set_int(MPX .. "TUNER_GEN_BS", 12543)
            stats.set_int(MPX .. "TUNER_CURRENT", 3)        end)
        JSXX:add_sameline()   ------同行
        JSXX:add_button("监狱合约", function()
            stats.set_int(MPX .. "TUNER_GEN_BS", 12543)
            stats.set_int(MPX .. "TUNER_CURRENT", 4)        end)
        JSXX:add_sameline()   ------同行
        JSXX:add_button("IAA交易", function()
            stats.set_int(MPX .. "TUNER_GEN_BS", 12543)
            stats.set_int(MPX .. "TUNER_CURRENT", 5)        end)
        JSXX:add_sameline()   ------同行
        JSXX:add_button("失落摩托帮合约", function()
            stats.set_int(MPX .. "TUNER_GEN_BS", 12543)
            stats.set_int(MPX .. "TUNER_CURRENT", 6)        end)
        JSXX:add_sameline()   ------同行
        JSXX:add_button("数据合约", function()
            stats.set_int(MPX .. "TUNER_GEN_BS", 12543)
            stats.set_int(MPX .. "TUNER_CURRENT", 7)        end)




        JSXX:add_text("竞技场之战:")
        JSXX:add_sameline()   ------同行
        JSXX:add_button("解锁1000级老式机", function()
            stats.set_int(MPX .. "ARENAWARS_AP_TIER", 999)
        	stats.set_int(MPX .. "ARENAWARS_AP", 10030)        end)
        JSXX:add_sameline()   ------同行
        JSXX:add_button("解锁100级垃圾大王", function()
            stats.set_int(MPX .. "ARENAWARS_AP_TIER", 99)
        	stats.set_int(MPX .. "ARENAWARS_AP", 1030)        end)
        JSXX:add_sameline()   ------同行
        JSXX:add_button("解锁200级地霸王拖车", function()
            stats.set_int(MPX .. "ARENAWARS_AP_TIER", 199)
            stats.set_int(MPX .. "ARENAWARS_AP", 2030)        end)
        JSXX:add_sameline()   ------同行
        JSXX:add_button("解锁25级出租车", function()
            stats.set_int(MPX .. "ARENAWARS_AP_TIER", 24)
            stats.set_int(MPX .. "ARENAWARS_AP", 280)        end)

        JSXX:add_button("解锁300级混凝土搅拌车", function()
            stats.set_int(MPX .. "ARENAWARS_AP_TIER", 299)
            stats.set_int(MPX .. "ARENAWARS_AP", 3030)        end)
        JSXX:add_sameline()   ------同行
        JSXX:add_button("解锁500级星际码头", function()
            stats.set_int(MPX .. "ARENAWARS_AP_TIER", 499)
            stats.set_int(MPX .. "ARENAWARS_AP", 5030)        end)
        JSXX:add_sameline()   ------同行
        JSXX:add_button("解锁50级推土机", function()
            stats.set_int(MPX .. "ARENAWARS_AP_TIER", 49)
            stats.set_int(MPX .. "ARENAWARS_AP", 530)        end)
        JSXX:add_sameline()   ------同行
        JSXX:add_button("解锁75级小丑花车", function()
            stats.set_int(MPX .. "ARENAWARS_AP_TIER", 74)
            stats.set_int(MPX .. "ARENAWARS_AP", 780)        end)
        JSXX:add_sameline()   ------同行
        JSXX:add_button("解锁冲冲猴旅行家购买权限", function()
            stats.set_int(MPX .. "ARENAWARS_SKILL_LEVEL", 19)
            stats.set_int(MPX .. "ARENAWARS_SP", 209)        end)
        JSXX:add_separator()  ------分割线

    --金钱状态----------------------------------------------------------------------------------    
        JSXX:add_separator()  ------分割线
        JSXX:add_button("重置玩家金钱状态", function()
            stats.set_int(MPX .. "MPPLY_TOTAL_EVC", 0)		    
            stats.set_int(MPX .. "MPPLY_TOTAL_SVC", 0)
            stats.set_int(MPX .. "MONEY_EARN_BETTING", 0)
            stats.set_int(MPX .. "MONEY_EARN_JOBS", 0)
            stats.set_int(MPX .. "MOEARN_SHARED", 0)
            stats.set_int(MPX .. "MONEY_EARN_JOBSHARED", 0)
            stats.set_int(MPX .. "MONEY_NEY_EARN_SELLING_VEH", 0)
            stats.set_int(MPX .. "MONEY_EARN_BETTING", 0)
            stats.set_int(MPX .. "MONEY_SPENT_WEAPON_ARMOR", 0)
            stats.set_int(MPX .. "MONEY_SPENT_VEH_MAINTENANCE", 0)
            stats.set_int(MPX .. "MONEY_SPENT_STYLE_ENT", 0)
            stats.set_int(MPX .. "MONEY_SPENT_PROPERTY_UTIL", 0)
            stats.set_int(MPX .. "MONEY_SPENT_JOB_ACTIVITY", 0)
            stats.set_int(MPX .. "MONEY_SPENT_BETTING", 0)
            stats.set_int(MPX .. "MONEY_EARN_VEHICLE_EXPORT", 0)
            stats.set_int(MPX .. "MONEY_SPENT_VEHICLE_EXPORT", 0)
            stats.set_int(MPX .. "MONEY_EARN_CLUB_DANCING", 0)
            gui.show_message("玩家的金钱状态重置”，“更改战局以应用更改")    end)
        JSXX:add_sameline()   ------同行
        JSXX:add_text("重置金钱状态清零:游戏内的各种收入花费清零!!!(包含总收入 总花费 修车费等等!)")
        JSXX:add_sameline()   ------同行
        local SEa = 0
        JSXX:add_button("移除收支差", function()
            SE = MONEY.NETWORK_GET_VC_BANK_BALANCE() + stats.get_int("MPPLY_TOTAL_SVC") - stats.get_int("MPPLY_TOTAL_EVC")
            local playerid = stats.get_int("MPPLY_LAST_MP_CHAR") --读取角色ID  --用于判断当前是角色1还是角色2
            local mpx = "MP0_"--用于判断当前是角色1还是角色2
            if playerid == 1 then --用于判断当前是角色1还是角色2
                mpx = "MP1_" --用于判断当前是角色1还是角色2
            end
            log.info(SE)
            if SE >= 20000 and SEa == 0 and stats.get_int("MPPLY_TOTAL_SVC")>0 and stats.get_int("MPPLY_TOTAL_EVC")>0 then
                SE = SE - 10000
                stats.set_int(mpx.."MONEY_EARN_JOBS",stats.get_int(mpx.."MONEY_EARN_JOBS") + SE )
                stats.set_int("MPPLY_TOTAL_EVC",stats.get_int("MPPLY_TOTAL_EVC") + SE )
                gui.show_message("移除收支差","执行成功")
                log.info("已移除收支差:"..SE)    
                SEa = 1
            else
                gui.show_message("您的收支差正常无需移除或触发数值异常保护","完全没有收支差可能反而不正常")
                SEa = 1
            end    end)
        local checkzhongjia = JSXX:add_checkbox("请求重甲花费(用于删除黑钱)")--只是一个开关，代码往后面找
        JSXX:add_sameline()   ------同行
        local iputintzhongjia = JSXX:add_input_int("元")

    --解锁选项-成就选项--------------------------------------------------------------------------------成就解锁
     CJJS = JSXX:add_tab("      成就解锁")
        CJJS:add_text("因内容过多,而且机翻很多跟成就内对不上,所有此选项暂时就不翻译了!")
        CJJS:add_text("如果你知道具体对应的成就可以帮忙翻译,可联系邮箱客服")
        Acv0 = false
        AG = 4542602 + 1    


        CJJS:add_button("一键解锁全部成就!!!(需要大概10分钟左右!)", function()
            script.run_in_fiber(function (ncsafeloop111)
              a3 =0
               while a3 < 79 do --循环次数
                    a3 = a3 + 1
                    globals.set_int(4542602 + 1, a3)

                   
                    gui.show_message("成就解锁" ,"已解锁成就"..a3)


                    ncsafeloop111:sleep(6000) --执行间隔，单位ms
                end
            end)        end)   

        CJJS:add_button("欢迎来到Luo圣都", function() globals.set_int(AG, 1) end)
        CJJS:add_button("A Friendship Resurrected", function() globals.set_int(AG, 2) end)
        CJJS:add_button("A Fair Day's Pay", function() globals.set_int(AG, 3) end)
        CJJS:add_button("The Moment of Truth", function() globals.set_int(AG, 4) end)
        CJJS:add_button("To Live or Die in Los Santos", function() globals.set_int(AG, 5) end)
        CJJS:add_button("Diamond Hard", function() globals.set_int(AG, 6) end)
        CJJS:add_button("Subversive", function() globals.set_int(AG, 7) end)
        CJJS:add_button("Blitzed", function() globals.set_int(AG, 8) end)
        CJJS:add_button("Small Town, Big Job", function() globals.set_int(AG, 9) end)
        CJJS:add_button("The Government Gimps", function() globals.set_int(AG, 10) end)
        CJJS:add_button("The Big One!", function() globals.set_int(AG, 11) end)
        CJJS:add_button("Solid Gold, Baby!", function() globals.set_int(AG, 12) end)
        CJJS:add_button("Career Criminal", function() globals.set_int(AG, 13) end)
        CJJS:add_button("San Andreas Sightseer", function() globals.set_int(AG, 14) end)
        CJJS:add_button("All's Fare in Love and War", function() globals.set_int(AG, 15) end)
        CJJS:add_button("TP Industries Arms Race", function() globals.set_int(AG, 16) end)
        CJJS:add_button("Multi-Disciplined", function() globals.set_int(AG, 17) end)
        CJJS:add_button("From Beyond the Stars", function() globals.set_int(AG, 18) end)
        CJJS:add_button("A Mystery, Solved", function() globals.set_int(AG, 19) end)
        CJJS:add_button("Waste Management", function() globals.set_int(AG, 20) end)
        CJJS:add_button("Red Mist", function() globals.set_int(AG, 21) end)
        CJJS:add_button("Show Off", function() globals.set_int(AG, 22) end)
        CJJS:add_button("Kifflom!", function() globals.set_int(AG, 23) end)
        CJJS:add_button("Three Man Army", function() globals.set_int(AG, 24) end)
        CJJS:add_button("Out of Your Depth", function() globals.set_int(AG, 25) end)
        CJJS:add_button("Altruist Acolyte", function() globals.set_int(AG, 26) end)
        CJJS:add_button("A Lot of Cheddar", function() globals.set_int(AG, 27) end)
        CJJS:add_button("Trading Pure Alpha", function() globals.set_int(AG, 28) end)
        CJJS:add_button("Pimp My Sidearm", function() globals.set_int(AG, 29) end)
        CJJS:add_button("Wanted:Alive Or Alive", function() globals.set_int(AG, 30) end)
        CJJS:add_button("Los Santos Customs", function() globals.set_int(AG, 31) end)
        CJJS:add_button("Close Shave", function() globals.set_int(AG, 32) end)
        CJJS:add_button("Off the Plane", function() globals.set_int(AG, 33) end)
        CJJS:add_button("Three-Bit Gangster", function() globals.set_int(AG, 34) end)
        CJJS:add_button("Making Moves", function() globals.set_int(AG, 35) end)
        CJJS:add_button("Above the Law", function() globals.set_int(AG, 36) end)
        CJJS:add_button("Numero Uno", function() globals.set_int(AG, 37) end)
        CJJS:add_button("The Midnight Club", function() globals.set_int(AG, 38) end)
        CJJS:add_button("Unnatural Selection", function() globals.set_int(AG, 39) end)
        CJJS:add_button("Backseat Driver", function() globals.set_int(AG, 40) end)
        CJJS:add_button("Run Like The Wind", function() globals.set_int(AG, 41) end)
        CJJS:add_button("Clean Sweep", function() globals.set_int(AG, 42) end)
        CJJS:add_button("Decorated", function() globals.set_int(AG, 43) end)
        CJJS:add_button("Stick Up Kid", function() globals.set_int(AG, 44) end)
        CJJS:add_button("Enjoy Your Stay", function() globals.set_int(AG, 45) end)
        CJJS:add_button("Crew Cut", function() globals.set_int(AG, 46) end)
        CJJS:add_button("Full Refund", function() globals.set_int(AG, 47) end)
        CJJS:add_button("Dialling Digits", function() globals.set_int(AG, 48) end)
        CJJS:add_button("American Dream", function() globals.set_int(AG, 49) end)
        CJJS:add_button("A New Perspective", function() globals.set_int(AG, 50) end)
        CJJS:add_button("Be Prepared", function() globals.set_int(AG, 51) end)
        CJJS:add_button("In the Name of Science", function() globals.set_int(AG, 52) end)
        CJJS:add_button("Dead Presidents", function() globals.set_int(AG, 53) end)
        CJJS:add_button("Parole Day", function() globals.set_int(AG, 54) end)
        CJJS:add_button("Shot Caller", function() globals.set_int(AG, 55) end)
        CJJS:add_button("Four Way", function() globals.set_int(AG, 56) end)
        CJJS:add_button("Live a Little", function() globals.set_int(AG, 57) end)
        CJJS:add_button("Can't Touch This", function() globals.set_int(AG, 58) end)
        CJJS:add_button("Mastermind", function() globals.set_int(AG, 59) end)
        CJJS:add_button("Vinewood Visionary", function() globals.set_int(AG, 60) end)
        CJJS:add_button("Majestic", function() globals.set_int(AG, 61) end)
        CJJS:add_button("Humans of Los Santos", function() globals.set_int(AG, 62) end)
        CJJS:add_button("First Time Director", function() globals.set_int(AG, 63) end)
        CJJS:add_button("Animal Lover", function() globals.set_int(AG, 64) end)
        CJJS:add_button("Ensemble Piece", function() globals.set_int(AG, 65) end)
        CJJS:add_button("Cult Movie", function() globals.set_int(AG, 66) end)
        CJJS:add_button("Location Scout", function() globals.set_int(AG, 67) end)
        CJJS:add_button("Method Actor", function() globals.set_int(AG, 68) end)
        CJJS:add_button("Cryptozoologist", function() globals.set_int(AG, 69) end)
        CJJS:add_button("Getting Started", function() globals.set_int(AG, 70) end)
        CJJS:add_button("The Data Breaches", function() globals.set_int(AG, 71) end)
        CJJS:add_button("The Bogdan Problem", function() globals.set_int(AG, 72) end)
        CJJS:add_button("The Doomsday Scenario", function() globals.set_int(AG, 73) end)
        CJJS:add_button("A World Worth Saving", function() globals.set_int(AG, 74) end)
        CJJS:add_button("Orbital Obliteration", function() globals.set_int(AG, 75) end)
        CJJS:add_button("Elitist", function() globals.set_int(AG, 76) end)
        CJJS:add_button("Masterminds", function() globals.set_int(AG, 77) end)


--抢劫选项-------------------------------------------------------------------------------------




	--[[        QJXX:add_button("设置团队生命数100", function()
				-- menu.instant_heist_team_life("fm_mission_controller", 100)
				chk_script_host("fm_mission_controller")
				SET_INT_LOCAL("fm_mission_controller", 26136 + 1325 + 1, 100)        end)]]

        QJXX:add_button("转换CEO/首领", function()
            local playerIndex = stats.get_int("MPPLY_LAST_MP_CHAR") --读取角色ID
            --playerOrganizationTypeRaw: {('Global_1895156[PLAYER::PLAYER_ID() /*609*/].f_10.f_429', '1')}  GLOBAL  
            --playerOrganizationType: {('1895156', '*609', '10', '429', '1')}  GLOBAL  global + (pid *pidmultiplier) + offset + offset + offset (values: 0 = CEO and 1 = MOTORCYCLE CLUB) 
            if globals.get_int(1895156+playerIndex*609+10+429+1) == 0 then --1895156+playerIndex*609+10+429+1 = 0 为CEO =1为摩托帮首领
                globals.set_int(1895156+playerIndex*609+10+429+1,1)
                gui.show_message("提示","已转换为摩托帮首领")
            else
                if globals.get_int(1895156+playerIndex*609+10+429+1) == 1 then
                    globals.set_int(1895156+playerIndex*609+10+429+1,0)
                    gui.show_message("提示","已转换为CEO")
                else
                    gui.show_message("您不是老大","您既不是CEO也不是首领")
                end
            end        end)
        QJXX:add_sameline()   ------同行
        QJXX:add_button("随机位置", function()
            ENTITY.SET_ENTITY_COORDS(PLAYER.PLAYER_PED_ID(), math.random(-1794,2940), math.random(-3026,6298), -199.9,1,0,0,1)        end)
        QJXX:add_sameline()   ------同行
        QJXX:add_button("生成KuLou马", function()
            spawn("KURUMA2")        end)
        QJXX:add_sameline()   ------同行 
        local react2any1 = QJXX:add_checkbox("击杀NPC") --只是一个开关，代码往后面找
        QJXX:add_sameline()   ------同行
        local react3any1 = QJXX:add_checkbox("燃烧NPC") --只是一个开关，代码往后面找
        QJXX:add_sameline()   ------同行
        local react2anyac1 = QJXX:add_checkbox("击杀敌对NPC") --只是一个开关，代码往后面找
		QJXX:add_sameline()   ------同行
        local react3anyac1 = QJXX:add_checkbox("燃烧敌对NPC") --只是一个开关，代码往后面找

		QJXX:add_separator()  ------分割线
		local cashmtp = QJXX:add_checkbox("设置联系人任务收入倍率")
		QJXX:add_sameline()   ------同行
		local cashmtpin = QJXX:add_input_float("倍-联系人")
		QJXX:add_separator()  ------分割线

		QJXX:add_text("提示：此处修改分红的百分百数量,然后点击下面的任何对应的分红!必须在开任何分配分红界面修改!")
        local dommsx = QJXX:add_input_int("设置分红")
		dommsx:set_value(25)

    --佩岛---------------------------------------------------------------------------------

		QJXX:add_separator()  ------分割线
		QJXX:add_separator()  ------分割线
		QJXX:add_text("      佩岛:")

        QJXX:add_button("完成佩岛前置", function()
			stats.set_int(MPX .. "H4_PROGRESS", 131055)
			stats.set_int(MPX .. "H4CNF_TARGET", 5)
			stats.set_int(MPX .. "H4_MISSIONS", -1)
			stats.set_int(MPX .. "H4CNF_APPROACH", -1)
			stats.set_int(MPX .. "H4CNF_BS_ENTR", 63)
            gui.show_message("写入完成", "远离计划面板并重新接近以刷新面板")        end)
        QJXX:add_sameline()   ------同行
		QJXX:add_button("重置佩岛前置", function()
			stats.set_int(MPX .. "H4_PROGRESS", 0)
			stats.set_int(MPX .. "H4CNF_TARGET", 0)
			stats.set_int(MPX .. "H4_MISSIONS", 0)
			stats.set_int(MPX .. "H4CNF_APPROACH", 0)
			stats.set_int(MPX .. "H4CNF_BS_ENTR", 0)
			gui.show_message("写入完成", "远离计划面板并重新接近以刷新面板")        end)
        QJXX:add_sameline()   ------同行
        QJXX:add_button("一键设置黑Bao+困难模式(完成前置)", function()
		    stats.set_int(MPX .. "H4CNF_BS_GEN",131071)
            stats.set_int(MPX .. "H4CNF_BS_ENTR",63)
            stats.set_int(MPX .. "H4CNF_BS_ABIL",63)
            stats.set_int(MPX .. "H4CNF_WEAPONS",5)
		    stats.set_int(MPX .. "H4CNF_WEP_DISRP",3)
            stats.set_int(MPX .. "H4CNF_ARM_DISRP",3)
            stats.set_int(MPX .. "H4CNF_HEL_DISRP",3)
            stats.set_int(MPX .. "H4CNF_TARGET",5)
		    stats.set_int(MPX .. "H4CNF_TROJAN",2)
            stats.set_int(MPX .. "H4CNF_APPROACH",-1)
            stats.set_int(MPX .. "H4LOOT_CASH_I",0)
            stats.set_int(MPX .. "H4LOOT_CASH_C",0)
		    stats.set_int(MPX .. "H4LOOT_WEED_I",0)
            stats.set_int(MPX .. "H4LOOT_WEED_C",0)
            stats.set_int(MPX .. "H4LOOT_COKE_I",0)
            stats.set_int(MPX .. "H4LOOT_COKE_C",0)
            stats.set_int(MPX .. "H4LOOT_CASH_I",0)
            stats.set_int(MPX .. "H4LOOT_GOLD_I",0)
		    stats.set_int(MPX .. "H4LOOT_GOLD_C",0)
            stats.set_int(MPX .. "H4LOOT_PAINT",-1)
            stats.set_int(MPX .. "H4_PROGRESS",131055)
            stats.set_int(MPX .. "H4LOOT_CASH_I_SCOPED",0)
            stats.set_int(MPX .. "H4LOOT_CASH_C_SCOPED",0)
		    stats.set_int(MPX .. "H4LOOT_WEED_I_SCOPED",0)
            stats.set_int(MPX .. "H4LOOT_WEED_C_SCOPED",0)
            stats.set_int(MPX .. "H4LOOT_COKE_I_SCOPED",0)
            stats.set_int(MPX .. "H4LOOT_COKE_C_SCOPED",0)
            stats.set_int(MPX .. "H4LOOT_GOLD_I_SCOPED",0)
            stats.set_int(MPX .. "H4LOOT_GOLD_C_SCOPED",0)
		    stats.set_int(MPX .. "H4LOOT_PAINT_SCOPED",-1)
            stats.set_int(MPX .. "H4_MISSIONS",65535)
            stats.set_int(MPX .. "H4_PLAYTHROUGH_STATUS",32)         end)
        QJXX:add_sameline()   ------同行
        QJXX:add_button("正常难度", function()
			stats.set_int(MPX .. "H4_PROGRESS", 126823)            end)
        QJXX:add_sameline()   ------同行
        QJXX:add_button("困难难度", function()
			stats.set_int(MPX .. "H4_PROGRESS", 131055)            end)
        QJXX:add_separator()  ------分割线


		--[[  暂时删除的
			QJXX:add_text("主要目标:"  )
			QJXX:add_sameline()   ------同行
			QJXX:add_button("龙舌兰酒", function()
				stats.set_int(MPX .. "H4CNF_TARGET", 0)		end)
			QJXX:add_sameline()   ------同行
			QJXX:add_button("红宝石项链", function()
				stats.set_int(MPX .. "H4CNF_TARGET", 1)		end)
			QJXX:add_sameline()   ------同行
			QJXX:add_button("无记名债券", function()
				stats.set_int(MPX .. "H4CNF_TARGET", 2)		end)
			QJXX:add_sameline()   ------同行
			QJXX:add_button("粉红钻石", function()
				stats.set_int(MPX .. "H4CNF_TARGET", 3)		end)
			QJXX:add_sameline()   ------同行
			QJXX:add_button("黑豹雕像", function()
				stats.set_int(MPX .. "H4CNF_TARGET", 5)		end)

			QJXX:add_text("次要目标:"  )
			QJXX:add_sameline()   ------同行
			QJXX:add_button("黄金", function()
				stats.set_int(MPX .. "H4LOOT_GOLD_C", 255)
				stats.set_int(MPX .. "H4LOOT_GOLD_C_SCOPED", 255)
				stats.set_int(MPX .. "H4LOOT_GOLD_V", 1191817)		end)
			QJXX:add_sameline()   ------同行
			QJXX:add_button("绘画", function()
				stats.set_int(MPX .. "H4LOOT_PAINT", -1)
				stats.set_int(MPX .. "H4LOOT_PAINT_SCOPED", -1)
				stats.set_int(MPX .. "H4LOOT_PAINT_V", 403500)		end)
			QJXX:add_sameline()   ------同行
			QJXX:add_button("可卡因", function()
				stats.set_int(MPX .. "H4LOOT_COKE_C", -1)
				stats.set_int(MPX .. "H4LOOT_COKE_C_SCOPED", -1)		end)
			QJXX:add_sameline()   ------同行
			QJXX:add_button("大麻", function()
				stats.set_int(MPX .. "H4LOOT_WEED_C", -1)
				stats.set_int(MPX .. "H4LOOT_WEED_C_SCOPED", -1)		end)
			QJXX:add_sameline()   ------同行
			QJXX:add_button("现金", function()
				stats.set_int(MPX .. "H4LOOT_CASH_C", -1)
				stats.set_int(MPX .. "H4LOOT_CASH_C_SCOPED", -1)		end)

			QJXX:add_text("所有岛屿储存战利品:"  )
			QJXX:add_sameline()   ------同行
			QJXX:add_button("黄金", function()
				stats.set_int(MPX .. "H4LOOT_GOLD_I", -1)
				stats.set_int(MPX .. "H4LOOT_GOLD_V", 1191817)
				stats.set_int(MPX .. "H4LOOT_GOLD_I_SCOPED", -1)		end)
			QJXX:add_sameline()   ------同行
			QJXX:add_button("可卡因", function()
				stats.set_int(MPX .. "H4LOOT_COKE_I", -1)
				stats.set_int(MPX .. "H4LOOT_COKE_I_SCOPED", -1)		end)
			QJXX:add_sameline()   ------同行
			QJXX:add_button("大麻", function()
				stats.set_int(MPX .. "H4LOOT_WEED_I", -1)
				stats.set_int(MPX .. "H4LOOT_WEED_I_SCOPED", -1)		end)
			QJXX:add_sameline()   ------同行
			QJXX:add_button("现金", function()
				stats.set_int(MPX .. "H4LOOT_CASH_I", -1)
				stats.set_int(MPX .. "H4LOOT_CASH_I_SCOPED", -1)		end)

			QJXX:add_text("设置武器套装:"  )
			QJXX:add_sameline()   ------同行
			QJXX:add_button("侵略者套装", function()
				stats.set_int(MPX .. "H4CNF_WEAPONS", 1)		end)
			QJXX:add_sameline()   ------同行
			QJXX:add_button("阴谋者套装", function()
				stats.set_int(MPX .. "H4CNF_WEAPONS", 2)		end)
			QJXX:add_sameline()   ------同行
			QJXX:add_button("神枪手套装", function()
				stats.set_int(MPX .. "H4CNF_WEAPONS", 3)		end)
			QJXX:add_sameline()   ------同行
			QJXX:add_button("破坏者套装", function()
				stats.set_int(MPX .. "H4CNF_WEAPONS", 4)		end)
			QJXX:add_sameline()   ------同行
			QJXX:add_button("神射手套装", function()
				stats.set_int(MPX .. "H4CNF_WEAPONS", 5)		end)
		---]]

		QJXX:add_text("选择冷却时间,然后离线,然后再上网:"  )
		QJXX:add_sameline()   ------同行
		QJXX:add_button("跳过冷却 (单人模式)", function()
			stats.set_int(MPX .. "H4_TARGET_POSIX", 1659643454)
			stats.set_int(MPX .. "H4_COOLDOWN", 0)
			stats.set_int(MPX .. "H4_COOLDOWN_HARD", 0)			end)
        QJXX:add_sameline()   ------同行
		QJXX:add_button("跳过冷却 (朋友模式)", function()
			stats.set_int(MPX .. "H4_TARGET_POSIX", 1659429119)
			stats.set_int(MPX .. "H4_COOLDOWN", 0)
			stats.set_int(MPX .. "H4_COOLDOWN_HARD", 0)			end)

        QJXX:add_separator()  ------分割线
		QJXX:add_button("跳指纹", function()
            if GET_INT_LOCAL("fm_mission_controller_2020", 23669) ~= 1 then
               SET_INT_LOCAL("fm_mission_controller_2020", 23669, 5)
            end       end)
        QJXX:add_sameline()   ------同行
        QJXX:add_button("快速切割", function()
                SET_FLOAT_LOCAL("fm_mission_controller_2020", 29685 + 3, 100)
                end, function()
                SET_FLOAT_LOCAL("fm_mission_controller_2020", 29685 + 3, 0)            end)
        QJXX:add_sameline()   ------同行
        QJXX:add_button("跳过排水切割", function()
            if GET_INT_LOCAL("fm_mission_controller_2020", 28446) ~= 4 then
               SET_INT_LOCAL("fm_mission_controller_2020", 28446, 6)
            end       end)
        QJXX:add_sameline()   ------同行
        QJXX:add_button("拆除所有闭路电视", function()
            for _, ent in pairs(entities.get_all_objects_as_handles()) do
                for __, cam in pairs(CamList) do
                    if ENTITY.GET_ENTITY_MODEL(ent) == cam then
                        ENTITY.SET_ENTITY_AS_MISSION_ENTITY(ent,true,true) --不执行这个下面会删除失败 @nord123#9579
                        ENTITY.DELETE_ENTITY(ent)               
                    end
                end
            end        end)
        QJXX:add_sameline()   ------同行           
        QJXX:add_button("最大包尺寸", function()
            globals.set_int(262145 + 29939, 2147483647)        end)
        QJXX:add_sameline()   ------同行
        QJXX:add_button("移除佩里科重甲兵", function()
            for _, ent in pairs(entities.get_all_peds_as_handles()) do
                if ENTITY.GET_ENTITY_MODEL(ent) == 193469166 then
                    ENTITY.SET_ENTITY_AS_MISSION_ENTITY(ent,true,true) --不执行这个下面会删除失败
                    ENTITY.DELETE_ENTITY(ent)
                end
            end        end)

        QJXX:add_button("呼叫虎Jing", function()
            globals.set_int(2794162 + 960, 1)        end)
        QJXX:add_sameline()   ------同行
        QJXX:add_button("传到虎Jing内", function()
            -- TELEPORT(1561.2369, 385.8771, -49.689915)
            -- TELEPORT(-619.987, 282.960, 81.639)
            -- if STAT_GET_INT("IH_SUB_OWNED") == 0 then
            -- else

                -- STAT_SET_INT("H4_PROGRESS", 131055)
            -- end
                TELEPORT(1561.2369, 385.8771, -49.689915)
                SET_HEADING(175)        end)
        QJXX:add_sameline()   ------同行
        QJXX:add_button("传到大门", function()
            TELEPORT(4990.0386, -5717.6895, 19.880217)
            SET_HEADING(50)        end)
        QJXX:add_sameline()   ------同行
        QJXX:add_button("传到大门出口", function()
            TELEPORT(4974.189, -5703.279, 19.898539)        end)
        QJXX:add_sameline()   ------同行
        QJXX:add_button("传到主目标", function()
            TELEPORT(5006.7, -5756.2, 14.8)
            SET_HEADING(145)        end)
        QJXX:add_sameline()   ------同行
        QJXX:add_button("传到海里", function()
            TELEPORT(4771.479, -6165.737, -39.079613)        end)

        CamList = {   ---------拆除所有闭路电视所需的代码  --credits heist control
            joaat("prop_cctv_cam_01a"),
            joaat("prop_cctv_cam_01b"),
            joaat("prop_cctv_cam_02a"),
            joaat("prop_cctv_cam_03a"),
            joaat("prop_cctv_cam_04a"),
            joaat("prop_cctv_cam_04c"),
            joaat("prop_cctv_cam_05a"),
            joaat("prop_cctv_cam_06a"),
            joaat("prop_cctv_cam_07a"),
            joaat("prop_cs_cctv"),
            joaat("p_cctv_s"),
            joaat("hei_prop_bank_cctv_01"),
            joaat("hei_prop_bank_cctv_02"),
            joaat("ch_prop_ch_cctv_cam_02a"),
            joaat("xm_prop_x17_server_farm_cctv_01"),}  

		QJXX:add_text("佩岛分红:")
        QJXX:add_sameline()   ------同行
        QJXX:add_button("设置佩岛全员分红", function()
            SET_INT_GLOBAL(1978495 + 881 + 1, dommsx:get_value())
            SET_INT_GLOBAL(1978495 + 881 + 2, dommsx:get_value())
            SET_INT_GLOBAL(1978495 + 881 + 3, dommsx:get_value())        end)
        QJXX:add_sameline()   ------同行
        QJXX:add_button("设置佩岛玩家1分红", function()
            SET_INT_GLOBAL(1978495 + 881 + 1, dommsx:get_value())        end)
        QJXX:add_sameline()   ------同行
        QJXX:add_button("设置佩岛玩家2分红", function()
            SET_INT_GLOBAL(1978495 + 881 + 2, dommsx:get_value())        end)
        QJXX:add_sameline()   ------同行
        QJXX:add_button("设置佩岛玩家3分红", function()
            SET_INT_GLOBAL(1978495 + 881 + 3, dommsx:get_value())        end)
        QJXX:add_sameline()   ------同行
        QJXX:add_button("设置佩岛玩家4分红", function()
            SET_INT_GLOBAL(1978495 + 881 + 4, dommsx:get_value())        end)

    --末日---------------------------------------------------------------------------------

		QJXX:add_separator()  ------分割线
		QJXX:add_separator()  ------分割线
		QJXX:add_text("      末日:")

		QJXX:add_button("跳到-数据泄露", function()
			stats.set_int(MPX .. "GANGOPS_FLOW_MISSION_PROG", 503)
			stats.set_int(MPX .. "GANGOPS_HEIST_STATUS", -229383)
			stats.set_int(MPX .. "GANGOPS_FLOW_NOTIFICATIONS",1557)		end)
        QJXX:add_sameline()   ------同行
		 QJXX:add_button("跳到-波格丹危机", function()
			stats.set_int(MPX .. "GANGOPS_FLOW_MISSION_PROG", 240)
			stats.set_int(MPX .. "GANGOPS_HEIST_STATUS", -229378)
			stats.set_int(MPX .. "GANGOPS_FLOW_NOTIFICATIONS",1557)		end)
        QJXX:add_sameline()   ------同行
		QJXX:add_button("跳到-末日将至", function()
			stats.set_int(MPX .. "GANGOPS_FLOW_MISSION_PROG", 16368)
			stats.set_int(MPX .. "GANGOPS_HEIST_STATUS", -229380)
			stats.set_int(MPX .. "GANGOPS_FLOW_NOTIFICATIONS",1557)		end)
        QJXX:add_sameline()   ------同行
		QJXX:add_button("重置准备任务", function()
			stats.set_int(MPX .. "GANGOPS_FLOW_MISSION_PROG", 240)
			stats.set_int(MPX .. "GANGOPS_HEIST_STATUS", 0)
			stats.set_int(MPX .. "GANGOPS_FLOW_NOTIFICATIONS", 1557)		end)
        QJXX:add_sameline()   ------同行

	    QJXX:add_button("传到设施", function()
            local PlayerPos = ENTITY.GET_OFFSET_FROM_ENTITY_IN_WORLD_COORDS(PLAYER.PLAYER_PED_ID(), 0.0, 0.52, 0.0)
            local intr = INTERIOR.GET_INTERIOR_AT_COORDS(PlayerPos.x, PlayerPos.y, PlayerPos.z)

            if intr == 269313 then 
                gui.show_message("无需传送","您已在设施内")
            else
                tpfac()
            end        end)
        QJXX:add_sameline()   ------同行
        QJXX:add_button("传到设施计划Ping幕", function()
            local PlayerPos = ENTITY.GET_OFFSET_FROM_ENTITY_IN_WORLD_COORDS(PLAYER.PLAYER_PED_ID(), 0.0, 0.52, 0.0)
            local intr = INTERIOR.GET_INTERIOR_AT_COORDS(PlayerPos.x, PlayerPos.y, PlayerPos.z)
            if intr == 269313 then 
                if HUD.DOES_BLIP_EXIST(HUD.GET_FIRST_BLIP_INFO_ID(428)) then
                    TELEPORT(350.69284, 4872.308, -60.794243)
                    SET_HEADING(-50)
                end
            else
                gui.show_message("确保自己在设施内","请先进入设施再传送到计划屏幕")
                tpfac()
            end        end)
        QJXX:add_sameline()   ------同行
        QJXX:add_button("破解小游戏", function()
            SET_INT_LOCAL("fm_mission_controller", 1509, 3)
            SET_INT_LOCAL("fm_mission_controller", 1540, 2)
            SET_INT_LOCAL("fm_mission_controller", 1266 + 135, 3)        end)
        QJXX:add_sameline()   ------同行
        QJXX:add_button("设置团队生命数100", function()
            -- menu.instant_heist_team_life("fm_mission_controller", 100)
            chk_script_host("fm_mission_controller")
            SET_INT_LOCAL("fm_mission_controller", 26136 + 1325 + 1, 100)        end)

		QJXX:add_text("末日分红:")
		QJXX:add_sameline()   ------同行
		QJXX:add_button("设置末日全员分红", function()
            SET_INT_GLOBAL(1967630 + 812 + 50 + 1, dommsx:get_value())
            SET_INT_GLOBAL(1967630 + 812 + 50 + 2, dommsx:get_value())
            SET_INT_GLOBAL(1967630 + 812 + 50 + 3, dommsx:get_value())
            SET_INT_GLOBAL(1967630 + 812 + 50 + 4, dommsx:get_value())        end)
		QJXX:add_sameline()   ------同行
        QJXX:add_button("设置末日玩家1分红", function()
            SET_INT_GLOBAL(1967630 + 812 + 50  + 1, dommsx:get_value())        end)
        QJXX:add_sameline()   ------同行
        QJXX:add_button("设置末日玩家2分红", function()
            SET_INT_GLOBAL(1967630 + 812 + 50  + 2, dommsx:get_value())        end)
        QJXX:add_sameline()   ------同行
        QJXX:add_button("设置末日玩家3分红", function()
            SET_INT_GLOBAL(1967630 + 812 + 50  + 3, dommsx:get_value())        end)
        QJXX:add_sameline()   ------同行
        QJXX:add_button("设置末日玩家4分红", function()
            SET_INT_GLOBAL(1967630 + 812 + 50  + 4, dommsx:get_value())        end)

    --赌场---------------------------------------------------------------------------------

		QJXX:add_separator()  ------分割线
		QJXX:add_separator()  ------分割线
		QJXX:add_text("      赌场:")

        QJXX:add_button("完成气势XiongXiong前置", function()
		    stats.set_int(MPX .. "H3_COMPLETEDPOSIX", -1)
		    stats.set_int(MPX .. "H3OPT_MASKS", 4)
            stats.set_int(MPX .. "H3OPT_WEAPS", 1)		    
            stats.set_int(MPX .. "H3OPT_VEHS", 3)
		    -- stats.set_int(MPX .. "CAS_HEIST_FLOW", -1)
            stats.set_int(MPX .. "H3_LAST_APPROACH", 0)		    
            stats.set_int(MPX .. "H3OPT_APPROACH", 3)
		    stats.set_int(MPX .. "H3_HARD_APPROACH", 0)
            stats.set_int(MPX .. "H3OPT_TARGET", 3)		    
            stats.set_int(MPX .. "H3OPT_POI", 1023)
		    stats.set_int(MPX .. "H3OPT_ACCESSPOINTS", 2047)
            stats.set_int(MPX .. "H3OPT_CREWWEAP", 4)
		    stats.set_int(MPX .. "H3OPT_CREWDRIVER", 3)
            stats.set_int(MPX .. "H3OPT_CREWHACKER", 4)
            stats.set_int(MPX .. "H3OPT_DISRUPTSHIP", 3)
            stats.set_int(MPX .. "H3OPT_BODYARMORLVL", -1)
            stats.set_int(MPX .. "H3OPT_KEYLEVELS", 2)
            stats.set_int(MPX .. "H3OPT_BITSET1", 799)
            stats.set_int(MPX .. "H3OPT_BITSET0", 3670102)
            gui.show_message("写入完成")        end)
        QJXX:add_sameline()   ------同行
        QJXX:add_button("一键设置赌场静音&偷偷摸摸", function()
    	        stats.set_int(MPX .. "H3OPT_APPROACH", 1)
                stats.set_int(MPX .. "H3_LAST_APPROACH", 3)
                stats.set_int(MPX .. "H3OPT_TARGET", 3)
                stats.set_int(MPX .. "H3OPT_BITSET1", 127)
		        stats.set_int(MPX .. "H3OPT_DISRUPTSHIP", 3)
                stats.set_int(MPX .. "H3OPT_KEYLEVELS", 2)
                stats.set_int(MPX .. "H3OPT_CREWWEAP", 4)
                stats.set_int(MPX .. "H3OPT_CREWDRIVER", 5) 
                stats.set_int(MPX .. "H3OPT_CREWHACKER", 5)
		        stats.set_int(MPX .. "H3OPT_VEHS", 2)
                stats.set_int(MPX .. "H3OPT_WEAPS", 1)
                stats.set_int(MPX .. "H3OPT_BITSET0", 262399)
                stats.set_int(MPX .. "H3OPT_MASKS", 2)         end)
        QJXX:add_sameline()   ------同行
        QJXX:add_button("一键设置赌场大骗局模式", function()
		        stats.set_int(MPX .. "H3OPT_APPROACH", 2)
                stats.set_int(MPX .. "H3_LAST_APPROACH", 3)
                stats.set_int(MPX .. "H3OPT_TARGET", 3)
                stats.set_int(MPX .. "H3OPT_BITSET1", 799)
		        stats.set_int(MPX .. "H3OPT_DISRUPTSHIP", 3)
                stats.set_int(MPX .. "H3OPT_KEYLEVELS", 2)
                stats.set_int(MPX .. "H3OPT_CREWWEAP", 4)
                stats.set_int(MPX .. "H3OPT_CREWDRIVER", 5) 
                stats.set_int(MPX .. "H3OPT_CREWHACKER", 5)
		        stats.set_int(MPX .. "H3OPT_VEHS", 2)
                stats.set_int(MPX .. "H3OPT_WEAPS", 0)
                stats.set_int(MPX .. "H3OPT_BITSET0", 913623)
                stats.set_int(MPX .. "H3OPT_MASKS", 2)         end)
        QJXX:add_sameline()   ------同行
        QJXX:add_button("一键设置赌场攻击模式", function()
		        stats.set_int(MPX .. "H3OPT_APPROACH", 3)
                stats.set_int(MPX .. "H3_LAST_APPROACH", 1)
                stats.set_int(MPX .. "H3OPT_TARGET", 3)
                stats.set_int(MPX .. "H3OPT_BITSET1", 799)
		        stats.set_int(MPX .. "H3OPT_DISRUPTSHIP", 3)
                stats.set_int(MPX .. "H3OPT_KEYLEVELS", 2)
                stats.set_int(MPX .. "H3OPT_CREWWEAP", 4)
                stats.set_int(MPX .. "H3OPT_CREWDRIVER", 5) 
                stats.set_int(MPX .. "H3OPT_CREWHACKER", 5)
		        stats.set_int(MPX .. "H3OPT_VEHS", 2)
                stats.set_int(MPX .. "H3OPT_WEAPS", 1)
                stats.set_int(MPX .. "H3OPT_BITSET0", 1835223)
                stats.set_int(MPX .. "H3OPT_MASKS", 2)         end)

        QJXX:add_button("重置准备", function()
	        stats.set_int(MPX .. "H3OPT_BITSET1", 0)
	        stats.set_int(MPX .. "H3OPT_BITSET0", 0)        end)
        QJXX:add_sameline()   ------同行
        QJXX:add_button("重装冷却", function()
	        stats.set_int(MPX .. "H3_COMPLETEDPOSIX", -1)
	        stats.set_int("MPPLY_H3_COOLDOWN", -1)        end)
        QJXX:add_sameline()   ------同行
        QJXX:add_button("一键拿取113w", function()
            chk_script_host("fm_mission_controller")
            SET_INT_LOCAL("fm_mission_controller", 19710 + 2686, 1136360)        end)
        QJXX:add_sameline()   ------同行
        QJXX:add_button("跳指纹/密码锁", function()
            if GET_INT_LOCAL("fm_mission_controller", 52964) ~= 1 then
                SET_INT_LOCAL("fm_mission_controller", 52964, 5)
            end
            if GET_INT_LOCAL("fm_mission_controller", 54026) ~= 1 then
                SET_INT_LOCAL("fm_mission_controller", 54026, 5)
            end        end)
        QJXX:add_sameline()   ------同行
        QJXX:add_button("跳切割金库", function()
            SET_INT_LOCAL("fm_mission_controller", 10101 + 7, GET_INT_LOCAL("fm_mission_controller", 10101 + 37))        end)
        QJXX:add_sameline()   ------同行     
        QJXX:add_button("传到游戏厅前门口", function()
            TELEPORT(-619.987, 282.960, 81.639)        end)
        QJXX:add_sameline()   ------同行
        QJXX:add_button("传送到下水道", function()
            TELEPORT(1034.9442, -271.90024, 50.37195)
            SET_HEADING(28)        end)



        QJXX:add_sameline()   ------同行
        QJXX:add_button("设置拿取金额", function()
            chk_script_host("fm_mission_controller")
            SET_INT_LOCAL("fm_mission_controller", 19710 + 2686, casino_take:get_value())        end)

		QJXX:add_text("赌场分红:")
		QJXX:add_sameline()   ------同行
		QJXX:add_button("设置赌场全员分红", function()
            SET_INT_GLOBAL(1971696 + 2325 + 1, dommsx:get_value())
            SET_INT_GLOBAL(1971696 + 2325 + 2, dommsx:get_value())
            SET_INT_GLOBAL(1971696 + 2325 + 3, dommsx:get_value())
            SET_INT_GLOBAL(1971696 + 2325 + 4, dommsx:get_value())        end)
		QJXX:add_sameline()   ------同行
        QJXX:add_button("设置赌场玩家1分红", function()
            SET_INT_GLOBAL(1971696 + 2325  + 1, dommsx:get_value())        end)
        QJXX:add_sameline()   ------同行
        QJXX:add_button("设置赌场玩家2分红", function()
            SET_INT_GLOBAL(1971696 + 2325  + 2, dommsx:get_value())        end)
        QJXX:add_sameline()   ------同行
        QJXX:add_button("设置赌场玩家3分红", function()
            SET_INT_GLOBAL(1971696 + 2325  + 3, dommsx:get_value())        end)
        QJXX:add_sameline()   ------同行
        QJXX:add_button("设置赌场玩家4分红", function()
            SET_INT_GLOBAL(1971696 + 2325  + 4, dommsx:get_value())        end)

    --公寓---------------------------------------------------------------------------------
		QJXX:add_separator()  ------分割线
		QJXX:add_separator()  ------分割线
		QJXX:add_text("      公Yu:")

		QJXX:add_button("传到公Yu", function()
			TELEPORT(-775.6636, 309.19543, 85.69813)
			SET_HEADING(11)       end)
		QJXX:add_sameline()   ------同行
		QJXX:add_button("跳过当前的公Yu前置", function()
			stats.set_int(MPX .. "HEIST_PLANNING_STAGE", -1)    end)


	--电脑管理显示菜单---------------------------------------------------------------------

        DNXS = QJXX:add_tab("      电脑管理显示菜单")

        DNXS:add_text("通过邀请在战局中正常工作。在公开战局上不太管用")

        DNXS:add_button("显示主控计算机", function()
            local playerIndex = globals.get_int(1574918)
            if globals.get_int(1895156+playerIndex*609+10+429+1) == 0 then
                run_script("apparcadebusinesshub")
            else
                if globals.get_int(1895156+playerIndex*609+10+429+1) == 1 then
                    run_script("apparcadebusinesshub")
                else
                        gui.show_message("别忘了注册成为 CEO/Leader")
                        run_script("apparcadebusinesshub")
                        end
                end        end)

        DNXS:add_button("显示夜总会电脑", function()
            local playerIndex = globals.get_int(1574918)
            if globals.get_int(1895156+playerIndex*609+10+429+1) == 0 then
                run_script("appbusinesshub")
            else
                if globals.get_int(1895156+playerIndex*609+10+429+1) == 1 then
                    run_script("appbusinesshub")
                else
                        gui.show_message("别忘了注册成为 CEO/Leader")
                        run_script("appbusinesshub")
                end
            end        end)

        DNXS:add_button("显示办公室电脑", function()
            local playerIndex = globals.get_int(1574918)
            if globals.get_int(1895156+playerIndex*609+10+429+1) == 0 then
                run_script("appfixersecurity")
            else
                if globals.get_int(1895156+playerIndex*609+10+429+1) == 1 then
                    globals.set_int(1895156+playerIndex*609+10+429+1,0)
                    gui.show_message("prompt","Converted to CEO")
                    run_script("appfixersecurity")
                    else
                    gui.show_message("别忘了注册成为 CEO/Leader","也可能是脚本检测错误、已知问题，不需要反馈")
                    run_script("appfixersecurity")
                end
            end        end)

        DNXS:add_button("显示地堡电脑", function()
            local playerIndex = globals.get_int(1574918)
            if globals.get_int(1895156+playerIndex*609+10+429+1) == 0 then
                run_script("appbunkerbusiness")
            else
                if globals.get_int(1895156+playerIndex*609+10+429+1) == 1 then
                    run_script("appbunkerbusiness")
                    else
                        gui.show_message("别忘了注册成为 CEO/Leader","也可能是脚本检测错误、已知问题，不需要反馈")
                        run_script("appbunkerbusiness")
                    end
            end        end)

        DNXS:add_button("显示机库电脑", function()
            local playerIndex = globals.get_int(1574918)
            if globals.get_int(1895156+playerIndex*609+10+429+1) == 0 then
                run_script("appsmuggler")
            else
                if globals.get_int(1895156+playerIndex*609+10+429+1) == 1 then
                    run_script("appsmuggler")
                    else
                        gui.show_message("别忘了注册成为 CEO/Leader","也可能是脚本检测错误、已知问题，不需要反馈")
                        run_script("appsmuggler")
                    end
            end        end)

        DNXS:add_button("显示恐霸面板", function()
            local playerIndex = globals.get_int(1574918)
            if globals.get_int(1895156+playerIndex*609+10+429+1) == 0 then
                run_script("apphackertruck")
            else
                if globals.get_int(1895156+playerIndex*609+10+429+1) == 1 then
                    run_script("apphackertruck")
                else
                    gui.show_message("别忘了注册成为 CEO/Leader","也可能是脚本检测错误、已知问题，不需要反馈")
                    run_script("apphackertruck")
                end
            end        end)

        DNXS:add_button("展示复仇者面板", function()
            local playerIndex = globals.get_int(1574918)
            if globals.get_int(1895156+playerIndex*609+10+429+1) == 0 then
                run_script("appAvengerOperations")
            else
                if globals.get_int(1895156+playerIndex*609+10+429+1) == 1 then
                    run_script("appAvengerOperations")
                else
                    gui.show_message("别忘了注册成为 CEO/Leader","也可能是脚本检测错误、已知问题，不需要反馈")
                    run_script("appAvengerOperations")
                end
            end        end)

        DNXS:add_button("展示街机电脑(仅在街机俱乐部或邀请环节工作)", function()
            local playerIndex = globals.get_int(1574918)
            if globals.get_int(1895156+playerIndex*609+10+429+1) == 0 then
                run_script("apparcadebusiness")
            else
                if globals.get_int(1895156+playerIndex*609+10+429+1) == 1 then
                    run_script("apparcadebusiness")
                else
                        gui.show_message("别忘了注册成为 CEO/Leader")
                        run_script("apparcadebusiness")
                end
            end        end)


	--任务助手---------------------------------------------------------------------

        RWZS = QJXX:add_tab("      任务助手")

        ---------------------------------------------------------------------------------- RC那个载具功能的里面的
            RWZS:add_button("传送到藏Ni屋", function()
                local blip = HUD.GET_CLOSEST_BLIP_INFO_ID(845)
                if HUD.DOES_BLIP_EXIST(blip) then
                    local coords = HUD.GET_BLIP_COORDS(blip)
                    teleport2(coords)
                else
                    gui.show_message("传送", "未在地图上找到藏匿屋")
                end            end)
            RWZS:add_sameline()   ------同行
            RWZS:add_button("通知藏Ni屋密码", function()

                if INTERIOR.GET_INTERIOR_FROM_ENTITY(PLAYER.PLAYER_PED_ID()) == 289793 then
                    local code_list = {
                        -- hash, code
                        { 4221637939, "01-23-45" },
                        { 1433270535, "02-12-87" },
                        { 944906360,  "05-02-91" },
                        { 3046060548, "24-10-81" },
                        { 1626709912, "28-03-98" },
                        { 921471402,  "28-11-97" },
                        { 3648550039, "44-23-37" },
                        { 4136820571, "72-68-83" },
                        { 1083248297, "73-27-38" },
                        { 2104921722, "77-79-73" },
                    }
                    for k, obj in pairs(entities.get_all_objects_as_handles()) do
                        if ENTITY.IS_ENTITY_A_MISSION_ENTITY(obj) then
                            local hash = ENTITY.GET_ENTITY_MODEL(obj)
                            for _, data in pairs(code_list) do
                                if hash == data[1] then
                                    gui.show_message("藏匿屋密码", data[2])
                                end
                            end
                        end
                    end
                end            end)
            RWZS:add_sameline()   ------同行
            RWZS:add_button("传送到杰拉德包裹", function()
                local blip = HUD.GET_CLOSEST_BLIP_INFO_ID(842)
                if HUD.DOES_BLIP_EXIST(blip) then
                    local coords = HUD.GET_BLIP_COORDS(blip)
                    teleport2(coords)
                else
                    gui.show_message("传送", "未在地图上找到杰拉德包裹")
                end            end)
            RWZS:add_sameline()   ------同行
            RWZS:add_button("进入范围后，传送到包裹", function()
                local entity_list = get_entities_by_hash("object", true, 138777325, 2674233009, 765087784)
                if next(entity_list) ~= nil then
                    for k, ent in pairs(entity_list) do
                        tp_to_entity(ent, 0.0, 0.0, 0.5)
                    end
                end            end)

            RWZS:add_separator()  ------分割线
            RWZS:add_button("打开恐霸电脑", function()
                if SCRIPT.GET_NUMBER_OF_THREADS_RUNNING_THE_SCRIPT_WITH_THIS_HASH(joaat("apphackertruck")) > 0 then
                    return
                end
                run_script("apphackertruck")            end)          
            RWZS:add_sameline()   ------同行       
            RWZS:add_button("爆炸敌对NPC", function()
                for _, ped in pairs(entities.get_all_peds_as_handles()) do
                    if is_hostile_entity(ped) then
                        local coords = ENTITY.GET_ENTITY_COORDS(ped)
                        FIRE.ADD_OWNED_EXPLOSION(PLAYER.PLAYER_PED_ID(), coords.x, coords.y, coords.z,
                            4, 100.0, false, false, 0.0)
                    end
                end            end)
            RWZS:add_sameline()   ------同行
            RWZS:add_button("爆炸敌对载具", function()
                for _, vehicle in pairs(entities.get_all_vehicles_as_handles()) do
                    if is_hostile_entity(vehicle) then
                        local coords = ENTITY.GET_ENTITY_COORDS(vehicle)
                        FIRE.ADD_OWNED_EXPLOSION(PLAYER.PLAYER_PED_ID(), coords.x, coords.y, coords.z,
                            4, 100.0, false, false, 0.0)
                    end
                end            end)
            RWZS:add_sameline()   ------同行
            RWZS:add_button("爆炸敌对物体", function()
                for _, object in pairs(entities.get_all_objects_as_handles()) do
                    if is_hostile_entity(object) then
                        local coords = ENTITY.GET_ENTITY_COORDS(object)
                        FIRE.ADD_OWNED_EXPLOSION(PLAYER.PLAYER_PED_ID(), coords.x, coords.y, coords.z,
                            4, 100.0, false, false, 0.0)
                    end
                end            end)


            RWZS:add_separator()  ------分割线
            RWZS:add_text("办公室拉货")
            RWZS:add_button("传送到 特种货物", function()
                local blip = HUD.GET_CLOSEST_BLIP_INFO_ID(478)
                if HUD.DOES_BLIP_EXIST(blip) then
                    local coords = HUD.GET_BLIP_COORDS(blip)
                    teleport(coords.x, coords.y, coords.z + 1.0)
                end            end)
            RWZS:add_sameline()   ------同行
            RWZS:add_button("特种货物 传送到我", function()
                local blip = HUD.GET_CLOSEST_BLIP_INFO_ID(478)
                if HUD.DOES_BLIP_EXIST(blip) then
                    local ent = HUD.GET_BLIP_INFO_ID_ENTITY_INDEX(blip)
                    if ENTITY.DOES_ENTITY_EXIST(ent) then
                        set_entity_head_to_entity(ent, PLAYER.PLAYER_PED_ID())
                        tp_to_me(ent)

                        if ENTITY.IS_ENTITY_A_VEHICLE(ent) then
                            tp_into_vehicle(ent)
                        end
                    else
                        toast("目标不是实体，无法传送到我")
                    end
                end            end)
            RWZS:add_sameline()   ------同行
            RWZS:add_button("特种货物(载具) 传送到我", function()
                local entity_list = get_entities_by_hash("object", true, 2972783418, 2272050386)
                if next(entity_list) ~= nil then
                    for k, ent in pairs(entity_list) do
                        if ENTITY.IS_ENTITY_ATTACHED(ent) then
                            local attached_ent = ENTITY.GET_ENTITY_ATTACHED_TO(ent)
                            if ENTITY.IS_ENTITY_A_VEHICLE(attached_ent) then
                                tp_vehicle_to_me(attached_ent)
                            end
                        end
                    end
                end            end)


            RWZS:add_separator()  ------分割线
            RWZS:add_text("地堡拉货")
            RWZS:add_button("传送到 地堡原材料", function()
                local blip1 = HUD.GET_CLOSEST_BLIP_INFO_ID(556)
                local blip2 = HUD.GET_CLOSEST_BLIP_INFO_ID(561)
                local blip3 = HUD.GET_CLOSEST_BLIP_INFO_ID(477)

                if HUD.DOES_BLIP_EXIST(blip1) then
                    local coords = HUD.GET_BLIP_COORDS(blip1)
                    teleport(coords.x, coords.y + 2.0, coords.z + 1.0)
                elseif HUD.DOES_BLIP_EXIST(blip2) then
                    local coords = HUD.GET_BLIP_COORDS(blip2)
                    teleport(coords.x, coords.y, coords.z + 1.0)
                elseif HUD.DOES_BLIP_EXIST(blip3) then
                    local coords = HUD.GET_BLIP_COORDS(blip3)
                    teleport(coords.x, coords.y, coords.z + 1.0)
                end            end)
            RWZS:add_sameline()   ------同行
            RWZS:add_button("地堡原材料 传送到我", function()
                local blip = HUD.GET_NEXT_BLIP_INFO_ID(556)
                if HUD.DOES_BLIP_EXIST(blip) then
                    local ent = HUD.GET_BLIP_INFO_ID_ENTITY_INDEX(blip)
                    if ENTITY.DOES_ENTITY_EXIST(ent) then
                        set_entity_head_to_entity(ent, PLAYER.PLAYER_PED_ID())
                        tp_to_me(ent)

                        if ENTITY.IS_ENTITY_A_VEHICLE(ent) then
                            tp_into_vehicle(ent)
                        end
                    else
                        toast("目标不是实体，无法传送到我")
                    end
                end            end)


            RWZS:add_separator()  ------分割线
            RWZS:add_text("摩托帮工厂")
            RWZS:add_button("传送到 工厂原材料", function()
                local blip1 = HUD.GET_CLOSEST_BLIP_INFO_ID(501)
                local blip2 = HUD.GET_CLOSEST_BLIP_INFO_ID(64)
                local blip3 = HUD.GET_CLOSEST_BLIP_INFO_ID(427)
                local blip4 = HUD.GET_CLOSEST_BLIP_INFO_ID(423)

                if HUD.DOES_BLIP_EXIST(blip1) then
                    local coords = HUD.GET_BLIP_COORDS(blip1)
                    teleport(coords.x, coords.y - 1.5, coords.z)
                elseif HUD.DOES_BLIP_EXIST(blip2) then
                    local coords = HUD.GET_BLIP_COORDS(blip2)
                    teleport(coords.x, coords.y - 1.5, coords.z)
                elseif HUD.DOES_BLIP_EXIST(blip3) then
                    local coords = HUD.GET_BLIP_COORDS(blip3)
                    teleport(coords.x, coords.y, coords.z + 1.0)
                elseif HUD.DOES_BLIP_EXIST(blip4) then
                    local coords = HUD.GET_BLIP_COORDS(blip4)
                    teleport(coords.x, coords.y + 1.5, coords.z - 1.0)
                end            end)
            RWZS:add_sameline()   ------同行
            RWZS:add_button("工厂原材料 传送到我", function()
                local blip = HUD.GET_CLOSEST_BLIP_INFO_ID(501)
                if HUD.DOES_BLIP_EXIST(blip) then
                    local ent = HUD.GET_BLIP_INFO_ID_ENTITY_INDEX(blip)
                    if ENTITY.DOES_ENTITY_EXIST(ent) then
                        set_entity_head_to_entity(ent, PLAYER.PLAYER_PED_ID())
                        tp_to_me(ent)

                        if ENTITY.IS_ENTITY_A_VEHICLE(ent) then
                            tp_into_vehicle(ent)
                        end
                    else
                        toast("目标不是实体，无法传送到我")
                    end
                end            end)

        ----------------------------------------------------------------------------------sch 产业功能-中高风险内功能
            RWZS:add_separator()  ------分割线
            RWZS:add_separator()  ------分割线
            local autorespl = RWZS:add_checkbox("产业自动补货(可能存在bug)")
            RWZS:add_separator()  ------分割线
            RWZS:add_button("CEO仓库出货一键完成", function()
                locals.set_int("gb_contraband_sell","542","99999")        end)
            RWZS:add_sameline()   ------同行
            RWZS:add_button("摩托帮出货一键完成", function()
                if locals.get_int("gb_biker_contraband_sell",716) >= 1 then
                    locals.set_int("gb_biker_contraband_sell","821","15")
                else
                    gui.show_error("该任务类型不支持一键完成","一共就一辆卡车也要一键??")
                    log.info("该任务类型不支持一键完成,否则不会有任何收入.一共就一辆送货载具也要使用一键完成??")
                end        end)
            RWZS:add_sameline()   ------同行
            RWZS:add_button("致幻剂出货一键完成", function()
                locals.set_int("fm_content_acid_lab_sell",6596,9)
                locals.set_int("fm_content_acid_lab_sell",6597,10)
                locals.set_int("fm_content_acid_lab_sell",6530,2)        end)
            RWZS:add_sameline()   ------同行
            RWZS:add_button("地堡出货一键完成", function()
                gui.show_message("自动出货","可能显示任务失败,但是你应该拿到钱了!")
                locals.set_int("gb_gunrunning","1980","0")
                --  gb_gunrunning.c iLocal_1206.f_774
                --	for (i = 0; i < func_833(func_3786(), func_60(), iLocal_1206.f_774, iLocal_1206.f_809); i = i + 1)
                --  REMOVE_PARTICLE_FX_FROM_ENTITY
                gui.show_message("自动出货","可能显示任务失败,但是你应该拿到钱了!")        end)
            RWZS:add_sameline()   ------同行
            RWZS:add_button("机库(空运)出货一键完成", function()
                gui.show_message("自动出货","可能显示任务失败,但是你应该拿到钱了!")
                local integer = locals.get_int("gb_smuggler", "3007")
                locals.set_int("gb_smuggler","2964",integer)
                gui.show_message("自动出货","可能显示任务失败,但是你应该拿到钱了!")        end)

            RWZS:add_separator()  ------分割线
            RWZS:add_button("摩托帮产业满原材料", function()
                globals.set_int(1648657+1+1,1) --可卡因 --freemode.c  	if (func_12737(148, "OR_PSUP_DEL" /*Hey, the supplies you purchased have arrived at the ~a~. Remember, paying for them eats into profits!*/, &unk, false, -99, 0, 0, false, 0))
                globals.set_int(1648657+1+2,1) --冰毒
                globals.set_int(1648657+1+3,1) --大麻
                globals.set_int(1648657+1+4,1) --证件
                globals.set_int(1648657+1+0,1) --假钞
                globals.set_int(1648657+1+6,1) --致幻剂
                gui.show_message("自动补货","全部完成")        end)
            RWZS:add_sameline()   ------同行
            RWZS:add_button("地堡满原材料", function()
                globals.set_int(1648657+1+5,1) --bunker
                gui.show_message("自动补货","全部完成")        end)
            RWZS:add_sameline()   ------同行
            RWZS:add_button("夜总会满人气", function()
                local playerid = stats.get_int("MPPLY_LAST_MP_CHAR") --读取角色ID
                local mpx = "MP0_"
                if playerid == 1 then 
                    mpx = "MP1_" 
                end
                STATS.STAT_SET_INT(joaat(mpx.."CLUB_POPULARITY"), 10000, true)        end)
            RWZS:add_sameline()   ------同行
            RWZS:add_button("CEO仓库员工进货一次", function()
                local playerid = stats.get_int("MPPLY_LAST_MP_CHAR") --读取角色ID
                --freemode.c void func_17501(int iParam0, BOOL bParam1) // Position - 0x56C7B6
                STATS.SET_PACKED_STAT_BOOL_CODE(32359,1,playerid)
                STATS.SET_PACKED_STAT_BOOL_CODE(32360,1,playerid)
                STATS.SET_PACKED_STAT_BOOL_CODE(32361,1,playerid)
                STATS.SET_PACKED_STAT_BOOL_CODE(32362,1,playerid)
                STATS.SET_PACKED_STAT_BOOL_CODE(32363,1,playerid)        end)
            RWZS:add_sameline()   ------同行
            RWZS:add_button("机库员工进货一次", function()
                local playerid = stats.get_int("MPPLY_LAST_MP_CHAR") --读取角色ID

                STATS.SET_PACKED_STAT_BOOL_CODE(36828,1,playerid)        end)

            RWZS:add_separator()  ------分割线
            local ccrgsl = RWZS:add_checkbox("CEO仓库出货锁定运输船")
            RWZS:add_sameline()   ------同行
            local bkeasyms = RWZS:add_checkbox("摩托帮出货仅一辆卡车")
            RWZS:add_sameline()   ------同行
            local bussp = RWZS:add_checkbox("摩托帮产业地堡致幻剂极速生产(!)")

            local ncspup = RWZS:add_checkbox("夜总会极速进货(!)")
            RWZS:add_sameline()   ------同行
            local ncspupa1 = RWZS:add_checkbox("夜总会4倍速进货(!)")
            RWZS:add_sameline()   ------同行
            local ncspupa2 = RWZS:add_checkbox("夜总会10倍速进货(!)")
            RWZS:add_sameline()   ------同行
            local ncspupa3 = RWZS:add_checkbox("夜总会20倍速进货(!)")


            local checkCEOcargo = RWZS:add_checkbox("锁定仓库员工单次进货数量为")
            RWZS:add_sameline()   ------同行
            local inputCEOcargo = RWZS:add_input_int("个板条箱")

            local check4 = RWZS:add_checkbox("锁定机库员工单次进货数量为")
            RWZS:add_sameline()   ------同行
            local iputint3 = RWZS:add_input_int("箱")

            local checklkw = RWZS:add_checkbox("赌场转盘抽车(转盘可能显示为其他物品,但你确实会得到载具)")

        ----------------------------------------------------------------------------------sch 杂项功能内的一些功能
            RWZS:add_separator()  ------分割线
            RWZS:add_button("移除达克斯冷却", function()
				stats.set_int(MPX .. "XM22JUGGALOWORKCDTIMER", -1)		end)
            RWZS:add_sameline()   ------同行
            RWZS:add_button("移除安保合约/电话暗杀冷却", function()
                globals.set_int(262145 + 31908, 0)   --tuneables_processing.c   	func_6(iParam0, iParam1, joaat("FIXER_SECURITY_CONTRACT_COOLDOWN_TIME") /* collision: FIXER_SECURITY_CONTRACT_COOLDOWN_TIME */, &(Global_262145.f_31908), true);
                globals.set_int(262145 + 31989, 0)   --tuneables_processing.c	func_6(iParam0, iParam1, 1872071131, &(Global_262145.f_31989), true);
            end)
            RWZS:add_sameline()   ------同行
            RWZS:add_button("移除CEO载具冷却", function()
                globals.set_int(262145 + 13005, 0)   --tuneables_processing.c 	func_6(iParam0, iParam1, joaat("GB_CALL_VEHICLE_COOLDOWN") /* collision: GB_CALL_VEHICLE_COOLDOWN */, &(Global_262145.f_13005), true);
            end)


--娱乐视觉-------------------------------------------------------------------------------------

    ---娱乐功能-------------------------------------------------------------------------------

        YLSJ:add_text("      娱乐功能")
        YLSJ:add_text("此功能有蛮多BUG,稳定性不高! 不推荐使用! 可能会导致游戏卡死 崩溃等情况!")
        YLSJ:add_text("粒子效果达到内存限制后将无法继续生成,请开启 清理PTFX水柱火柱功能")
        YLSJ:add_button("放烟花", function()
            script.run_in_fiber(function (firew)
        
            local animlib = 'anim@mp_fireworks'
            local ptfx_asset = "scr_indep_fireworks"
            local anim_name = 'place_firework_3_box'
            local effect_name = "scr_indep_firework_trailburst"

            STREAMING.REQUEST_ANIM_DICT(animlib)

            local pos = ENTITY.GET_OFFSET_FROM_ENTITY_IN_WORLD_COORDS(PLAYER.PLAYER_PED_ID(), 0.0, 0.52, 0.0)
            local ped = PLAYER.PLAYER_PED_ID()

            ENTITY.FREEZE_ENTITY_POSITION(ped, true)
            TASK.TASK_PLAY_ANIM(ped, animlib, anim_name, -1, -8.0, 3000, 0, 0, false, false, false)

            firew:sleep(1500)

            STREAMING.REQUEST_MODEL(3176209716)
            while not STREAMING.HAS_MODEL_LOADED(3176209716) do firew:yield() end

            local firework_box = OBJECT.CREATE_OBJECT(3176209716, pos.x, pos.y, pos.z, true, false, false)
            local firework_box_pos = ENTITY.GET_ENTITY_COORDS(firework_box)

            OBJECT.PLACE_OBJECT_ON_GROUND_PROPERLY(firework_box)
            ENTITY.FREEZE_ENTITY_POSITION(ped, false)

            firew:sleep(1000)

            ENTITY.FREEZE_ENTITY_POSITION(firework_box, true)
            STREAMING.REQUEST_NAMED_PTFX_ASSET("scr_indep_fireworks")

            while not STREAMING.HAS_NAMED_PTFX_ASSET_LOADED("scr_indep_fireworks") do firew:yield() end

            GRAPHICS.USE_PARTICLE_FX_ASSET("scr_indep_fireworks")

            GRAPHICS.START_NETWORKED_PARTICLE_FX_NON_LOOPED_ON_ENTITY("scr_indep_firework_trailburst",firework_box, 0.0, 0.0, -1.0, 180.0, 0.0, 0.0, 1.0, 0, 0, 0)

            firew:sleep(1500)
            GRAPHICS.USE_PARTICLE_FX_ASSET("scr_indep_fireworks")
            GRAPHICS.START_NETWORKED_PARTICLE_FX_NON_LOOPED_ON_ENTITY("scr_indep_firework_trailburst",firework_box, 0.0, 0.0, -1.0, 180.0, 0.0, 0.0, 1.0, 0, 0, 0)

            firew:sleep(1500)
            GRAPHICS.USE_PARTICLE_FX_ASSET("scr_indep_fireworks")
            GRAPHICS.START_NETWORKED_PARTICLE_FX_NON_LOOPED_ON_ENTITY("scr_indep_firework_trailburst",firework_box, 0.0, 0.0, -1.0, 180.0, 0.0, 0.0, 1.0, 0, 0, 0)

            firew:sleep(1500)
            GRAPHICS.USE_PARTICLE_FX_ASSET("scr_indep_fireworks")
            GRAPHICS.START_NETWORKED_PARTICLE_FX_NON_LOOPED_ON_ENTITY("scr_indep_firework_trailburst",firework_box, 0.0, 0.0, -1.0, 180.0, 0.0, 0.0, 1.0, 0, 0, 0)

            firew:sleep(1500)
            GRAPHICS.USE_PARTICLE_FX_ASSET("scr_indep_fireworks")
            GRAPHICS.START_NETWORKED_PARTICLE_FX_NON_LOOPED_ON_ENTITY("scr_indep_firework_trailburst",firework_box, 0.0, 0.0, -1.0, 180.0, 0.0, 0.0, 1.0, 0, 0, 0)

            ENTITY.SET_ENTITY_AS_MISSION_ENTITY(firework_box, true, true)
            ENTITY.SET_ENTITY_AS_NO_LONGER_NEEDED(firework_box)
            ENTITY.DELETE_ENTITY(firework_box)
            end)    end)
        YLSJ:add_sameline()   ------同行
        YLSJ:add_button("飞天扫把", function()
            script.run_in_fiber(function (mk2ac1)
            local pos = ENTITY.GET_OFFSET_FROM_ENTITY_IN_WORLD_COORDS(PLAYER.PLAYER_PED_ID(), 0.0, 0.52, 0.0)
            local broomstick = joaat("prop_tool_broom")
            local oppressor = joaat("oppressor2")
            while not STREAMING.HAS_MODEL_LOADED(broomstick) do		
                STREAMING.REQUEST_MODEL(broomstick)
                mk2ac1:yield()
            end
            while not STREAMING.HAS_MODEL_LOADED(oppressor) do	
                STREAMING.REQUEST_MODEL(oppressor)	
                mk2ac1:yield()
            end
            obj = OBJECT.CREATE_OBJECT(broomstick, pos.x,pos.y,pos.z, true, false, false)
            veh = VEHICLE.CREATE_VEHICLE(oppressor, pos.x,pos.y,pos.z, 0 , true, true, true)
            ENTITY.SET_ENTITY_VISIBLE(veh, false, false)
            PED.SET_PED_INTO_VEHICLE(PLAYER.PLAYER_PED_ID(), veh, -1)
            ENTITY.ATTACH_ENTITY_TO_ENTITY(obj, veh, 0, 0, 0, 0.3, -80.0, 0, 0, true, false, false, false, 0, true) 
            end)    end)
        YLSJ:add_sameline()   ------同行
        local FWFYH = YLSJ:add_checkbox("范围烟花") --这只是一个复选框,代码往最后的循环脚本部分找   其它-娱乐功能里面
        YLSJ:add_sameline()   ------同行
        local TD666 = YLSJ:add_checkbox("头顶666") --这只是一个复选框,代码往最后的循环脚本部分找   其它-娱乐功能里面
        YLSJ:add_sameline()   ------同行
        local TD520 = YLSJ:add_checkbox("头顶520") --这只是一个复选框,代码往最后的循环脚本部分找   其它-娱乐功能里面
    
        local YYMS = YLSJ:add_checkbox("游泳模式") --这只是一个复选框,代码往最后的循环脚本部分找   其它-娱乐功能里面
        YLSJ:add_sameline()   ------同行
        local partwater = YLSJ:add_checkbox("分开水体") --这只是一个复选框,代码往最后的循环脚本部分找
        YLSJ:add_sameline()   ------同行
        local TDPH = YLSJ:add_checkbox("头顶喷火")--这只是一个复选框,代码往最后的循环脚本部分找   其它-娱乐功能里面
        YLSJ:add_sameline()   ------同行
        local ELQS = YLSJ:add_checkbox("恶灵骑士") --这只是一个复选框,代码往最后的循环脚本部分找   其它-娱乐功能里面
        YLSJ:add_sameline()   ------同行
        local HYCB = YLSJ:add_checkbox("火焰翅膀")
        YLSJ:add_sameline()   ------同行
        local QLHSZ = YLSJ:add_checkbox("清理PTFX火焰水柱") --只是一个开关，代码往后面找

	---视觉功能-------------------------------------------------------------------------------

        YLSJ:add_separator()  ------分割线
        YLSJ:add_separator()  ------分割线
        YLSJ:add_text("      视觉功能")
        YLSJ:add_button("移除所有视觉效果", function()
            GRAPHICS.ANIMPOSTFX_STOP_ALL()
            GRAPHICS.SET_TIMECYCLE_MODIFIER("DEFAULT")
	        PED.SET_PED_MOTION_BLUR(PLAYER.PLAYER_PED_ID(), false)
	        CAM.SHAKE_GAMEPLAY_CAM("DEATH_FAIL_IN_EFFECT_SHAKE", 0.0)
	        CAM.SHAKE_GAMEPLAY_CAM("DRUNK_SHAKE", 0.0)
	        CAM.SHAKE_GAMEPLAY_CAM("FAMILY5_DRUG_TRIP_SHAKE", 0.0)
	        CAM.SHAKE_GAMEPLAY_CAM("HAND_SHAKE", 0.0)
	        CAM.SHAKE_GAMEPLAY_CAM("JOLT_SHAKE", 0.0)
	        CAM.SHAKE_GAMEPLAY_CAM("LARGE_EXPLOSION_SHAKE", 0.0)
	        CAM.SHAKE_GAMEPLAY_CAM("MEDIUM_EXPLOSION_SHAKE", 0.0)
	        CAM.SHAKE_GAMEPLAY_CAM("SMALL_EXPLOSION_SHAKE", 0.0)
	        CAM.SHAKE_GAMEPLAY_CAM("ROAD_VIBRATION_SHAKE", 0.0)
	        CAM.SHAKE_GAMEPLAY_CAM("SKY_DIVING_SHAKE", 0.0)
	        CAM.SHAKE_GAMEPLAY_CAM("VIBRATE_SHAKE", 0.0)        end)
        YLSJ:add_sameline()   ------同行
        YLSJ:add_button("吸毒", function()
            GRAPHICS.SET_TIMECYCLE_MODIFIER("spectator6")
            PED.SET_PED_MOTION_BLUR(PLAYER.PLAYER_PED_ID(), true)
            AUDIO.SET_PED_IS_DRUNK(PLAYER.PLAYER_PED_ID(), true)
            CAM.SHAKE_GAMEPLAY_CAM("DRUNK_SHAKE", 3.0)        end)
        YLSJ:add_sameline()   ------同行
        YLSJ:add_button("模糊", function()
            GRAPHICS.ANIMPOSTFX_PLAY("MenuMGSelectionIn", 5, true)        end)
        YLSJ:add_sameline()   ------同行
        YLSJ:add_button("提升亮度", function()
            GRAPHICS.SET_TIMECYCLE_MODIFIER("AmbientPush")        end)
        YLSJ:add_sameline()   ------同行
        YLSJ:add_button("大雾", function()
            GRAPHICS.SET_TIMECYCLE_MODIFIER("casino_main_floor_heist")      end)
        YLSJ:add_sameline()   ------同行
        YLSJ:add_button("醉酒", function()
            GRAPHICS.SET_TIMECYCLE_MODIFIER("Drunk")        end)

	---实体控制功能---------------------------------------------------------------------------

		---载具/NPC/实体力场功能--------------------------------------------------------------
            YLSJ:add_separator()  ------分割线
            YLSJ:add_text("力场控制范围") 
            YLSJ:add_sameline()   ------同行
            local ffrange = YLSJ:add_input_int("力场半径(米)")
            ffrange:set_value(50)

            local vehforcefield = YLSJ:add_checkbox("载具力场") --只是一个开关，代码往后面找
            YLSJ:add_sameline()   ------同行
            local pedforcefield = YLSJ:add_checkbox("NPC力场") --只是一个开关，代码往后面找
            YLSJ:add_sameline()   ------同行
            local forcefield = YLSJ:add_checkbox("力场(载具+NPC)") --只是一个开关，代码往后面找
            YLSJ:add_sameline()   ------同行
            local objforcefield = YLSJ:add_checkbox("物体力场") --只是一个开关，代码往后面找

		---一载具批量控制---------------------------------------------------------------------
            YLSJ:add_separator()  ------分割线
            YLSJ:add_text("控制范围") 
            YLSJ:add_sameline()   ------同行
            local npcctrlr = YLSJ:add_input_int("控制半径(米)")
            npcctrlr:set_value(200)

            YLSJ:add_text("载具:") 
            YLSJ:add_sameline()   ------同行
            local vehengdmg = YLSJ:add_checkbox("载具熄火") --只是一个开关，代码往后面找
            YLSJ:add_sameline()   ------同行
            local vehfixr = YLSJ:add_checkbox("载具修复") --只是一个开关，代码往后面找
            YLSJ:add_sameline()   ------同行
            local vehstopr = YLSJ:add_checkbox("载具停止") --只是一个开关，代码往后面找
            YLSJ:add_sameline()   ------同行
            local vehjmpr = YLSJ:add_checkbox("载具跳跃") --只是一个开关，代码往后面找
            YLSJ:add_sameline()   ------同行
            local vehdoorlk4p = YLSJ:add_checkbox("对所有玩家锁门") --只是一个开关，代码往后面找
            YLSJ:add_sameline()   ------同行
            local vehbr = YLSJ:add_checkbox("混乱模式") --只是一个开关，代码往后面找
            YLSJ:add_sameline()   ------同行
            local vehrm = YLSJ:add_checkbox("批量删除") --只是一个开关，代码往后面找
            local BLKZZJSM = 0  --控制载具锁门

		---NPC批量控制------------------------------------------------------------------------
           -------设置范围用的 载具批量控制 里面的设置
            YLSJ:add_text("NPC:") 
            YLSJ:add_sameline()   ------同行
            local reactany = YLSJ:add_checkbox("冻结") --只是一个开关，代码往后面找
            YLSJ:add_sameline()   ------同行
            local react1any = YLSJ:add_checkbox("摔倒") --只是一个开关，代码往后面找
            YLSJ:add_sameline()   ------同行
            local react2any = YLSJ:add_checkbox("击杀") --只是一个开关，代码往后面找
            YLSJ:add_sameline()   ------同行
            local react3any = YLSJ:add_checkbox("燃烧") --只是一个开关，代码往后面找
            YLSJ:add_sameline()   ------同行
            local react4any = YLSJ:add_checkbox("起飞") --只是一个开关，代码往后面找
            YLSJ:add_sameline()   ------同行
            YLSJ:add_button("收为保Biao", function()
                local pedtable = entities.get_all_peds_as_handles()
                for _, peds in pairs(pedtable) do
                    local selfpos = ENTITY.GET_ENTITY_COORDS(PLAYER.PLAYER_PED_ID())
                    local ped_pos = ENTITY.GET_ENTITY_COORDS(peds)
                    if calcDistance(selfpos, ped_pos) <= 200 and peds ~= PLAYER.PLAYER_PED_ID() then 
                        TASK.CLEAR_PED_TASKS(peds)
                        PED.SET_PED_AS_GROUP_MEMBER(peds, PED.GET_PED_GROUP_INDEX(PLAYER.PLAYER_PED_ID()))
                        PED.SET_PED_RELATIONSHIP_GROUP_HASH(peds, PED.GET_PED_RELATIONSHIP_GROUP_HASH(PLAYER.PLAYER_PED_ID()))
                        PED.SET_PED_NEVER_LEAVES_GROUP(peds, true)
                        PED.SET_CAN_ATTACK_FRIENDLY(peds, 0, 1)
                        PED.SET_PED_COMBAT_ABILITY(peds, 2)
                        PED.SET_PED_CAN_TELEPORT_TO_GROUP_LEADER(peds, PED.GET_PED_GROUP_INDEX(PLAYER.PLAYER_PED_ID()), true)
                        PED.SET_PED_FLEE_ATTRIBUTES(peds, 512, true)
                        PED.SET_PED_FLEE_ATTRIBUTES(peds, 1024, true)
                        PED.SET_PED_FLEE_ATTRIBUTES(peds, 2048, true)
                        PED.SET_PED_FLEE_ATTRIBUTES(peds, 16384, true)
                        PED.SET_PED_FLEE_ATTRIBUTES(peds, 131072, true)
                        PED.SET_PED_FLEE_ATTRIBUTES(peds, 262144, true)
                        PED.SET_PED_COMBAT_ATTRIBUTES(peds, 5, true)
                        PED.SET_PED_COMBAT_ATTRIBUTES(peds, 13, true)
                        PED.SET_PED_CONFIG_FLAG(peds, 394, true)
                        PED.SET_PED_CONFIG_FLAG(peds, 400, true)
                        PED.SET_PED_CONFIG_FLAG(peds, 134, true)
                        WEAPON.GIVE_WEAPON_TO_PED(peds, joaat("weapon_combating_mk2"), 9999, false, false)
                        PED.SET_PED_ACCURACY(peds,100)
                        TASK.TASK_COMBAT_HATED_TARGETS_AROUND_PED(PLAYER.PLAYER_PED_ID(), 100, 67108864)
                        ENTITY.SET_ENTITY_HEALTH(peds,1000,true)
                        pedblip = HUD.GET_BLIP_FROM_ENTITY(peds)
                        HUD.REMOVE_BLIP(pedblip)
                        newblip = HUD.ADD_BLIP_FOR_ENTITY(peds)
                        HUD.SET_BLIP_AS_FRIENDLY(newblip, true)
                        HUD.SET_BLIP_AS_SHORT_RANGE(newblip,true)
                    end
                end
            end)
            YLSJ:add_sameline()   ------同行
            local revitalizationped = YLSJ:add_checkbox("复活(不稳定)") --只是一个开关，代码往后面找
            YLSJ:add_sameline()   ------同行
            local rmdied = YLSJ:add_checkbox("移除尸体") --只是一个开关，代码往后面找

		---敌对NPC批量控制--------------------------------------------------------------------

            YLSJ:add_text("敌对NPC:") 
            YLSJ:add_sameline()   ------同行
            local reactanyac = YLSJ:add_checkbox("冻结+") --只是一个开关，代码往后面找
            YLSJ:add_sameline()   ------同行
            local react1anyac = YLSJ:add_checkbox("摔倒+") --只是一个开关，代码往后面找
            YLSJ:add_sameline()   ------同行
            local react2anyac = YLSJ:add_checkbox("击杀+") --只是一个开关，代码往后面找
            YLSJ:add_sameline()   ------同行
            local react3anyac = YLSJ:add_checkbox("燃烧+") --只是一个开关，代码往后面找
            YLSJ:add_sameline()   ------同行
            local react4anyac = YLSJ:add_checkbox("起飞+") --只是一个开关，代码往后面找
            YLSJ:add_sameline()   ------同行
            local react5anyac = YLSJ:add_checkbox("收为保Biao+") --只是一个开关，代码往后面找
            YLSJ:add_sameline()   ------同行
            local react6anyac = YLSJ:add_checkbox("光柱标记+") --只是一个开关，代码往后面找

		---被NPC瞄准自动反击------------------------------------------------------------------

            YLSJ:add_separator()  ------分割线
            YLSJ:add_text("反击范围") 
            YLSJ:add_sameline()
            local npcaimprange = YLSJ:add_input_int("惩罚半径(米)")
            npcaimprange:set_value(1000)

            YLSJ:add_text("NPC Miao准自动反击范围") 
            YLSJ:add_sameline()   ------同行
            local aimreact = YLSJ:add_checkbox("·中断") --只是一个开关，代码往后面找
            YLSJ:add_sameline()   ------同行
            local aimreact1 = YLSJ:add_checkbox("·摔倒") --只是一个开关，代码往后面找
            YLSJ:add_sameline()   ------同行
            local aimreact2 = YLSJ:add_checkbox("·击杀") --只是一个开关，代码往后面找
            YLSJ:add_sameline()   ------同行
            local aimreact3 = YLSJ:add_checkbox("·燃烧") --只是一个开关，代码往后面找
            YLSJ:add_sameline()   ------同行
            local aimreact4 = YLSJ:add_checkbox("·起飞") --只是一个开关，代码往后面找
            YLSJ:add_sameline()   ------同行
            local aimreact5 = YLSJ:add_checkbox("·收为保Biao") --只是一个开关，代码往后面找
            YLSJ:add_sameline()   ------同行
            local aimreact6 = YLSJ:add_checkbox("·移除") --只是一个开关，代码往后面找
            YLSJ:add_sameline()   ------同行
            local aimreact7 = YLSJ:add_checkbox("·光柱标记") --只是一个开关，代码往后面找

		---NPC瞄准任何人自动反击------------------------------------------------------------------

            YLSJ:add_text("NPC Miao准任何人自动反击") 
            YLSJ:add_sameline()   ------同行
            local aimreactany = YLSJ:add_checkbox("中断·") --只是一个开关，代码往后面找
            YLSJ:add_sameline()   ------同行
            local aimreact1any = YLSJ:add_checkbox("摔倒·") --只是一个开关，代码往后面找
            YLSJ:add_sameline()   ------同行
            local aimreact2any = YLSJ:add_checkbox("击杀·") --只是一个开关，代码往后面找
            YLSJ:add_sameline()   ------同行
            local aimreact3any = YLSJ:add_checkbox("燃烧·") --只是一个开关，代码往后面找
            YLSJ:add_sameline()   ------同行
            local aimreact4any = YLSJ:add_checkbox("起飞·") --只是一个开关，代码往后面找
            YLSJ:add_sameline()   ------同行
            local aimreact5any = YLSJ:add_checkbox("收为保Biao·") --只是一个开关，代码往后面找
            YLSJ:add_sameline()   ------同行
            local aimreact6any = YLSJ:add_checkbox("移除·") --只是一个开关，代码往后面找


--其它选项-------------------------------------------------------------------------------------

    ---未分类的一些功能----------------------------------------------------------------------
        QTXX:add_button("开启雪地模式", function()
            globals.set_int(262145 + 4752, 1)end)
        QTXX:add_sameline()   ------同行
        QTXX:add_button("关闭雪地模式", function()
            globals.set_int(262145 + 4752, 0)end)
        QTXX:add_sameline()   ------同行
        QTXX:add_button("故事模式:迈克Er的最大现金", function()
            STATS.STAT_SET_INT(joaat("SP0_TOTAL_CASH"), 2147483646, true)end)
        QTXX:add_sameline()   ------同行
        QTXX:add_button("故事模式:富兰克林最大现金", function()
            STATS.STAT_SET_INT(joaat("SP1_TOTAL_CASH"), 2147483646, true)end)
        QTXX:add_sameline()   ------同行
        QTXX:add_button("故事模式:特雷Fu的最大现金", function()
            STATS.STAT_SET_INT(joaat("SP2_TOTAL_CASH"), 2147483646, true)end)   




        QTXX:add_button("卡云退线下", function()
            if NETWORK.NETWORK_CAN_BAIL() then
                NETWORK.NETWORK_BAIL(0, 0, 0)
            end    end)
        QTXX:add_sameline()   ------同行
        QTXX:add_button("移除自身悬赏", function()
            globals.set_int(1+2359296+5150+13,2880000)       end)
        QTXX:add_sameline()   ------同行
        QTXX:add_button("跳过一条NPC对话", function()
            AUDIO.SKIP_TO_NEXT_SCRIPTED_CONVERSATION_LINE()    end)
        QTXX:add_sameline()   ------同行
        local checkbypassconv = QTXX:add_checkbox("自动跳过NPC对话")
        QTXX:add_sameline()   ------同行
        QTXX:add_button("停止本地所有声音", function()
            for i=-1,100 do
                AUDIO.STOP_SOUND(i)
                AUDIO.RELEASE_SOUND_ID(i)
            end    end)
        QTXX:add_sameline()   ------同行
        QTXX:add_button("生成地面加速条", function()
            script.run_in_fiber(function (crtspeedm)
            objHash = joaat("stt_prop_track_speedup_t1")
            while not STREAMING.HAS_MODEL_LOADED(objHash) do	
                STREAMING.REQUEST_MODEL(objHash)
                crtspeedm:yield()
            end
            local selfpedPos = ENTITY.GET_ENTITY_COORDS(PLAYER.PLAYER_PED_ID(), false)
            local heading = ENTITY.GET_ENTITY_HEADING(PLAYER.PLAYER_PED_ID())
            local obj = OBJECT.CREATE_OBJECT(objHash, selfpedPos.x, selfpedPos.y, selfpedPos.z-0.2, true, true, false)
            ENTITY.SET_ENTITY_HEADING(obj, heading + 90)
            end)    end)
        QTXX:add_sameline()   ------同行
        QTXX:add_button("生成空中加速条", function()
            script.run_in_fiber(function (crtspeedm)
            objHash = joaat("ar_prop_ar_speed_ring")
            while not STREAMING.HAS_MODEL_LOADED(objHash) do	
                STREAMING.REQUEST_MODEL(objHash)
                crtspeedm:yield()
            end
            local selfpedPos = ENTITY.GET_ENTITY_COORDS(PLAYER.PLAYER_PED_ID(), false)
            local heading = ENTITY.GET_ENTITY_HEADING(PLAYER.PLAYER_PED_ID())
            local obj = OBJECT.CREATE_OBJECT(objHash, selfpedPos.x, selfpedPos.y, selfpedPos.z-0.2, true, true, false)
            ENTITY.SET_ENTITY_HEADING(obj, heading)
            end)    end)
 

        local npcvehbr = QTXX:add_checkbox("NPC载具倒行") --只是一个开关，代码往后面找
        QTXX:add_sameline()   ------同行
        local fakeban1 = QTXX:add_checkbox("显示虚假的封号警告") --只是一个开关，代码往后面找
        QTXX:add_sameline()   ------同行
        local disalight = QTXX:add_checkbox("全局熄灯") --只是一个开关，代码往后面找
        QTXX:add_sameline()   ------同行
        local taxisvs = QTXX:add_checkbox("线上出租车工作自动化(连续传送)")--只是一个开关，代码往后面找
        QTXX:add_sameline()   ------同行
        local taxisvs2 = QTXX:add_checkbox("线上出租车工作自动化(仿真驾驶)")--只是一个开关，代码往后面找

        QTXX:add_text("出租车自动化随机间隔") 
        QTXX:add_sameline()   ------同行
        local taximin = QTXX:add_input_int("最小值(毫秒)")
        taximin:set_value(0)
        QTXX:add_button("写入间隔", function()
            if taximax:get_value() >= taximin:get_value() and taximin:get_value() >= 0 then
                taximina = taximin:get_value()
                taximaxa = taximax:get_value()
                gui.show_message("成功","已应用")
            else
                gui.show_message("错误","输入不合法,已重置")
                taximin:set_value(0)
                taximax:set_value(0)
            end        end)
        QTXX:add_sameline()   ------同行
        QTXX:add_text("              ") 
        QTXX:add_sameline()   ------同行
        local taximax = QTXX:add_input_int("最大值(毫秒)")
        taximax:set_value(0)
        local taximina = 0
        local taximaxa = 0





        local checkfootaudio = QTXX:add_checkbox("关闭脚步声") --只是一个开关，代码往后面找
        QTXX:add_sameline()   ------同行
        local checkpedaudio = QTXX:add_checkbox("关闭自身PED声音") --只是一个开关，代码往后面找
        QTXX:add_sameline()   ------同行
        local disableAIdmg = QTXX:add_checkbox("锁定NPC零伤害") --只是一个开关，代码往后面找
        QTXX:add_sameline()   ------同行
        local lockmapang = QTXX:add_checkbox("锁定小地图角度")--只是一个开关，代码往后面找
        QTXX:add_sameline()   ------同行
        local checkSONAR = QTXX:add_checkbox("小地图显示声纳") --只是一个开关，代码往后面找
        QTXX:add_sameline()   ------同行
        local desync = QTXX:add_checkbox("取消同步") --只是一个开关，代码往后面找


        local pedgun = QTXX:add_checkbox("PED枪(射出NPC)") --只是一个开关，代码往后面找
        QTXX:add_sameline()   ------同行
        local bsktgun = QTXX:add_checkbox("篮球枪") --只是一个开关，代码往后面找
        QTXX:add_sameline()   ------同行
        local bballgun = QTXX:add_checkbox("大球枪") --只是一个开关，代码往后面找
        QTXX:add_sameline()   ------同行
        local drawcs = QTXX:add_checkbox("绘制+准星") --只是一个开关，代码往后面找
        QTXX:add_sameline()   ------同行
        local disablecops = QTXX:add_checkbox("阻止派遣警察") --只是一个开关，代码往后面找
        QTXX:add_sameline()   ------同行
        local disapedheat = QTXX:add_checkbox("无温度(反热成像)") --只是一个开关，代码往后面找
        QTXX:add_sameline()   ------同行
        local canafrdly = QTXX:add_checkbox("允许攻击队友") --只是一个开关，代码往后面找



        local DrawHost = QTXX:add_checkbox("显示主机信息") --只是一个开关，代码往后面找
        QTXX:add_sameline()   ------同行
        local DrawInteriorID = QTXX:add_checkbox("显示玩家ID") --只是一个开关，代码往后面找
        QTXX:add_sameline()   ------同行
        local ptfxrm = QTXX:add_checkbox("清理PTFX火焰水柱") --只是一个开关，代码往后面找
        QTXX:add_sameline()   ------同行
        local DECALrm = QTXX:add_checkbox("清理物体表面痕迹") --只是一个开关，代码往后面找
        QTXX:add_sameline()   ------同行
        local efxrm = QTXX:add_checkbox("重置滤镜和镜头抖动") --只是一个开关，代码往后面找
        QTXX:add_sameline()   ------同行
        QTXX:add_button("禁用版本检查", function()
            verchka1 = 100
            log.warning("将忽略lua与游戏版本不匹配的校验,使用过时的脚本您必须自行承担在线存档损坏的风险")
            gui.show_error("将忽略lua与游戏版本不匹配的校验","您必须承担在线存档损坏的风险")    end)

	---全局功能----------------------------------------------------------------------
 
        QTXX:add_separator()  ------分割线
        QTXX:add_separator()  ------分割线
        QTXX:add_text("      全局功能")
        QTXX:add_button("全局爆炸", function()
            for i = 0, 31 do
                if PLAYER.GET_PLAYER_PED(network.get_selected_player()) ~= PLAYER.PLAYER_PED_ID() then --避免作用于自己
                    FIRE.ADD_OWNED_EXPLOSION(PLAYER.GET_PLAYER_PED(i), ENTITY.GET_ENTITY_COORDS(PLAYER.GET_PLAYER_PED(i)).x, ENTITY.GET_ENTITY_COORDS(PLAYER.GET_PLAYER_PED(i)).y, ENTITY.GET_ENTITY_COORDS(PLAYER.GET_PLAYER_PED(i)).z, 82, 1, true, false, 100)
                end            end        end)
        QTXX:add_sameline()   ------同行
        QTXX:add_button("赠送暴君MK2", function()
            script.run_in_fiber(function (giftmk2)
                STREAMING.REQUEST_MODEL(joaat("oppressor2"))
                while STREAMING.HAS_MODEL_LOADED(joaat("oppressor2")) ~= 1 do
                    STREAMING.REQUEST_MODEL(joaat("oppressor2"))
                    giftmk2:yield()
                end   
                for i = 0, 31 do
                    veh = VEHICLE.CREATE_VEHICLE(joaat("oppressor2"), ENTITY.GET_ENTITY_COORDS(PLAYER.GET_PLAYER_PED(i)).x, ENTITY.GET_ENTITY_COORDS(PLAYER.GET_PLAYER_PED(i)).y, ENTITY.GET_ENTITY_COORDS(PLAYER.GET_PLAYER_PED(i)).z, 0 , true, true, true)
                end
            end)        end)
        QTXX:add_sameline()   ------同行
        QTXX:add_button("防空警报", function()
            for pid = 0, 31 do
                AUDIO.PLAY_SOUND_FROM_COORD(-1, "Air_Defences_Activated", ENTITY.GET_ENTITY_COORDS(PLAYER.GET_PLAYER_PED(i)).x, ENTITY.GET_ENTITY_COORDS(PLAYER.GET_PLAYER_PED(i)).y, ENTITY.GET_ENTITY_COORDS(PLAYER.GET_PLAYER_PED(i)).z, "DLC_sum20_Business_Battle_AC_Sounds", true, 999999999, true)
            end        end)
        QTXX:add_sameline()   ------同行
        QTXX:add_button("公Yu邀请", function()
            for pid = 0, 31 do
            network.trigger_script_event(1 << pid, {3592101251, 1, 0, -1, 4, 127, 0, 0, 0,PLAYER.GET_PLAYER_INDEX(), pid})
            end        end)
        QTXX:add_sameline()   ------同行
        QTXX:add_button("PED伞Beng", function() --恶毒的东西
            script.run_in_fiber(function (pedpacrash)
                gui.show_message("伞Beng","请耐心等待直至人物落地")
                PED.SET_PED_COORDS_KEEP_VEHICLE(PLAYER.PLAYER_PED_ID(), -74.94, -818.58, 327)
                local spped = PLAYER.GET_PLAYER_PED_SCRIPT_INDEX(PLAYER.PLAYER_ID())
                local ppos = ENTITY.GET_ENTITY_COORDS(spped, true)
                for n = 0 , 5 do
                    local object_hash = joaat("prop_logpile_06b")
                    STREAMING.REQUEST_MODEL(object_hash)
                      while not STREAMING.HAS_MODEL_LOADED(object_hash) do
                        pedpacrash:yield()
                    end
                    PLAYER.SET_PLAYER_PARACHUTE_MODEL_OVERRIDE(PLAYER.PLAYER_ID(),object_hash)
                    ENTITY.SET_ENTITY_COORDS_NO_OFFSET(spped, 0,0,500, false, true, true)
                    WEAPON.GIVE_DELAYED_WEAPON_TO_PED(spped, 0xFBAB5776, 1000, false)
                    pedpacrash:sleep(1000)
                    for i = 0 , 20 do
                        PAD.SET_CONTROL_VALUE_NEXT_FRAME(2, 144, 1.0)
                        PED.FORCE_PED_TO_OPEN_PARACHUTE(spped)
                    end
                    pedpacrash:sleep(1000)
                    ENTITY.SET_ENTITY_COORDS_NO_OFFSET(spped, ppos.x, ppos.y, ppos.z, false, true, true)
    
                    local object_hash2 = joaat("prop_beach_parasol_03")
                    STREAMING.REQUEST_MODEL(object_hash2)
                      while not STREAMING.HAS_MODEL_LOADED(object_hash2) do
                        pedpacrash:yield()
                    end
                    PLAYER.SET_PLAYER_PARACHUTE_MODEL_OVERRIDE(PLAYER.PLAYER_ID(),object_hash2)
                    ENTITY.SET_ENTITY_COORDS_NO_OFFSET(spped, 0,0,500, 0, 0, 1)
                    WEAPON.GIVE_DELAYED_WEAPON_TO_PED(spped, 0xFBAB5776, 1000, false)
                    pedpacrash:sleep(1000)
                    for i = 0 , 20 do
                        PED.FORCE_PED_TO_OPEN_PARACHUTE(spped)
                        PAD.SET_CONTROL_VALUE_NEXT_FRAME(2, 144, 1.0)
                    end
                    pedpacrash:sleep(1000)
                    ENTITY.SET_ENTITY_COORDS_NO_OFFSET(spped, ppos.x, ppos.y, ppos.z, false, true, true)
                end
                ENTITY.SET_ENTITY_COORDS_NO_OFFSET(spped, ppos.x, ppos.y, ppos.z, false, true, true)    
            end)        end)



        local emmode = QTXX:add_checkbox("紧急模式-被大量刷模型导致游戏卡顿明显时同时按下Ctrl+S+D快速逃离现场并暂停网络同步(不需离开战局)-必要时配合循环清除实体功能使用") --只是一个开关，代码往后面找
        emmode:set_enabled(1) --开启上方创建的复选框，删除此行代码后紧急模式1不会默认监听快捷键
        QTXX:add_sameline()   ------同行
        local emmode2 = QTXX:add_checkbox("紧急模式2-按Ctrl+A+S快速逃离到新战局") --只是一个开关，代码往后面找
        emmode2:set_enabled(1) --开启上方创建的复选框，删除此行代码后紧急模式2不会默认监听快捷键

        local allclear = QTXX:add_checkbox("循环清除实体") --只是一个开关，代码往后面找
        QTXX:add_sameline()   ------同行
        local emmode3 = QTXX:add_checkbox("紧急模式3-持续清除任何实体+阻止PTFX火柱水柱+阻止滤镜和镜头抖动+清理物体表面痕迹") --只是一个开关，代码往后面找


--玩家选项-------------------------------------------------------------------------------------

    ----------------------------------------------------------------------------------
        gui.get_tab(""):add_separator()  ------分割线
        gui.get_tab(""):add_text("要使用玩家功能,请在玩家列表选中一个玩家并翻到玩家最底部") 
        gui.get_tab(""):add_text("      玩家功能") 

        local spcam = gui.get_tab(""):add_checkbox("间接观看(不易被检测)")
        gui.get_tab(""):add_sameline()   ------同行
        local plymk = gui.get_tab(""):add_checkbox("光柱标记")
        gui.get_tab(""):add_sameline()   ------同行
        local plyline = gui.get_tab(""):add_checkbox("连线标记")
        gui.get_tab(""):add_sameline()   ------同行
        gui.get_tab(""):add_button("传送到玩家(粒子效果)", function()
            script.run_in_fiber(function (ptfxtp2ply)
                local targpos = ENTITY.GET_ENTITY_COORDS(PLAYER.GET_PLAYER_PED(network.get_selected_player()), false)
                PED.SET_PED_COORDS_KEEP_VEHICLE(PLAYER.PLAYER_PED_ID(), targpos.x, targpos.y, targpos.z)
                STREAMING.REQUEST_NAMED_PTFX_ASSET("scr_rcbarry2") --小丑出现烟雾
                while not STREAMING.HAS_NAMED_PTFX_ASSET_LOADED("scr_rcbarry2") do
                    STREAMING.REQUEST_NAMED_PTFX_ASSET("scr_rcbarry2")
                    ptfxtp2ply:yield()               
                end
                GRAPHICS.USE_PARTICLE_FX_ASSET("scr_rcbarry2")
                GRAPHICS.START_NETWORKED_PARTICLE_FX_LOOPED_ON_ENTITY_BONE("scr_clown_appears", PLAYER.PLAYER_PED_ID(), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0x8b93, 1.0, false, false, false, 0, 0, 0, 0)

            end)        end)
        gui.get_tab(""):add_sameline()   ------同行
        local checkxsdpednet = gui.add_tab(""):add_checkbox("NPC掉落2000元循环")


        local vehgodr = gui.get_tab(""):add_checkbox("给与载具无敌")
        gui.get_tab(""):add_sameline()   ------同行
        local vehnoclr = gui.get_tab(""):add_checkbox("载具完全无碰撞")
        gui.get_tab(""):add_sameline()   ------同行
        gui.get_tab(""):add_button("修理载具", function()
            script.run_in_fiber(function (repvehr)
                if not PED.IS_PED_IN_ANY_VEHICLE(PLAYER.GET_PLAYER_PED(network.get_selected_player()),true) then
                    gui.show_error("警告","玩家不在载具内")
                else
                    tarveh = PED.GET_VEHICLE_PED_IS_IN(PLAYER.GET_PLAYER_PED(network.get_selected_player()))
                    if not NETWORK.NETWORK_HAS_CONTROL_OF_ENTITY(tarveh)  then
                        local netid = NETWORK.NETWORK_GET_NETWORK_ID_FROM_ENTITY(tarveh)
                        NETWORK.SET_NETWORK_ID_CAN_MIGRATE(netid, true)
                        local time = os.time()
                        while not NETWORK.NETWORK_HAS_CONTROL_OF_ENTITY(tarveh) do
                            if os.time() - time >= 5 then
                                break
                            end
                            NETWORK.NETWORK_REQUEST_CONTROL_OF_ENTITY(tarveh)
                            repvehr:yield()
                        end
                    end
                    VEHICLE.SET_VEHICLE_FIXED(tarveh)
                end
            end)        end)
        gui.get_tab(""):add_sameline()   ------同行
        local pedvehctl = gui.get_tab(""):add_checkbox("载具旋转")
        gui.get_tab(""):add_sameline()   ------同行
        local checkspped = gui.get_tab(""):add_checkbox("循环刷PED")
        gui.get_tab(""):add_sameline()   ------同行
        local checkcollection1 = gui.get_tab(""):add_checkbox("循环刷纸牌")


        --[[
        gui.get_tab(""):add_sameline()   ------同行

        gui.get_tab(""):add_button("移除载具", function()
            script.run_in_fiber(function (rmvehr)
                if not PED.IS_PED_IN_ANY_VEHICLE(PLAYER.GET_PLAYER_PED(network.get_selected_player()),true) then
                    gui.show_error("警告","玩家不在载具内")
                else
                    command.call( vehkick, {"PLAYER.GET_PLAYER_NAME(network.get_selected_player())"})
                    tarveh = PED.GET_VEHICLE_PED_IS_IN(PLAYER.GET_PLAYER_PED(network.get_selected_player()))
                    if not NETWORK.NETWORK_HAS_CONTROL_OF_ENTITY(tarveh)  then
                        local netid = NETWORK.NETWORK_GET_NETWORK_ID_FROM_ENTITY(tarveh)
                        NETWORK.SET_NETWORK_ID_CAN_MIGRATE(netid, true)
                        local time = os.time()
                        while not NETWORK.NETWORK_HAS_CONTROL_OF_ENTITY(tarveh) do
                            if os.time() - time >= 5 then
                                break
                            end
                            NETWORK.NETWORK_REQUEST_CONTROL_OF_ENTITY(tarveh)
                            rmvehr:yield()
                        end
                    end
                    ENTITY.DELETE_ENTITY(tarveh)
                end
            end)
        end)


        gui.get_tab(""):add_sameline()   ------同行

        gui.get_tab(""):add_button("德罗索", function()
            script.run_in_fiber(function (giftdls)
                local giftvehhash = joaat("deluxo")
                STREAMING.REQUEST_MODEL(giftvehhash)
                while STREAMING.HAS_MODEL_LOADED(giftvehhash) ~= 1 do
                    STREAMING.REQUEST_MODEL(giftvehhash)
                    giftdls:yield()
                end   
                local targpos = ENTITY.GET_ENTITY_COORDS(PLAYER.GET_PLAYER_PED(network.get_selected_player()), false)
                firemtcrtveh = VEHICLE.CREATE_VEHICLE(joaat("deluxo"), ENTITY.GET_ENTITY_COORDS(PLAYER.PLAYER_PED_ID(),false).x, ENTITY.GET_ENTITY_COORDS(PLAYER.PLAYER_PED_ID(),false).y, ENTITY.GET_ENTITY_COORDS(PLAYER.PLAYER_PED_ID(),false).z, 0 , true, true, true)

                vehdls = VEHICLE.CREATE_VEHICLE(giftvehhash, targpos.x + 2, targpos.y, targpos.z, 0 , true, true, true)
                ENTITY.SET_ENTITY_INVINCIBLE(vehdls, true)
                VEHICLE.SET_VEHICLE_CAN_BE_VISIBLY_DAMAGED(vehdls, false)
            end)
        end)
        ]]


        gui.get_tab(""):add_button("小笼子", function()
            script.run_in_fiber(function (smallcage)
                local objHash = joaat("prop_gold_cont_01")
                STREAMING.REQUEST_MODEL(objHash)
                while not STREAMING.HAS_MODEL_LOADED(objHash) do		
                    smallcage:yield()
                end
                local pos = ENTITY.GET_ENTITY_COORDS(PLAYER.GET_PLAYER_PED(network.get_selected_player()), false)
                local obj = OBJECT.CREATE_OBJECT(objHash, pos.x, pos.y, pos.z-1, true, true, false)
                ENTITY.FREEZE_ENTITY_POSITION(obj, true)
                STREAMING.SET_MODEL_AS_NO_LONGER_NEEDED(objHash)
            end)        end)
        gui.get_tab(""):add_sameline()   ------同行
        gui.get_tab(""):add_button("Zha栏笼子", function()
            local objHash = joaat("prop_fnclink_03e")
            STREAMING.REQUEST_MODEL(objHash)

            local pos = ENTITY.GET_ENTITY_COORDS(PLAYER.GET_PLAYER_PED(network.get_selected_player()), false)

            pos.z = pos.z - 1.0
            local object = {}

            object[1] = OBJECT.CREATE_OBJECT(objHash, pos.x - 1.5, pos.y + 1.5, pos.z,true, 1, 0)
            object[2] = OBJECT.CREATE_OBJECT(objHash, pos.x - 1.5, pos.y - 1.5, pos.z,true, 1, 0)

            object[3] = OBJECT.CREATE_OBJECT(objHash, pos.x + 1.5, pos.y + 1.5, pos.z,true, 1, 0)
            local rot_3 = ENTITY.GET_ENTITY_ROTATION(object[3], 2)
            rot_3.z = -90.0
            ENTITY.SET_ENTITY_ROTATION(object[3], rot_3.x, rot_3.y, rot_3.z, 1, true)

            object[4] = OBJECT.CREATE_OBJECT(objHash, pos.x - 1.5, pos.y + 1.5, pos.z,true, 1, 0)
            local rot_4 = ENTITY.GET_ENTITY_ROTATION(object[4], 2)
            rot_4.z = -90.0
            ENTITY.SET_ENTITY_ROTATION(object[4], rot_4.x, rot_4.y, rot_4.z, 1, true)
            ENTITY.IS_ENTITY_STATIC(object[1]) 
            ENTITY.IS_ENTITY_STATIC(object[2])
            ENTITY.IS_ENTITY_STATIC(object[3])
            ENTITY.IS_ENTITY_STATIC(object[4])
            ENTITY.SET_ENTITY_CAN_BE_DAMAGED(object[1], false) 
            ENTITY.SET_ENTITY_CAN_BE_DAMAGED(object[2], false) 
            ENTITY.SET_ENTITY_CAN_BE_DAMAGED(object[3], false) 
            ENTITY.SET_ENTITY_CAN_BE_DAMAGED(object[4], false) 

            for i = 1, 4 do ENTITY.FREEZE_ENTITY_POSITION(object[i], true) end
            STREAMING.SET_MODEL_AS_NO_LONGER_NEEDED(objHash)        end)
        gui.get_tab(""):add_sameline()   ------同行
        gui.get_tab(""):add_button("竞技管笼子", function()
            script.run_in_fiber(function (dubcage)
                local pos = ENTITY.GET_ENTITY_COORDS(PLAYER.GET_PLAYER_PED(network.get_selected_player()), false)
                STREAMING.REQUEST_MODEL(2081936690)
                while not STREAMING.HAS_MODEL_LOADED(2081936690) do		
                    dubcage:sleep(100)
                end
                local cage_object = OBJECT.CREATE_OBJECT(2081936690, pos.x, pos.y, pos.z-5, true, true, false)
                local rot  = ENTITY.GET_ENTITY_ROTATION(cage_object)
                rot.y = 90
                ENTITY.SET_ENTITY_ROTATION(cage_object, rot.x,rot.y,rot.z,1,true)
                local cage_object2 = OBJECT.CREATE_OBJECT(2081936690, pos.x-5, pos.y+5, pos.z-5, true, true, false)
                local rot  = ENTITY.GET_ENTITY_ROTATION(cage_object2)
                rot.x = 90 
                ENTITY.SET_ENTITY_ROTATION(cage_object2, rot.x,rot.y,rot.z,2,true)
            end)        end)
        gui.get_tab(""):add_sameline()   ------同行
        gui.get_tab(""):add_button("保险箱笼子", function()
            script.run_in_fiber(function (safecage)
                local pos = ENTITY.GET_ENTITY_COORDS(PLAYER.GET_PLAYER_PED(network.get_selected_player()), false)
                local hash = 1089807209
                STREAMING.REQUEST_MODEL(hash)
                while not STREAMING.HAS_MODEL_LOADED(hash) do		
                    STREAMING.REQUEST_MODEL(hash)
                    safecage:yield()
                end
                local objectsfcage = {}
                objectsfcage[1] = OBJECT.CREATE_OBJECT(hash, pos.x - 0.9, pos.y, pos.z - 1, true, true, false) 
                objectsfcage[2] = OBJECT.CREATE_OBJECT(hash, pos.x + 0.9, pos.y, pos.z - 1, true, true, false) 
                objectsfcage[3] = OBJECT.CREATE_OBJECT(hash, pos.x, pos.y + 0.9, pos.z - 1, true, true, false) 
                objectsfcage[4] = OBJECT.CREATE_OBJECT(hash, pos.x, pos.y - 0.9, pos.z - 1, true, true, false) 
                objectsfcage[5] = OBJECT.CREATE_OBJECT(hash, pos.x - 0.9, pos.y, pos.z + 0.4 , true, true, false) 
                objectsfcage[6] = OBJECT.CREATE_OBJECT(hash, pos.x + 0.9, pos.y, pos.z + 0.4, true, true, false) 
                objectsfcage[7] = OBJECT.CREATE_OBJECT(hash, pos.x, pos.y + 0.9, pos.z + 0.4, true, true, false) 
                objectsfcage[8] = OBJECT.CREATE_OBJECT(hash, pos.x, pos.y - 0.9, pos.z + 0.4, true, true, false) 
                for i = 1, 8 do ENTITY.FREEZE_ENTITY_POSITION(objectsfcage[i], true) end
                safecage:sleep(100)
                STREAMING.SET_MODEL_AS_NO_LONGER_NEEDED(cage_object)
            end)        end)
        gui.get_tab(""):add_sameline()   ------同行
        gui.get_tab(""):add_button("电击", function()
            local pos = ENTITY.GET_ENTITY_COORDS(PLAYER.GET_PLAYER_PED(network.get_selected_player()), false)
            MISC.SHOOT_SINGLE_BULLET_BETWEEN_COORDS(pos.x, pos.y, pos.z + 1, pos.x, pos.y, pos.z, 1000, true, joaat("weapon_stungun"), false, false, true, 1.0)        end)
        gui.get_tab(""):add_sameline()   ------同行
        gui.get_tab(""):add_button("轰炸", function()
            script.run_in_fiber(function (airst)
                local pos = ENTITY.GET_ENTITY_COORDS(PLAYER.GET_PLAYER_PED(network.get_selected_player()), false)
                airshash = joaat("vehicle_weapon_trailer_dualaa")
                MISC.SHOOT_SINGLE_BULLET_BETWEEN_COORDS(pos.x, pos.y, pos.z- 1 , pos.x, pos.y, pos.z - 1, 10000, true, airshash, PLAYER.GET_PLAYER_PED(network.get_selected_player()), false, true, 10000)
                MISC.SHOOT_SINGLE_BULLET_BETWEEN_COORDS(pos.x+2, pos.y, pos.z- 1 , pos.x+2, pos.y, pos.z - 1, 10000, true, airshash, PLAYER.GET_PLAYER_PED(network.get_selected_player()), false, true, 10000)
                MISC.SHOOT_SINGLE_BULLET_BETWEEN_COORDS(pos.x-2, pos.y, pos.z- 1 , pos.x-2, pos.y, pos.z - 1, 10000, true, airshash, PLAYER.GET_PLAYER_PED(network.get_selected_player()), false, true, 10000)
                MISC.SHOOT_SINGLE_BULLET_BETWEEN_COORDS(pos.x-2, pos.y-2, pos.z- 1 , pos.x-2, pos.y-2, pos.z - 1, 10000, true, airshash, PLAYER.GET_PLAYER_PED(network.get_selected_player()), false, true, 10000)
                MISC.SHOOT_SINGLE_BULLET_BETWEEN_COORDS(pos.x-2, pos.y+2, pos.z- 1 , pos.x-2, pos.y+2, pos.z - 1, 10000, true, airshash, PLAYER.GET_PLAYER_PED(network.get_selected_player()), false, true, 10000)
                airst:sleep(100)
                MISC.SHOOT_SINGLE_BULLET_BETWEEN_COORDS(pos.x, pos.y, pos.z+ 1 , pos.x, pos.y, pos.z + 1, 10000, true, airshash, PLAYER.GET_PLAYER_PED(network.get_selected_player()), false, true, 10000)
                MISC.SHOOT_SINGLE_BULLET_BETWEEN_COORDS(pos.x+2, pos.y, pos.z+ 1 , pos.x+2, pos.y, pos.z + 1, 10000, true, airshash, PLAYER.GET_PLAYER_PED(network.get_selected_player()), false, true, 10000)
                MISC.SHOOT_SINGLE_BULLET_BETWEEN_COORDS(pos.x-2, pos.y, pos.z+ 1 , pos.x-2, pos.y, pos.z + 1, 10000, true, airshash, PLAYER.GET_PLAYER_PED(network.get_selected_player()), false, true, 10000)
                MISC.SHOOT_SINGLE_BULLET_BETWEEN_COORDS(pos.x-2, pos.y-2, pos.z+ 1 , pos.x-2, pos.y-2, pos.z + 1, 10000, true, airshash, PLAYER.GET_PLAYER_PED(network.get_selected_player()), false, true, 10000)
                MISC.SHOOT_SINGLE_BULLET_BETWEEN_COORDS(pos.x-2, pos.y+2, pos.z+ 1 , pos.x-2, pos.y+2, pos.z + 1, 10000, true, airshash, PLAYER.GET_PLAYER_PED(network.get_selected_player()), false, true, 10000)
                airst:sleep(100)
                MISC.SHOOT_SINGLE_BULLET_BETWEEN_COORDS(pos.x, pos.y, pos.z+ 3 , pos.x, pos.y, pos.z + 3, 10000, true, airshash, PLAYER.GET_PLAYER_PED(network.get_selected_player()), false, true, 10000)
                MISC.SHOOT_SINGLE_BULLET_BETWEEN_COORDS(pos.x+2, pos.y, pos.z+ 3, pos.x+2, pos.y, pos.z + 3, 10000, true, airshash, PLAYER.GET_PLAYER_PED(network.get_selected_player()), false, true, 10000)
                MISC.SHOOT_SINGLE_BULLET_BETWEEN_COORDS(pos.x-2, pos.y, pos.z+ 3, pos.x-2, pos.y, pos.z + 3, 10000, true, airshash, PLAYER.GET_PLAYER_PED(network.get_selected_player()), false, true, 10000)
                MISC.SHOOT_SINGLE_BULLET_BETWEEN_COORDS(pos.x-2, pos.y-2, pos.z+ 3 , pos.x-2, pos.y-2, pos.z + 3, 10000, true, airshash, PLAYER.GET_PLAYER_PED(network.get_selected_player()), false, true, 10000)
                MISC.SHOOT_SINGLE_BULLET_BETWEEN_COORDS(pos.x-2, pos.y+2, pos.z+ 3 , pos.x-2, pos.y+2, pos.z + 3, 10000, true, airshash, PLAYER.GET_PLAYER_PED(network.get_selected_player()), false, true, 10000)
                airst:sleep(100)
                MISC.SHOOT_SINGLE_BULLET_BETWEEN_COORDS(pos.x, pos.y, pos.z+ 5, pos.x, pos.y, pos.z + 5, 10000, true, airshash, PLAYER.GET_PLAYER_PED(network.get_selected_player()), false, true, 10000)
                MISC.SHOOT_SINGLE_BULLET_BETWEEN_COORDS(pos.x+2, pos.y, pos.z+ 5 , pos.x+2, pos.y, pos.z + 5, 10000, true, airshash, PLAYER.GET_PLAYER_PED(network.get_selected_player()), false, true, 10000)
                MISC.SHOOT_SINGLE_BULLET_BETWEEN_COORDS(pos.x-2, pos.y, pos.z+ 5 , pos.x-2, pos.y, pos.z + 5, 10000, true, airshash, PLAYER.GET_PLAYER_PED(network.get_selected_player()), false, true, 10000)
                MISC.SHOOT_SINGLE_BULLET_BETWEEN_COORDS(pos.x-2, pos.y-2, pos.z+ 5, pos.x-2, pos.y-2, pos.z + 5, 10000, true, airshash, PLAYER.GET_PLAYER_PED(network.get_selected_player()), false, true, 10000)
                MISC.SHOOT_SINGLE_BULLET_BETWEEN_COORDS(pos.x-2, pos.y+2, pos.z+ 5 , pos.x-2, pos.y+2, pos.z + 5, 10000, true, airshash, PLAYER.GET_PLAYER_PED(network.get_selected_player()), false, true, 10000)
                airst:sleep(100)
                MISC.SHOOT_SINGLE_BULLET_BETWEEN_COORDS(pos.x, pos.y, pos.z+ 7 , pos.x, pos.y, pos.z + 7, 10000, true, airshash, PLAYER.GET_PLAYER_PED(network.get_selected_player()), false, true, 10000)
                MISC.SHOOT_SINGLE_BULLET_BETWEEN_COORDS(pos.x+2, pos.y, pos.z+ 7 , pos.x+2, pos.y, pos.z + 7, 10000, true, airshash, PLAYER.GET_PLAYER_PED(network.get_selected_player()), false, true, 10000)
                MISC.SHOOT_SINGLE_BULLET_BETWEEN_COORDS(pos.x-2, pos.y, pos.z+ 7 , pos.x-2, pos.y, pos.z + 7, 10000, true, airshash, PLAYER.GET_PLAYER_PED(network.get_selected_player()), false, true, 10000)
                MISC.SHOOT_SINGLE_BULLET_BETWEEN_COORDS(pos.x-2, pos.y-2, pos.z+ 7 , pos.x-2, pos.y-2, pos.z + 7, 10000, true, airshash, PLAYER.GET_PLAYER_PED(network.get_selected_player()), false, true, 10000)
                MISC.SHOOT_SINGLE_BULLET_BETWEEN_COORDS(pos.x-2, pos.y+2, pos.z+ 7 , pos.x-2, pos.y+2, pos.z + 7, 10000, true, airshash, PLAYER.GET_PLAYER_PED(network.get_selected_player()), false, true, 10000)
                airst:sleep(100)
                MISC.SHOOT_SINGLE_BULLET_BETWEEN_COORDS(pos.x, pos.y, pos.z+ 9 , pos.x, pos.y, pos.z + 9, 10000, true, airshash, PLAYER.GET_PLAYER_PED(network.get_selected_player()), false, true, 10000)
                MISC.SHOOT_SINGLE_BULLET_BETWEEN_COORDS(pos.x+2, pos.y, pos.z+ 9 , pos.x+2, pos.y, pos.z + 9, 10000, true, airshash, PLAYER.GET_PLAYER_PED(network.get_selected_player()), false, true, 10000)
                MISC.SHOOT_SINGLE_BULLET_BETWEEN_COORDS(pos.x-2, pos.y, pos.z+ 9 , pos.x-2, pos.y, pos.z + 9, 10000, true, airshash, PLAYER.GET_PLAYER_PED(network.get_selected_player()), false, true, 10000)
                MISC.SHOOT_SINGLE_BULLET_BETWEEN_COORDS(pos.x-2, pos.y-2, pos.z+ 9 , pos.x-2, pos.y-2, pos.z + 9, 10000, true, airshash, PLAYER.GET_PLAYER_PED(network.get_selected_player()), false, true, 10000)
                MISC.SHOOT_SINGLE_BULLET_BETWEEN_COORDS(pos.x-2, pos.y+2, pos.z+ 9 , pos.x-2, pos.y+2, pos.z + 9, 10000, true, airshash, PLAYER.GET_PLAYER_PED(network.get_selected_player()), false, true, 10000)
                airst:sleep(100)
                MISC.SHOOT_SINGLE_BULLET_BETWEEN_COORDS(pos.x, pos.y, pos.z+ 11 , pos.x, pos.y, pos.z + 11, 10000, true, airshash, PLAYER.GET_PLAYER_PED(network.get_selected_player()), false, true, 10000)
                MISC.SHOOT_SINGLE_BULLET_BETWEEN_COORDS(pos.x+2, pos.y, pos.z+ 11 , pos.x+2, pos.y, pos.z + 11, 10000, true, airshash, PLAYER.GET_PLAYER_PED(network.get_selected_player()), false, true, 10000)
                MISC.SHOOT_SINGLE_BULLET_BETWEEN_COORDS(pos.x-2, pos.y, pos.z+ 11 , pos.x-2, pos.y, pos.z + 11, 10000, true, airshash, PLAYER.GET_PLAYER_PED(network.get_selected_player()), false, true, 10000)
                MISC.SHOOT_SINGLE_BULLET_BETWEEN_COORDS(pos.x-2, pos.y-2, pos.z+ 11 , pos.x-2, pos.y-2, pos.z + 11, 10000, true, airshash, PLAYER.GET_PLAYER_PED(network.get_selected_player()), false, true, 10000)
                MISC.SHOOT_SINGLE_BULLET_BETWEEN_COORDS(pos.x-2, pos.y+2, pos.z+ 11 , pos.x-2, pos.y+2, pos.z + 11, 10000, true, airshash, PLAYER.GET_PLAYER_PED(network.get_selected_player()), false, true, 10000)
                airst:sleep(100)
                MISC.SHOOT_SINGLE_BULLET_BETWEEN_COORDS(pos.x, pos.y, pos.z+ 13 , pos.x, pos.y, pos.z + 13, 10000, true, airshash, PLAYER.GET_PLAYER_PED(network.get_selected_player()), false, true, 10000)
                MISC.SHOOT_SINGLE_BULLET_BETWEEN_COORDS(pos.x+2, pos.y, pos.z+ 13 , pos.x+2, pos.y, pos.z + 13, 10000, true, airshash, PLAYER.GET_PLAYER_PED(network.get_selected_player()), false, true, 10000)
                MISC.SHOOT_SINGLE_BULLET_BETWEEN_COORDS(pos.x-2, pos.y, pos.z+ 13 , pos.x-2, pos.y, pos.z + 13, 10000, true, airshash, PLAYER.GET_PLAYER_PED(network.get_selected_player()), false, true, 10000)
                MISC.SHOOT_SINGLE_BULLET_BETWEEN_COORDS(pos.x-2, pos.y-2, pos.z+ 13 , pos.x-2, pos.y-2, pos.z + 13, 10000, true, airshash, PLAYER.GET_PLAYER_PED(network.get_selected_player()), false, true, 10000)
                MISC.SHOOT_SINGLE_BULLET_BETWEEN_COORDS(pos.x-2, pos.y+2, pos.z+ 13 , pos.x-2, pos.y+2, pos.z + 13, 10000, true, airshash, PLAYER.GET_PLAYER_PED(network.get_selected_player()), false, true, 10000)
                airst:sleep(100)
                MISC.SHOOT_SINGLE_BULLET_BETWEEN_COORDS(pos.x, pos.y, pos.z+ 15 , pos.x, pos.y, pos.z + 15, 10000, true, airshash, PLAYER.GET_PLAYER_PED(network.get_selected_player()), false, true, 10000)
                MISC.SHOOT_SINGLE_BULLET_BETWEEN_COORDS(pos.x+2, pos.y, pos.z+ 15 , pos.x+2, pos.y, pos.z + 15, 10000, true, airshash, PLAYER.GET_PLAYER_PED(network.get_selected_player()), false, true, 10000)
                MISC.SHOOT_SINGLE_BULLET_BETWEEN_COORDS(pos.x-2, pos.y, pos.z+ 15 , pos.x-2, pos.y, pos.z + 15, 10000, true, airshash, PLAYER.GET_PLAYER_PED(network.get_selected_player()), false, true, 10000)
                MISC.SHOOT_SINGLE_BULLET_BETWEEN_COORDS(pos.x-2, pos.y-2, pos.z+ 15 , pos.x-2, pos.y-2, pos.z + 15, 10000, true, airshash, PLAYER.GET_PLAYER_PED(network.get_selected_player()), false, true, 10000)
                MISC.SHOOT_SINGLE_BULLET_BETWEEN_COORDS(pos.x-2, pos.y+2, pos.z+ 15 , pos.x-2, pos.y+2, pos.z + 15, 10000, true, airshash, PLAYER.GET_PLAYER_PED(network.get_selected_player()), false, true, 10000)
                airst:sleep(100)
                MISC.SHOOT_SINGLE_BULLET_BETWEEN_COORDS(pos.x, pos.y, pos.z+ 17 , pos.x, pos.y, pos.z + 17, 10000, true, airshash, PLAYER.GET_PLAYER_PED(network.get_selected_player()), false, true, 10000)
                MISC.SHOOT_SINGLE_BULLET_BETWEEN_COORDS(pos.x+2, pos.y, pos.z+ 17 , pos.x+2, pos.y, pos.z + 17, 10000, true, airshash, PLAYER.GET_PLAYER_PED(network.get_selected_player()), false, true, 10000)
                MISC.SHOOT_SINGLE_BULLET_BETWEEN_COORDS(pos.x-2, pos.y, pos.z+ 17 , pos.x-2, pos.y, pos.z + 17, 10000, true, airshash, PLAYER.GET_PLAYER_PED(network.get_selected_player()), false, true, 10000)
                MISC.SHOOT_SINGLE_BULLET_BETWEEN_COORDS(pos.x-2, pos.y-2, pos.z+ 17 , pos.x-2, pos.y-2, pos.z + 17, 10000, true, airshash, PLAYER.GET_PLAYER_PED(network.get_selected_player()), false, true, 10000)
                MISC.SHOOT_SINGLE_BULLET_BETWEEN_COORDS(pos.x-2, pos.y+2, pos.z+ 17 , pos.x-2, pos.y+2, pos.z + 17, 10000, true, airshash, PLAYER.GET_PLAYER_PED(network.get_selected_player()), false, true, 10000)
                airst:sleep(100)
                MISC.SHOOT_SINGLE_BULLET_BETWEEN_COORDS(pos.x, pos.y, pos.z+ 19 , pos.x, pos.y, pos.z + 19, 10000, true, airshash, PLAYER.GET_PLAYER_PED(network.get_selected_player()), false, true, 10000)
                MISC.SHOOT_SINGLE_BULLET_BETWEEN_COORDS(pos.x+2, pos.y, pos.z+ 19 , pos.x+2, pos.y, pos.z + 19, 10000, true, airshash, PLAYER.GET_PLAYER_PED(network.get_selected_player()), false, true, 10000)
                MISC.SHOOT_SINGLE_BULLET_BETWEEN_COORDS(pos.x-2, pos.y, pos.z+ 19 , pos.x-2, pos.y, pos.z + 19, 10000, true, airshash, PLAYER.GET_PLAYER_PED(network.get_selected_player()), false, true, 10000)
                MISC.SHOOT_SINGLE_BULLET_BETWEEN_COORDS(pos.x-2, pos.y-2, pos.z+ 19 , pos.x-2, pos.y-2, pos.z + 19, 10000, true, airshash, PLAYER.GET_PLAYER_PED(network.get_selected_player()), false, true, 10000)
                MISC.SHOOT_SINGLE_BULLET_BETWEEN_COORDS(pos.x-2, pos.y+2, pos.z+ 19 , pos.x-2, pos.y+2, pos.z + 19, 10000, true, airshash, PLAYER.GET_PLAYER_PED(network.get_selected_player()), false, true, 10000)
                airst:sleep(100)
                MISC.SHOOT_SINGLE_BULLET_BETWEEN_COORDS(pos.x, pos.y, pos.z+ 21 , pos.x, pos.y, pos.z + 21, 10000, true, airshash, PLAYER.GET_PLAYER_PED(network.get_selected_player()), false, true, 10000)
                MISC.SHOOT_SINGLE_BULLET_BETWEEN_COORDS(pos.x+2, pos.y, pos.z+ 21 , pos.x+2, pos.y, pos.z + 21, 10000, true, airshash, PLAYER.GET_PLAYER_PED(network.get_selected_player()), false, true, 10000)
                MISC.SHOOT_SINGLE_BULLET_BETWEEN_COORDS(pos.x-2, pos.y, pos.z+ 21 , pos.x-2, pos.y, pos.z + 21, 10000, true, airshash, PLAYER.GET_PLAYER_PED(network.get_selected_player()), false, true, 10000)
                MISC.SHOOT_SINGLE_BULLET_BETWEEN_COORDS(pos.x-2, pos.y-2, pos.z+ 21 , pos.x-2, pos.y-2, pos.z + 21, 10000, true, airshash, PLAYER.GET_PLAYER_PED(network.get_selected_player()), false, true, 10000)
                MISC.SHOOT_SINGLE_BULLET_BETWEEN_COORDS(pos.x-2, pos.y+2, pos.z+ 21 , pos.x-2, pos.y+2, pos.z + 21, 10000, true, airshash, PLAYER.GET_PLAYER_PED(network.get_selected_player()), false, true, 10000)
                airst:sleep(100)
                MISC.SHOOT_SINGLE_BULLET_BETWEEN_COORDS(pos.x, pos.y, pos.z+ 23 , pos.x, pos.y, pos.z + 23, 10000, true, airshash, PLAYER.GET_PLAYER_PED(network.get_selected_player()), false, true, 10000)
                MISC.SHOOT_SINGLE_BULLET_BETWEEN_COORDS(pos.x+2, pos.y, pos.z+ 23 , pos.x+2, pos.y, pos.z + 23, 10000, true, airshash, PLAYER.GET_PLAYER_PED(network.get_selected_player()), false, true, 10000)
                MISC.SHOOT_SINGLE_BULLET_BETWEEN_COORDS(pos.x-2, pos.y, pos.z+ 23 , pos.x-2, pos.y, pos.z + 23, 10000, true, airshash, PLAYER.GET_PLAYER_PED(network.get_selected_player()), false, true, 10000)
                MISC.SHOOT_SINGLE_BULLET_BETWEEN_COORDS(pos.x-2, pos.y-2, pos.z+ 23 , pos.x-2, pos.y-2, pos.z + 23, 10000, true, airshash, PLAYER.GET_PLAYER_PED(network.get_selected_player()), false, true, 10000)
                MISC.SHOOT_SINGLE_BULLET_BETWEEN_COORDS(pos.x-2, pos.y+2, pos.z+ 23 , pos.x-2, pos.y+2, pos.z + 23, 10000, true, airshash, PLAYER.GET_PLAYER_PED(network.get_selected_player()), false, true, 10000)
                airst:sleep(100)
                MISC.SHOOT_SINGLE_BULLET_BETWEEN_COORDS(pos.x, pos.y, pos.z+ 25 , pos.x, pos.y, pos.z + 25, 10000, true, airshash, PLAYER.GET_PLAYER_PED(network.get_selected_player()), false, true, 10000)
                MISC.SHOOT_SINGLE_BULLET_BETWEEN_COORDS(pos.x+2, pos.y, pos.z+ 25 , pos.x+2, pos.y, pos.z + 25, 10000, true, airshash, PLAYER.GET_PLAYER_PED(network.get_selected_player()), false, true, 10000)
                MISC.SHOOT_SINGLE_BULLET_BETWEEN_COORDS(pos.x-2, pos.y, pos.z+ 25 , pos.x-2, pos.y, pos.z + 25, 10000, true, airshash, PLAYER.GET_PLAYER_PED(network.get_selected_player()), false, true, 10000)
                MISC.SHOOT_SINGLE_BULLET_BETWEEN_COORDS(pos.x-2, pos.y-2, pos.z+ 25 , pos.x-2, pos.y-2, pos.z + 25, 10000, true, airshash, PLAYER.GET_PLAYER_PED(network.get_selected_player()), false, true, 10000)
                MISC.SHOOT_SINGLE_BULLET_BETWEEN_COORDS(pos.x-2, pos.y+2, pos.z+ 25 , pos.x-2, pos.y+2, pos.z + 25, 10000, true, airshash, PLAYER.GET_PLAYER_PED(network.get_selected_player()), false, true, 10000)
                airst:sleep(100)
                MISC.SHOOT_SINGLE_BULLET_BETWEEN_COORDS(pos.x, pos.y, pos.z+ 27 , pos.x, pos.y, pos.z + 27, 10000, true, airshash, PLAYER.GET_PLAYER_PED(network.get_selected_player()), false, true, 10000)
                MISC.SHOOT_SINGLE_BULLET_BETWEEN_COORDS(pos.x+2, pos.y, pos.z+ 27 , pos.x+2, pos.y, pos.z + 27, 10000, true, airshash, PLAYER.GET_PLAYER_PED(network.get_selected_player()), false, true, 10000)
                MISC.SHOOT_SINGLE_BULLET_BETWEEN_COORDS(pos.x-2, pos.y, pos.z+ 27 , pos.x-2, pos.y, pos.z + 27, 10000, true, airshash, PLAYER.GET_PLAYER_PED(network.get_selected_player()), false, true, 10000)
                MISC.SHOOT_SINGLE_BULLET_BETWEEN_COORDS(pos.x-2, pos.y-2, pos.z+ 27 , pos.x-2, pos.y-2, pos.z + 27, 10000, true, airshash, PLAYER.GET_PLAYER_PED(network.get_selected_player()), false, true, 10000)
                MISC.SHOOT_SINGLE_BULLET_BETWEEN_COORDS(pos.x-2, pos.y+2, pos.z+ 27 , pos.x-2, pos.y+2, pos.z + 27, 10000, true, airshash, PLAYER.GET_PLAYER_PED(network.get_selected_player()), false, true, 10000)
                airst:sleep(100)
                MISC.SHOOT_SINGLE_BULLET_BETWEEN_COORDS(pos.x, pos.y, pos.z+ 29 , pos.x, pos.y, pos.z + 29, 10000, true, airshash, PLAYER.GET_PLAYER_PED(network.get_selected_player()), false, true, 10000)
                MISC.SHOOT_SINGLE_BULLET_BETWEEN_COORDS(pos.x+2, pos.y, pos.z+ 29 , pos.x+2, pos.y, pos.z + 29, 10000, true, airshash, PLAYER.GET_PLAYER_PED(network.get_selected_player()), false, true, 10000)
                MISC.SHOOT_SINGLE_BULLET_BETWEEN_COORDS(pos.x-2, pos.y, pos.z+ 29 , pos.x-2, pos.y, pos.z + 29, 10000, true, airshash, PLAYER.GET_PLAYER_PED(network.get_selected_player()), false, true, 10000)
                MISC.SHOOT_SINGLE_BULLET_BETWEEN_COORDS(pos.x-2, pos.y-2, pos.z+ 29 , pos.x-2, pos.y-2, pos.z + 29, 10000, true, airshash, PLAYER.GET_PLAYER_PED(network.get_selected_player()), false, true, 10000)
                MISC.SHOOT_SINGLE_BULLET_BETWEEN_COORDS(pos.x-2, pos.y+2, pos.z+ 29 , pos.x-2, pos.y+2, pos.z + 29, 10000, true, airshash, PLAYER.GET_PLAYER_PED(network.get_selected_player()), false, true, 10000)
                airst:sleep(100)
                MISC.SHOOT_SINGLE_BULLET_BETWEEN_COORDS(pos.x, pos.y, pos.z+ 31 , pos.x, pos.y, pos.z + 31, 10000, true, airshash, PLAYER.GET_PLAYER_PED(network.get_selected_player()), false, true, 10000)
                MISC.SHOOT_SINGLE_BULLET_BETWEEN_COORDS(pos.x+2, pos.y, pos.z+ 31 , pos.x+2, pos.y, pos.z + 31, 10000, true, airshash, PLAYER.GET_PLAYER_PED(network.get_selected_player()), false, true, 10000)
                MISC.SHOOT_SINGLE_BULLET_BETWEEN_COORDS(pos.x-2, pos.y, pos.z+ 31 , pos.x-2, pos.y, pos.z + 31, 10000, true, airshash, PLAYER.GET_PLAYER_PED(network.get_selected_player()), false, true, 10000)
                MISC.SHOOT_SINGLE_BULLET_BETWEEN_COORDS(pos.x-2, pos.y-2, pos.z+ 31 , pos.x-2, pos.y-2, pos.z + 31, 10000, true, airshash, PLAYER.GET_PLAYER_PED(network.get_selected_player()), false, true, 10000)
                MISC.SHOOT_SINGLE_BULLET_BETWEEN_COORDS(pos.x-2, pos.y+2, pos.z+ 31 , pos.x-2, pos.y+2, pos.z + 31, 10000, true, airshash, PLAYER.GET_PLAYER_PED(network.get_selected_player()), false, true, 10000)
                airst:sleep(100)
                MISC.SHOOT_SINGLE_BULLET_BETWEEN_COORDS(pos.x, pos.y, pos.z+ 33 , pos.x, pos.y, pos.z + 33, 10000, true, airshash, PLAYER.GET_PLAYER_PED(network.get_selected_player()), false, true, 10000)
                MISC.SHOOT_SINGLE_BULLET_BETWEEN_COORDS(pos.x+2, pos.y, pos.z+ 33 , pos.x+2, pos.y, pos.z + 33, 10000, true, airshash, PLAYER.GET_PLAYER_PED(network.get_selected_player()), false, true, 10000)
                MISC.SHOOT_SINGLE_BULLET_BETWEEN_COORDS(pos.x-22, pos.y, pos.z+ 33 , pos.x-2, pos.y, pos.z + 33, 10000, true, airshash, PLAYER.GET_PLAYER_PED(network.get_selected_player()), false, true, 10000)
                MISC.SHOOT_SINGLE_BULLET_BETWEEN_COORDS(pos.x-2, pos.y-2, pos.z+ 33 , pos.x-2, pos.y-2, pos.z + 33, 10000, true, airshash, PLAYER.GET_PLAYER_PED(network.get_selected_player()), false, true, 10000)
                MISC.SHOOT_SINGLE_BULLET_BETWEEN_COORDS(pos.x-2, pos.y+2, pos.z+ 33 , pos.x-2, pos.y+2, pos.z + 3, 10000, true, airshash, PLAYER.GET_PLAYER_PED(network.get_selected_player()), false, true, 10000)
                airst:sleep(100)
                MISC.SHOOT_SINGLE_BULLET_BETWEEN_COORDS(pos.x, pos.y, pos.z+ 35 , pos.x, pos.y, pos.z + 35, 10000, true, airshash, PLAYER.GET_PLAYER_PED(network.get_selected_player()), false, true, 10000)
                MISC.SHOOT_SINGLE_BULLET_BETWEEN_COORDS(pos.x+2, pos.y, pos.z+ 35 , pos.x+2, pos.y, pos.z + 35, 10000, true, airshash, PLAYER.GET_PLAYER_PED(network.get_selected_player()), false, true, 10000)
                MISC.SHOOT_SINGLE_BULLET_BETWEEN_COORDS(pos.x-2, pos.y, pos.z+ 35 , pos.x-2, pos.y, pos.z + 35, 10000, true, airshash, PLAYER.GET_PLAYER_PED(network.get_selected_player()), false, true, 10000)
                MISC.SHOOT_SINGLE_BULLET_BETWEEN_COORDS(pos.x-22, pos.y-2, pos.z+ 35 , pos.x-2, pos.y-2, pos.z + 35, 10000, true, airshash, PLAYER.GET_PLAYER_PED(network.get_selected_player()), false, true, 10000)
                MISC.SHOOT_SINGLE_BULLET_BETWEEN_COORDS(pos.x-2, pos.y+2, pos.z+ 35 , pos.x-2, pos.y+2, pos.z + 35, 10000, true, airshash, PLAYER.GET_PLAYER_PED(network.get_selected_player()), false, true, 10000)
                airst:sleep(100)
                MISC.SHOOT_SINGLE_BULLET_BETWEEN_COORDS(pos.x, pos.y, pos.z+ 37 , pos.x, pos.y, pos.z + 37, 10000, true, airshash, PLAYER.GET_PLAYER_PED(network.get_selected_player()), false, true, 10000)
                MISC.SHOOT_SINGLE_BULLET_BETWEEN_COORDS(pos.x+2, pos.y, pos.z+ 37 , pos.x+2, pos.y, pos.z + 37, 10000, true, airshash, PLAYER.GET_PLAYER_PED(network.get_selected_player()), false, true, 10000)
                MISC.SHOOT_SINGLE_BULLET_BETWEEN_COORDS(pos.x-2, pos.y, pos.z+ 37 , pos.x-2, pos.y, pos.z + 37, 10000, true, airshash, PLAYER.GET_PLAYER_PED(network.get_selected_player()), false, true, 10000)
                MISC.SHOOT_SINGLE_BULLET_BETWEEN_COORDS(pos.x-2, pos.y-2, pos.z+ 37 , pos.x-2, pos.y-2, pos.z + 37, 10000, true, airshash, PLAYER.GET_PLAYER_PED(network.get_selected_player()), false, true, 10000)
                MISC.SHOOT_SINGLE_BULLET_BETWEEN_COORDS(pos.x-2, pos.y+2, pos.z+ 37 , pos.x-2, pos.y+2, pos.z + 37, 10000, true, airshash, PLAYER.GET_PLAYER_PED(network.get_selected_player()), false, true, 10000)
                airst:sleep(100)
                MISC.SHOOT_SINGLE_BULLET_BETWEEN_COORDS(pos.x, pos.y, pos.z+ 39 , pos.x, pos.y, pos.z + 39, 10000, true, airshash, PLAYER.GET_PLAYER_PED(network.get_selected_player()), false, true, 10000)
                MISC.SHOOT_SINGLE_BULLET_BETWEEN_COORDS(pos.x+2, pos.y, pos.z+ 39 , pos.x+2, pos.y, pos.z + 39, 10000, true, airshash, PLAYER.GET_PLAYER_PED(network.get_selected_player()), false, true, 10000)
                MISC.SHOOT_SINGLE_BULLET_BETWEEN_COORDS(pos.x-2, pos.y, pos.z+ 39 , pos.x-2, pos.y, pos.z + 39, 10000, true, airshash, PLAYER.GET_PLAYER_PED(network.get_selected_player()), false, true, 10000)
                MISC.SHOOT_SINGLE_BULLET_BETWEEN_COORDS(pos.x-2, pos.y-2, pos.z+ 39 , pos.x-2, pos.y-2, pos.z + 39, 10000, true, airshash, PLAYER.GET_PLAYER_PED(network.get_selected_player()), false, true, 10000)
                MISC.SHOOT_SINGLE_BULLET_BETWEEN_COORDS(pos.x-2, pos.y+2, pos.z+ 39 , pos.x-2, pos.y+2, pos.z + 39, 10000, true, airshash, PLAYER.GET_PLAYER_PED(network.get_selected_player()), false, true, 10000)
                airst:sleep(100)
                MISC.SHOOT_SINGLE_BULLET_BETWEEN_COORDS(pos.x, pos.y, pos.z+ 41 , pos.x, pos.y, pos.z + 41, 10000, true, airshash, PLAYER.GET_PLAYER_PED(network.get_selected_player()), false, true, 10000)
                MISC.SHOOT_SINGLE_BULLET_BETWEEN_COORDS(pos.x+2, pos.y, pos.z+ 41 , pos.x+2, pos.y, pos.z + 41, 10000, true, airshash, PLAYER.GET_PLAYER_PED(network.get_selected_player()), false, true, 10000)
                MISC.SHOOT_SINGLE_BULLET_BETWEEN_COORDS(pos.x-2, pos.y, pos.z+ 41 , pos.x-2, pos.y, pos.z + 41, 10000, true, airshash, PLAYER.GET_PLAYER_PED(network.get_selected_player()), false, true, 10000)
                MISC.SHOOT_SINGLE_BULLET_BETWEEN_COORDS(pos.x-2, pos.y-2, pos.z+ 41 , pos.x-2, pos.y-2, pos.z + 41, 10000, true, airshash, PLAYER.GET_PLAYER_PED(network.get_selected_player()), false, true, 10000)
                MISC.SHOOT_SINGLE_BULLET_BETWEEN_COORDS(pos.x-2, pos.y+2, pos.z+ 41 , pos.x-2, pos.y+2, pos.z + 41, 10000, true, airshash, PLAYER.GET_PLAYER_PED(network.get_selected_player()), false, true, 10000)
                airst:sleep(100)
                MISC.SHOOT_SINGLE_BULLET_BETWEEN_COORDS(pos.x, pos.y, pos.z+ 43 , pos.x, pos.y, pos.z + 43, 10000, true, airshash, PLAYER.GET_PLAYER_PED(network.get_selected_player()), false, true, 10000)
                MISC.SHOOT_SINGLE_BULLET_BETWEEN_COORDS(pos.x+2, pos.y, pos.z+ 43 , pos.x+2, pos.y, pos.z + 43, 10000, true, airshash, PLAYER.GET_PLAYER_PED(network.get_selected_player()), false, true, 10000)
                MISC.SHOOT_SINGLE_BULLET_BETWEEN_COORDS(pos.x-2, pos.y, pos.z+ 43 , pos.x-2, pos.y, pos.z + 43, 10000, true, airshash, PLAYER.GET_PLAYER_PED(network.get_selected_player()), false, true, 10000)
                MISC.SHOOT_SINGLE_BULLET_BETWEEN_COORDS(pos.x-2, pos.y-2, pos.z+ 43 , pos.x-2, pos.y-2, pos.z + 43, 10000, true, airshash, PLAYER.GET_PLAYER_PED(network.get_selected_player()), false, true, 10000)
                MISC.SHOOT_SINGLE_BULLET_BETWEEN_COORDS(pos.x-2, pos.y+2, pos.z+ 43 , pos.x-2, pos.y+2, pos.z + 43, 10000, true, airshash, PLAYER.GET_PLAYER_PED(network.get_selected_player()), false, true, 10000)
                airst:sleep(100)
                MISC.SHOOT_SINGLE_BULLET_BETWEEN_COORDS(pos.x, pos.y, pos.z+ 45 , pos.x, pos.y, pos.z + 45, 10000, true, airshash, PLAYER.GET_PLAYER_PED(network.get_selected_player()), false, true, 10000)
                MISC.SHOOT_SINGLE_BULLET_BETWEEN_COORDS(pos.x+2, pos.y, pos.z+ 45 , pos.x+2, pos.y, pos.z + 45, 10000, true, airshash, PLAYER.GET_PLAYER_PED(network.get_selected_player()), false, true, 10000)
                MISC.SHOOT_SINGLE_BULLET_BETWEEN_COORDS(pos.x-2, pos.y, pos.z+ 45 , pos.x-2, pos.y, pos.z + 45, 10000, true, airshash, PLAYER.GET_PLAYER_PED(network.get_selected_player()), false, true, 10000)
                MISC.SHOOT_SINGLE_BULLET_BETWEEN_COORDS(pos.x-2, pos.y-2, pos.z+ 45 , pos.x-2, pos.y-2, pos.z + 45, 10000, true, airshash, PLAYER.GET_PLAYER_PED(network.get_selected_player()), false, true, 10000)
                MISC.SHOOT_SINGLE_BULLET_BETWEEN_COORDS(pos.x-2, pos.y+2, pos.z+ 45 , pos.x-2, pos.y+2, pos.z + 45, 10000, true, airshash, PLAYER.GET_PLAYER_PED(network.get_selected_player()), false, true, 10000)
            end)        end)
        gui.add_tab(""):add_sameline()   ------同行
        gui.add_tab(""):add_button("碎片Beng掉", function()
            script.run_in_fiber(function (fragcrash)
                if PLAYER.GET_PLAYER_PED(network.get_selected_player()) == PLAYER.PLAYER_PED_ID() then --避免目标离开战局后作用于自己
                    gui.show_message("攻击已停止", "检测到目标已离开或目标是自己")
                    return
                end
                fraghash = joaat("prop_fragtest_cnst_04")
                STREAMING.REQUEST_MODEL(fraghash)
                local TargetCrds = ENTITY.GET_ENTITY_COORDS(PLAYER.GET_PLAYER_PED(network.get_selected_player()), false)
                local crashstaff1 = OBJECT.CREATE_OBJECT(fraghash, TargetCrds.x, TargetCrds.y, TargetCrds.z, true, false, false)
                    OBJECT.BREAK_OBJECT_FRAGMENT_CHILD(object, 1, false)
                local crashstaff1 = OBJECT.CREATE_OBJECT(fraghash, TargetCrds.x, TargetCrds.y, TargetCrds.z, true, false, false)
                    OBJECT.BREAK_OBJECT_FRAGMENT_CHILD(object, 1, false)
                local crashstaff1 = OBJECT.CREATE_OBJECT(fraghash, TargetCrds.x, TargetCrds.y, TargetCrds.z, true, false, false)
                    OBJECT.BREAK_OBJECT_FRAGMENT_CHILD(object, 1, false)
                local crashstaff1 = OBJECT.CREATE_OBJECT(fraghash, TargetCrds.x, TargetCrds.y, TargetCrds.z, true, false, false)
                    OBJECT.BREAK_OBJECT_FRAGMENT_CHILD(object, 1, false)
                for i = 0, 100 do 
                    if PLAYER.GET_PLAYER_PED(network.get_selected_player()) == PLAYER.PLAYER_PED_ID() then --避免目标离开战局后作用于自己
                        gui.show_message("攻击已停止", "检测到目标已离开或目标是自己")
                        return
                    end    
                    local TargetPlayerPos = ENTITY.GET_ENTITY_COORDS(PLAYER.GET_PLAYER_PED(network.get_selected_player()), false)
                    ENTITY.SET_ENTITY_COORDS_NO_OFFSET(crashstaff1, TargetPlayerPos.x, TargetPlayerPos.y, TargetPlayerPos.z, false, true, true)
                    ENTITY.SET_ENTITY_COORDS_NO_OFFSET(crashstaff1, TargetPlayerPos.x, TargetPlayerPos.y, TargetPlayerPos.z, false, true, true)
                    ENTITY.SET_ENTITY_COORDS_NO_OFFSET(crashstaff1, TargetPlayerPos.x, TargetPlayerPos.y, TargetPlayerPos.z, false, true, true)
                    ENTITY.SET_ENTITY_COORDS_NO_OFFSET(crashstaff1, TargetPlayerPos.x, TargetPlayerPos.y, TargetPlayerPos.z, false, true, true)
                    fragcrash:sleep(10)
                    ENTITY.DELETE_ENTITY(crashstaff1)
                    ENTITY.DELETE_ENTITY(crashstaff1)
                    ENTITY.DELETE_ENTITY(crashstaff1)
                    ENTITY.DELETE_ENTITY(crashstaff1)
                end
            end)
            script.run_in_fiber(function (fragcrash2)
                local TargetCrds = ENTITY.GET_ENTITY_COORDS(PLAYER.GET_PLAYER_PED(network.get_selected_player()), false)
                fraghash = joaat("prop_fragtest_cnst_04")
                STREAMING.REQUEST_MODEL(fraghash)
                for i=1,10 do
                    if PLAYER.GET_PLAYER_PED(network.get_selected_player()) == PLAYER.PLAYER_PED_ID() then --避免目标离开战局后作用于自己
                        gui.show_message("攻击已停止", "检测到目标已离开或目标是自己")
                        return
                    end 
                    local object = OBJECT.CREATE_OBJECT(fraghash, TargetCrds.x, TargetCrds.y, TargetCrds.z, true, false, false)
                    OBJECT.BREAK_OBJECT_FRAGMENT_CHILD(object, 1, false)
                    ENTITY.DELETE_ENTITY(object)
                    local object = OBJECT.CREATE_OBJECT(fraghash, TargetCrds.x, TargetCrds.y, TargetCrds.z, true, false, false)
                    OBJECT.BREAK_OBJECT_FRAGMENT_CHILD(object, 1, false)
                    ENTITY.DELETE_ENTITY(object)
                    local object = OBJECT.CREATE_OBJECT(fraghash, TargetCrds.x, TargetCrds.y, TargetCrds.z, true, false, false)
                    OBJECT.BREAK_OBJECT_FRAGMENT_CHILD(object, 1, false)
                    ENTITY.DELETE_ENTITY(object)
                    local object = OBJECT.CREATE_OBJECT(fraghash, TargetCrds.x, TargetCrds.y, TargetCrds.z, true, false, false)
                    OBJECT.BREAK_OBJECT_FRAGMENT_CHILD(object, 1, false)
                    ENTITY.DELETE_ENTITY(object)
                    local object = OBJECT.CREATE_OBJECT(fraghash, TargetCrds.x, TargetCrds.y, TargetCrds.z, true, false, false)
                    OBJECT.BREAK_OBJECT_FRAGMENT_CHILD(object, 1, false)
                    ENTITY.DELETE_ENTITY(object)
                    local object = OBJECT.CREATE_OBJECT(fraghash, TargetCrds.x, TargetCrds.y, TargetCrds.z, true, false, false)
                    OBJECT.BREAK_OBJECT_FRAGMENT_CHILD(object, 1, false)
                    ENTITY.DELETE_ENTITY(object)
                    local object = OBJECT.CREATE_OBJECT(fraghash, TargetCrds.x, TargetCrds.y, TargetCrds.z, true, false, false)
                    OBJECT.BREAK_OBJECT_FRAGMENT_CHILD(object, 1, false)
                    ENTITY.DELETE_ENTITY(object)
                    local object = OBJECT.CREATE_OBJECT(fraghash, TargetCrds.x, TargetCrds.y, TargetCrds.z, true, false, false)
                    OBJECT.BREAK_OBJECT_FRAGMENT_CHILD(object, 1, false)
                    ENTITY.DELETE_ENTITY(object)
                    local object = OBJECT.CREATE_OBJECT(fraghash, TargetCrds.x, TargetCrds.y, TargetCrds.z, true, false, false)
                    OBJECT.BREAK_OBJECT_FRAGMENT_CHILD(object, 1, false)
                    ENTITY.DELETE_ENTITY(object)
                    local object = OBJECT.CREATE_OBJECT(fraghash, TargetCrds.x, TargetCrds.y, TargetCrds.z, true, false, false)
                    OBJECT.BREAK_OBJECT_FRAGMENT_CHILD(object, 1, false)
                    fragcrash2:sleep(100)
                    ENTITY.DELETE_ENTITY(object)
                end
            end)        end)
        gui.add_tab(""):add_sameline()   ------同行
        gui.add_tab(""):add_button("降落伞Beng掉2", function()
            script.run_in_fiber(function (t2crash)
                if PLAYER.GET_PLAYER_PED(network.get_selected_player()) == PLAYER.PLAYER_PED_ID() then --避免目标离开战局后作用于自己
                    gui.show_message("攻击已停止", "检测到目标已离开或目标是自己")
                    return
                end
                PLAYER.SET_PLAYER_PARACHUTE_PACK_MODEL_OVERRIDE(PLAYER.PLAYER_ID(),0xE5022D03)
                TASK.CLEAR_PED_TASKS_IMMEDIATELY(PLAYER.GET_PLAYER_PED_SCRIPT_INDEX(PLAYER.PLAYER_ID()))
                t2crash:sleep(20)
                local p_pos = ENTITY.GET_ENTITY_COORDS(PLAYER.GET_PLAYER_PED_SCRIPT_INDEX(network.get_selected_player()))
                ENTITY.SET_ENTITY_COORDS_NO_OFFSET(PLAYER.GET_PLAYER_PED_SCRIPT_INDEX(PLAYER.PLAYER_ID()),p_pos.x,p_pos.y,p_pos.z,false,true,true)
                WEAPON.GIVE_DELAYED_WEAPON_TO_PED(PLAYER.GET_PLAYER_PED_SCRIPT_INDEX(PLAYER.PLAYER_ID()), 0xFBAB5776, 1000, false)
                TASK.TASK_PARACHUTE_TO_TARGET(PLAYER.GET_PLAYER_PED_SCRIPT_INDEX(PLAYER.PLAYER_ID()),-1087,-3012,13.94)
                t2crash:sleep(500)
                TASK.CLEAR_PED_TASKS_IMMEDIATELY(PLAYER.GET_PLAYER_PED_SCRIPT_INDEX(PLAYER.PLAYER_ID()))
                t2crash:sleep(1000)
                PLAYER.CLEAR_PLAYER_PARACHUTE_PACK_MODEL_OVERRIDE(PLAYER.PLAYER_ID())
                TASK.CLEAR_PED_TASKS_IMMEDIATELY(PLAYER.GET_PLAYER_PED_SCRIPT_INDEX(PLAYER.PLAYER_ID()))
            end)        end)
        gui.add_tab(""):add_sameline()   ------同行
        gui.add_tab(""):add_button("模型崩溃", function()
            script.run_in_fiber(function (vtcrash)
                if PLAYER.GET_PLAYER_PED(network.get_selected_player()) == PLAYER.PLAYER_PED_ID() then --避免目标离开战局后作用于自己
                    gui.show_message("攻击已停止", "检测到目标已离开或目标是自己")
                    return
                end
                local ship = {-1043459709, -276744698, 1861786828, -2100640717,}
                local pos117 = ENTITY.GET_ENTITY_COORDS(PLAYER.GET_PLAYER_PED(network.get_selected_player()), false)
                OBJECT.CREATE_OBJECT(0x9CF21E0F, pos117.x, pos117.y, pos117.z, true, true, false)
                for crash, value in pairs (ship) do 
                    local c = {} 
                    for i = 1, 10, 1 do 
                        if PLAYER.GET_PLAYER_PED(network.get_selected_player()) == PLAYER.PLAYER_PED_ID() then --避免目标离开战局后作用于自己
                            gui.show_message("攻击已停止", "检测到目标已离开或目标是自己")
                            return
                        end        
                        local pos2010 = ENTITY.GET_ENTITY_COORDS(PLAYER.GET_PLAYER_PED(network.get_selected_player()), false)
                        local selfpos = ENTITY.GET_ENTITY_COORDS(PLAYER.PLAYER_PED_ID())
                        if calcDistance(selfpos, pos2010) <= 300 then 
                            gui.show_message("攻击已停止", "请先远离目标")
                            return
                        end
                        c[crash] = CreateVehicle(value, pos2010, 0)
                        ENTITY.SET_ENTITY_AS_MISSION_ENTITY(c[crash], true, false) 
                        ENTITY.FREEZE_ENTITY_POSITION(c[crash])
                        ENTITY.SET_ENTITY_VISIBLE(c[crash],false)
                    end 
                end
                --[[    
                local tarply = PLAYER.GET_PLAYER_PED(network.get_selected_player())
                local tarplypos = ENTITY.GET_ENTITY_COORDS(PLAYER.GET_PLAYER_PED(network.get_selected_player()), false)
                vehtb = entities.get_all_vehicles_as_handles()      
                  
                for i = 1, #vehtb do
                    if PLAYER.GET_PLAYER_PED(network.get_selected_player()) == PLAYER.PLAYER_PED_ID() then --避免目标离开战局后作用于自己
                        gui.show_message("攻击已停止", "检测到目标已离开或目标是自己")
                        return
                    end    
                    NETWORK.NETWORK_REQUEST_CONTROL_OF_ENTITY(vehtb[i])
                    ENTITY.SET_ENTITY_COORDS_NO_OFFSET(vehtb[i], tarplypos.x, tarplypos.y, tarplypos.z + 5, ENTITY.GET_ENTITY_HEADING(tarply), 10)
                    TASK.TASK_VEHICLE_TEMP_ACTION(tarply, vehtb[i], 18, 999)
                    TASK.TASK_VEHICLE_TEMP_ACTION(tarply, vehtb[i], 16, 999)
                    log.info(vehtb[i]) 
                end
                ]]  
            end)
            script.run_in_fiber(function (vtcrash3)
                if PLAYER.GET_PLAYER_PED(network.get_selected_player()) == PLAYER.PLAYER_PED_ID() then --避免目标离开战局后作用于自己
                    gui.show_message("攻击已停止", "检测到目标已离开或目标是自己")
                    return
                end
                local mdl = joaat("mp_m_freemode_01")
                local veh_mdl = joaat("taxi")
                request_model(veh_mdl)
                request_model(mdl)
                    for i = 1, 10 do
                        local pos114 = ENTITY.GET_ENTITY_COORDS(PLAYER.GET_PLAYER_PED(network.get_selected_player()), false)
                        local ped = PLAYER.GET_PLAYER_PED_SCRIPT_INDEX(network.get_selected_player())
                        if PLAYER.GET_PLAYER_PED(network.get_selected_player()) == PLAYER.PLAYER_PED_ID() then --避免目标离开战局后作用于自己
                            gui.show_message("攻击已停止", "检测到目标已离开或目标是自己")
                            return
                        end        
                        local selfpos = ENTITY.GET_ENTITY_COORDS(PLAYER.PLAYER_PED_ID())
                        if calcDistance(selfpos, pos114) <= 300 then 
                            gui.show_message("攻击已停止", "请先远离目标")
                            return
                        end
                        local veh = CreateVehicle(veh_mdl, pos114, 0)
                        local jesus = CreatePed(2, mdl, pos114, 0)
                        ENTITY.SET_ENTITY_VISIBLE(veh, false)
                        ENTITY.SET_ENTITY_VISIBLE(jesus, false)
                        PED.SET_PED_INTO_VEHICLE(jesus, veh, -1)
                        PED.SET_PED_COMBAT_ATTRIBUTES(jesus, 46, true)
                        PED.SET_PED_COMBAT_RANGE(jesus, 4)
                        PED.SET_PED_COMBAT_ABILITY(jesus, 3)
                        vtcrash3:sleep(100)
                        TASK.TASK_VEHICLE_HELI_PROTECT(jesus, veh, ped, 10.0, 0, 10, 0, 0)
                        vtcrash3:sleep(1000)
                        ENTITY.DELETE_ENTITY(jesus)
                        ENTITY.DELETE_ENTITY(veh)
                    end  
                STREAMING.SET_MODEL_AS_NO_LONGER_NEEDED(mdl)
                STREAMING.SET_MODEL_AS_NO_LONGER_NEEDED(veh_mdl)
            end)
            script.run_in_fiber(function (vtcrash2)
                for i = 1, 10, 1 do 
                    if PLAYER.GET_PLAYER_PED(network.get_selected_player()) == PLAYER.PLAYER_PED_ID() then --避免目标离开战局后作用于自己
                        gui.show_message("攻击已停止", "检测到目标已离开或目标是自己")
                        return
                    end    
                    local anim_dict = "anim@mp_player_intupperstinker"
                    STREAMING.REQUEST_ANIM_DICT(anim_dict)
                    while not STREAMING.HAS_ANIM_DICT_LOADED(anim_dict) do
                        vtcrash2:yield()
                    end
                local pos115 = ENTITY.GET_ENTITY_COORDS(PLAYER.GET_PLAYER_PED(network.get_selected_player()), false)
                local selfpos = ENTITY.GET_ENTITY_COORDS(PLAYER.PLAYER_PED_ID())
                if calcDistance(selfpos, pos115) <= 300 then 
                    gui.show_message("攻击已停止", "请先远离目标")
                    return
                end
                local ped = PED.CREATE_RANDOM_PED(pos115.x, pos115.y, pos115.z+10)
                ENTITY.SET_ENTITY_VISIBLE(ped, false)
                ENTITY.FREEZE_ENTITY_POSITION(ped, true)
                PED.SET_PED_COMBAT_ATTRIBUTES(ped, 46, true)
                PED.SET_PED_COMBAT_RANGE(ped, 4)
                PED.SET_PED_COMBAT_ABILITY(ped, 3)
                for i = 1, 10 do
                    if PLAYER.GET_PLAYER_PED(network.get_selected_player()) == PLAYER.PLAYER_PED_ID() then --避免目标离开战局后作用于自己
                        gui.show_message("攻击已停止", "检测到目标已离开或目标是自己")
                        return
                    end    
                    local pos116 = ENTITY.GET_ENTITY_COORDS(PLAYER.GET_PLAYER_PED(network.get_selected_player()), false)
                    local selfpos = ENTITY.GET_ENTITY_COORDS(PLAYER.PLAYER_PED_ID())
                    if calcDistance(selfpos, pos116) <= 300 then 
                        gui.show_message("攻击已停止", "请先远离目标")
                        return
                    end
                    ENTITY.SET_ENTITY_COORDS_NO_OFFSET(ped, pos116.x, pos116.y, pos116.z+5, true, true, true)
                    TASK.TASK_SWEEP_AIM_POSITION(ped, anim_dict, "Y", "M", "T", -1, 0.0, 0.0, 0.0, 0.0, 0.0)
                    vtcrash2:sleep(1000)
                    TASK.CLEAR_PED_TASKS_IMMEDIATELY(ped)
                end
                ENTITY.DELETE_ENTITY(ped)
                vtcrash2:sleep(750)
                end
            end)
        end)



        local check8 = gui.get_tab(""):add_checkbox("循环水柱")
        gui.get_tab(""):add_sameline()   ------同行
        local checknodmgexp = gui.get_tab(""):add_checkbox("无伤爆炸")
        gui.get_tab(""):add_sameline()   ------同行
        local check2 = gui.get_tab(""):add_checkbox("掉Zhen攻击(尽可能远离目标)")
        gui.get_tab(""):add_sameline()   ------同行
        local check5 = gui.get_tab(""):add_checkbox("粒子效果轰炸(尽可能远离目标)")
        gui.add_tab(""):add_sameline()   ------同行
        local audiospam = gui.add_tab(""):add_checkbox("声音轰炸")


        gui.add_tab(""):add_button("向上发射", function()
            script.run_in_fiber(function (launchply)

            local ped = PLAYER.GET_PLAYER_PED(network.get_selected_player())
            local tarveh = joaat("mule5")
            local pos = ENTITY.GET_ENTITY_COORDS(PLAYER.GET_PLAYER_PED(network.get_selected_player()), false)

            STREAMING.REQUEST_MODEL(tarveh)
            while not STREAMING.HAS_MODEL_LOADED(tarveh) do		
                STREAMING.REQUEST_MODEL(tarveh)
                launchply:yield()
            end
            spd_veh = VEHICLE.CREATE_VEHICLE(tarveh, ENTITY.GET_OFFSET_FROM_ENTITY_IN_WORLD_COORDS(ped, 0.0, 1.0, -3.0).x,ENTITY.GET_OFFSET_FROM_ENTITY_IN_WORLD_COORDS(ped, 0.0, 1.0, -3.0).y,ENTITY.GET_OFFSET_FROM_ENTITY_IN_WORLD_COORDS(ped, 0.0, 1.0, -3.0).z, ENTITY.GET_ENTITY_HEADING(ped) , true, true, true)
	        NETWORK.SET_NETWORK_ID_CAN_MIGRATE(NETWORK.NETWORK_GET_NETWORK_ID_FROM_ENTITY(spd_veh),false)
            ENTITY.SET_ENTITY_VISIBLE(spd_veh, false)
            launchply:sleep(300)
            ENTITY.APPLY_FORCE_TO_ENTITY(spd_veh, 1, 0.0, 0.0, 1000.0, 0.0, 0.0, 0.0, 0, 1, 1, 1, 0, 1)
            end)        end)
        gui.add_tab(""):add_sameline()   ------同行
        gui.add_tab(""):add_button("向下挤压", function()
            script.run_in_fiber(function (launchply)

            local ped = PLAYER.GET_PLAYER_PED(network.get_selected_player())
            local tarveh = joaat("mule5")
            local pos = ENTITY.GET_ENTITY_COORDS(PLAYER.GET_PLAYER_PED(network.get_selected_player()), false)

            STREAMING.REQUEST_MODEL(tarveh)
            while not STREAMING.HAS_MODEL_LOADED(tarveh) do		
                STREAMING.REQUEST_MODEL(tarveh)
                launchply:yield()
            end
            spd_veh = VEHICLE.CREATE_VEHICLE(tarveh, ENTITY.GET_OFFSET_FROM_ENTITY_IN_WORLD_COORDS(ped, 0.0, 1.0, 3.0).x,ENTITY.GET_OFFSET_FROM_ENTITY_IN_WORLD_COORDS(ped, 0.0, 1.0, -3.0).y,ENTITY.GET_OFFSET_FROM_ENTITY_IN_WORLD_COORDS(ped, 0.0, 1.0, -3.0).z, ENTITY.GET_ENTITY_HEADING(ped) , true, true, true)
	        NETWORK.SET_NETWORK_ID_CAN_MIGRATE(NETWORK.NETWORK_GET_NETWORK_ID_FROM_ENTITY(spd_veh),false)
            ENTITY.SET_ENTITY_VISIBLE(spd_veh, false)
            launchply:sleep(300)
            ENTITY.APPLY_FORCE_TO_ENTITY(spd_veh, 1, 0.0, 0.0, -1000.0, 0.0, 0.0, 0.0, 0, 1, 1, 1, 0, 1)
            end)        end)
        gui.add_tab(""):add_sameline()   ------同行
        gui.get_tab(""):add_text("玩家距离") 
        gui.add_tab(""):add_sameline()   ------同行
        local plydist = gui.get_tab(""):add_input_float("距离(m)")

--GCB = script("gb_contraband_buy")
--FMC = script("fm_mission_controller")
--FMC2020 = script("fm_mission_controller_2020")
--HIP = script("heist_island_planning")
--AMN = script("am_mp_nightclub")


--------------------------------------------------------------------------------------- 

--------------------------------------------------------------------------------------- 

--------------------------------------------------------------------------------------- 


--一些变量------------------------------------------------------------------------------------------- 

    ---娱乐功能-------------------------------------------------------------------------------
            local objectsix1 --注册为全局变量以便后续移除666
            local objectsix2--注册为全局变量以便后续移除666
            local objectsix3--注册为全局变量以便后续移除666
            local object5201 --注册为全局变量以便后续移除520
            local object5202--注册为全局变量以便后续移除520
            local object5203--注册为全局变量以便后续移除520
            local BLtd666 = 0  --控制头顶666
            local BLtd520 = 0  --控制头顶520

            local BLtdph = 0  --控制喷火
            local BLelqs = 0  --控制恶灵骑士
            local BLhycb = 0  --控制火焰翅膀

            bigfireWings = {
                            [1] = {pos = {[1] = 120, [2] =  75}},
                            [2] = {pos = {[1] = 120, [2] = -75}},
                            [3] = {pos = {[1] = 135, [2] =  75}},
                            [4] = {pos = {[1] = 135, [2] = -75}},
                            [5] = {pos = {[1] = 180, [2] =  75}},
                            [6] = {pos = {[1] = 180, [2] = -75}},
                            [7] = {pos = {[1] = 190, [2] =  75}},
                            [8] = {pos = {[1] = 190, [2] = -75}},
                            [9] = {pos = {[1] = 130, [2] =  75}},
                            [10] = {pos = {[1] = 130, [2] = -75}},
                            [11] = {pos = {[1] = 140, [2] =  75}},
                            [12] = {pos = {[1] = 140, [2] = -75}},
                            [13] = {pos = {[1] = 150, [2] =  75}},
                            [14] = {pos = {[1] = 150, [2] = -75}},
                            [15] = {pos = {[1] = 210, [2] =  75}},
                            [16] = {pos = {[1] = 210, [2] = -75}},
                            [17] = {pos = {[1] = 195, [2] =  75}},
                            [18] = {pos = {[1] = 195, [2] = -75}},
                            [19] = {pos = {[1] = 160, [2] =  75}},
                            [20] = {pos = {[1] = 160, [2] = -75}},
                            [21] = {pos = {[1] = 170, [2] =  75}},
                            [22] = {pos = {[1] = 170, [2] = -75}},
                            [23] = {pos = {[1] = 200, [2] =  75}},
                            [24] = {pos = {[1] = 200, [2] = -75}},
                        }-------火焰翅膀需要的

    ---其它选项------------------------------------------------------------------------------
		local BLSJDG = 0  --控制世界灯光开关
		local BLZJJBS = 0  --控制PED脚步声有无
		local BLPEDJBS = 0  --控制PED所有声音有无
		local BLLSH = 0  --控制NPC零伤害
		local BLSDXTD = 0  --控制锁定小地图角度
		local BLSNKG = 0  --控制声纳开关
		local BLJCTD = 0  --控制警察调度
		local BLPEDRL = 0  --控制PED热量
		local BLGJDY = 0  --控制是否允许攻击队友
		local BLQXTB = 0  --控制取消同步
		local BLJJMS = 0  --紧急模式1
		local BLJJMS2 = 0  --紧急模式3

    ---玩家选项------------------------------------------------------------------------------
        local BLKZGK = 0  --控制观看
        local BLKZZJWD = 0  --控制远程载具无敌
        local BLKZZJWPZ = 0  --控制远程载具无碰撞

    ---任务助手------------------------------------------------------------------------------
            local BLMTBSCSD = 0  --控制摩托帮地堡致幻剂生产速度
            local BLYZHSCSD1 = 0  --控制夜总会生产速度
            local BLYZHSCSD2 = 0  --控制夜总会生产速度
            local BLYZHSCSD3 = 0  --控制夜总会生产速度
            local BLYZHSCSD4 = 0  --控制夜总会生产速度




--一些功能的循环------------------------------------------------------------------------------------- 



   script.register_looped("刷钱选项", function() 

            if  checkbox:is_enabled() then 
                script.register_looped("yimceoloop", function (script)
                    globals.set_int(CEO1, 6000000)
                    globals.set_int(CEO2, 0)
                    globals.set_int(CEO3, 0)
                    script:yield()

                    if checkbox:is_enabled() == true then
                        if locals.get_int(ci, 2) == 1 then
                            locals.set_int(ci, 1136, 1)
                            locals.set_int(ci, 596, 0)
                            locals.set_int(ci, 1125, 0) 
                            locals.set_int(ci, 548, 7)
                            script:sleep(500)
                            locals.set_int(ci, 542, 99999)  
                        end
                        if locals.get_int(cs, 2) == 1 then
                            script:sleep(500)
                            locals.set_int(cs, 737, 1)
                            script:sleep(200)
                            locals.set_int(cs, 738, 1)
                            script:sleep(200)
                            locals.set_int(cs, 556, 3012)
                            script:sleep(1000)
                        end
                        if locals.get_int(cb, 2) == 1 then
                            locals.set_int(cb, 604, 1)
                            locals.set_int(cb, 600, 111)
                            locals.set_int(cb, 790, 6)
                            locals.set_int(cb, 791, 4)
                            gui.show_message("你的仓库已经满了!")
                        end
                        if locals.get_int(ci, 2) ~= 1 then  
                            script:sleep(500)
                            if locals.get_int(am, 2) == 1 then
                                SCRIPT.REQUEST_SCRIPT("appsecuroserv")
                                SYSTEM.START_NEW_SCRIPT("appsecuroserv", 8344)
                                SCRIPT.SET_SCRIPT_AS_NO_LONGER_NEEDED("appsecuroserv")
                            end
                        end
                    end
                    script:sleep(500)
                end)
                gui.show_message("CEO刷钱" ,"已设置完成,货物已修改为600万")
            end
    end)

   script.register_looped("解锁选项", function() 

        if checkzhongjia:is_enabled() then --锁定请求重甲花费
            if iputintzhongjia:get_value() <= 500 then --防止有人拿删除钱设置为负反向刷钱  乐
                gui.show_error("错误", "金额需要大于500")
                checkzhongjia:set_enabled(nil)
                else
                    globals.set_int(262145 + 20468, iputintzhongjia:get_value())--核心代码 --am_pi_menu.c  func_1277("PIM_TBALLI" /*BALLISTIC EQUIPMENT SERVICES*/);
                end            end


        if checkmiss:is_enabled() then --虎鲸导弹 冷却、距离
			globals.set_int(262145 + 30394, 0) --tuneables_processing.c IH_SUBMARINE_MISSILES_COOLDOWN
			globals.set_int(262145 + 30395, 80000) --tuneables_processing.c IH_SUBMARINE_MISSILES_DISTANCE
	    end   
	end)	


   script.register_looped("抢劫选项", function() 

	        if  react2any1:is_enabled() then --控制NPC -死亡
				local pedtable = entities.get_all_peds_as_handles()
				for _, peds in pairs(pedtable) do
					local selfpos = ENTITY.GET_ENTITY_COORDS(PLAYER.PLAYER_PED_ID())
					local ped_pos = ENTITY.GET_ENTITY_COORDS(peds)
					if calcDistance(selfpos, ped_pos) <= npcctrlr:get_value() and peds ~= PLAYER.PLAYER_PED_ID() and not PED.IS_PED_DEAD_OR_DYING(peds,1) then 
						ENTITY.SET_ENTITY_HEALTH(peds,0,true)
					end
				end                        end

            if  react3any1:is_enabled() then --控制NPC -燃烧
                local pedtable = entities.get_all_peds_as_handles()
                for _, peds in pairs(pedtable) do
                    local selfpos = ENTITY.GET_ENTITY_COORDS(PLAYER.PLAYER_PED_ID())
                    local ped_pos = ENTITY.GET_ENTITY_COORDS(peds)
                    if calcDistance(selfpos, ped_pos) <= npcctrlr:get_value() and peds ~= PLAYER.PLAYER_PED_ID() and not PED.IS_PED_DEAD_OR_DYING(peds,1) then 
                        FIRE.START_ENTITY_FIRE(peds)
                        FIRE.START_SCRIPT_FIRE(ped_pos.x, ped_pos.y, ped_pos.z, 25, true)
                        FIRE.ADD_EXPLOSION(ped_pos.x, ped_pos.y, ped_pos.z, 3, 1, false, false, 0, false);
                    end
                end                        end


            if  react2anyac1:is_enabled() then --控制敌对NPC -死亡
                local pedtable = entities.get_all_peds_as_handles()
                for _, peds in pairs(pedtable) do
                    local selfpos = ENTITY.GET_ENTITY_COORDS(PLAYER.PLAYER_PED_ID())
                    local ped_pos = ENTITY.GET_ENTITY_COORDS(peds)
                    if (PED.GET_RELATIONSHIP_BETWEEN_PEDS(peds, PLAYER.PLAYER_PED_ID()) == 4 or PED.GET_RELATIONSHIP_BETWEEN_PEDS(peds, PLAYER.PLAYER_PED_ID()) == 5) and calcDistance(selfpos, ped_pos) <= npcctrlr:get_value() and peds ~= PLAYER.PLAYER_PED_ID() and not PED.IS_PED_DEAD_OR_DYING(peds,1) then 
                        ENTITY.SET_ENTITY_HEALTH(peds,0,true)
                    end
                end
            end

            if  react3anyac1:is_enabled() then --控制敌对NPC -燃烧
                local pedtable = entities.get_all_peds_as_handles()
                for _, peds in pairs(pedtable) do
                    local selfpos = ENTITY.GET_ENTITY_COORDS(PLAYER.PLAYER_PED_ID())
                    local ped_pos = ENTITY.GET_ENTITY_COORDS(peds)
                    if (PED.GET_RELATIONSHIP_BETWEEN_PEDS(peds, PLAYER.PLAYER_PED_ID()) == 4 or PED.GET_RELATIONSHIP_BETWEEN_PEDS(peds, PLAYER.PLAYER_PED_ID()) == 5) and calcDistance(selfpos, ped_pos) <= npcctrlr:get_value() and peds ~= PLAYER.PLAYER_PED_ID() and not PED.IS_PED_DEAD_OR_DYING(peds,1) then 
                        FIRE.START_ENTITY_FIRE(peds)
                        FIRE.START_SCRIPT_FIRE(ped_pos.x, ped_pos.y, ped_pos.z, 25, true)
                        FIRE.ADD_EXPLOSION(ped_pos.x, ped_pos.y, ped_pos.z, 3, 1, false, false, 0, false);
                    end
                end
            end
	end)	

   script.register_looped("任务助手", function() 

        if  ccrgsl:is_enabled() then--锁定CEO仓库出货任务 
            if locals.get_int("gb_contraband_sell",548) ~= 12 then
                log.info("已锁定CEO仓库出货任务类型.目标出货载具生成前不要关闭此开关")
                locals.set_int("gb_contraband_sell",548,12) -- gb_contraband_sell.c	randomIntInRange = MISC::GET_RANDOM_INT_IN_RANGE(0, 14); --iLocal_541.f_7 = randomIntInRange;
            end
        end 
    
        if  bkeasyms:is_enabled() then--锁定摩托帮出货任务 
            if locals.get_int("gb_biker_contraband_sell",716) ~= 0 then
                log.info("已锁定摩托帮产业出货任务类型.目标出货载具生成前不要关闭此开关.注意:此功能与摩托帮一键完成出货冲突")
                locals.set_int("gb_biker_contraband_sell",716,0) -- gb_biker_contraband_sell.c	randomIntInRange = MISC::GET_RANDOM_INT_IN_RANGE(0, 13); --iLocal_699.f_17 = randomIntInRange;
            end
        end

        if  bussp:is_enabled() then--锁定地堡摩托帮致幻剂生产速度
            local playerid = stats.get_int("MPPLY_LAST_MP_CHAR") --读取角色ID  --用于判断当前是角色1还是角色2
            local mpx = "MP0_"--用于判断当前是角色1还是角色2
            if playerid == 1 then --用于判断当前是角色1还是角色2
                mpx = "MP1_" --用于判断当前是角色1还是角色2
            end
            if BLMTBSCSD == 0 then
                gui.show_message("下次触发生产生效","换战局有时能够立即生效?")
            end
            if globals.get_int(262145 + 17571) ~= 5000 then
                globals.set_int(262145 + 17571, 5000) -- BIKER_WEED_PRODUCTION_TIME
            end
            if globals.get_int(262145 + 17572) ~= 5000 then
                globals.set_int(262145 + 17572, 5000) 
            end
            if globals.get_int(262145 + 17573) ~= 5000 then
                globals.set_int(262145 + 17573, 5000) 
            end
            if globals.get_int(262145 + 17574) ~= 5000 then
                globals.set_int(262145 + 17574, 5000) 
            end
            if globals.get_int(262145 + 17575) ~= 5000 then
                globals.set_int(262145 + 17575, 5000) 
            end
            if globals.get_int(262145 + 17576) ~= 5000 then
                globals.set_int(262145 + 17576, 5000) 
            end
            if globals.get_int(262145 + 21712) ~= 5000 then
                globals.set_int(262145 + 21712, 5000) -- GR_MANU_PRODUCTION_TIME
            end
            if globals.get_int(262145 + 21713) ~= 5000 then
                globals.set_int(262145 + 21713, 5000) -- 631477612
            end
            if globals.get_int(262145 + 21714) ~= 5000 then
                globals.set_int(262145 + 21714, 5000) -- 818645907
            end
            if stats.get_int(mpx.."MATTOTALFORFACTORY0") > 0 and stats.get_int(mpx.."MATTOTALFORFACTORY0") <= 40 and autoresply == 0 then 
                globals.set_int(1648657+1+0,1) --假钞
                log.info("原材料不足,将自动补满")
                MCprintspl()
                autoresply = 1
            end
            if stats.get_int(mpx.."MATTOTALFORFACTORY1") > 0 and stats.get_int(mpx.."MATTOTALFORFACTORY1") <= 40 and autoresply == 0 then 
                globals.set_int(1648657+1+1,1) --kky
                log.info("原材料不足,将自动补满")
                MCprintspl()
                autoresply = 1
            end
            if stats.get_int(mpx.."MATTOTALFORFACTORY2") > 0 and stats.get_int(mpx.."MATTOTALFORFACTORY2") <= 40 and autoresply == 0 then 
                globals.set_int(1648657+1+2,1) --bd
                log.info("原材料不足,将自动补满")
                MCprintspl()
                autoresply = 1
            end
            if stats.get_int(mpx.."MATTOTALFORFACTORY3") > 0 and stats.get_int(mpx.."MATTOTALFORFACTORY3") <= 40 and autoresply == 0 then 
                globals.set_int(1648657+1+3,1) --dm
                log.info("原材料不足,将自动补满")
                MCprintspl()
                autoresply = 1
            end
            if stats.get_int(mpx.."MATTOTALFORFACTORY4") > 0 and stats.get_int(mpx.."MATTOTALFORFACTORY4") <= 40 and autoresply == 0 then 
                globals.set_int(1648657+1+4,1) --id
                log.info("原材料不足,将自动补满")
                MCprintspl()
                autoresply = 1
            end
            if stats.get_int(mpx.."MATTOTALFORFACTORY5") > 0 and stats.get_int(mpx.."MATTOTALFORFACTORY5") <= 40 and autoresply == 0 then 
                globals.set_int(1648657+1+5,1) --bk
                log.info("原材料不足,将自动补满")
                MCprintspl()
                autoresply = 1
            end
            if stats.get_int(mpx.."MATTOTALFORFACTORY6") > 0 and stats.get_int(mpx.."MATTOTALFORFACTORY6") <= 40 and autoresply == 0 then 
                globals.set_int(1648657+1+6,1) --acid
                log.info("原材料不足,将自动补满")
                MCprintspl()
                autoresply = 1
            end
            BLMTBSCSD =1
        else
            if BLMTBSCSD == 1 then 
                globals.set_int(262145 + 17571, 360000) 
                globals.set_int(262145 + 17572, 1800000) 
                globals.set_int(262145 + 17573, 3000000) 
                globals.set_int(262145 + 17574, 300000) 
                globals.set_int(262145 + 17575, 720000) 
                globals.set_int(262145 + 17576, 135000) 
                globals.set_int(262145 + 21712, 600000)
                globals.set_int(262145 + 21713, 90000)
                globals.set_int(262145 + 21714, 90000)
                BLMTBSCSD =0
            end    
        end

        if  ncspup:is_enabled() then--锁定夜总会生产速度
            if BLYZHSCSD1 == 0 then
                gui.show_message("下次触发生产时才能生效","重新指派员工以立即生效")
            end
            if globals.get_int(262145 + 24548) ~= 5000 then
                globals.set_int(262145 + 24548, 5000) -- tuneables_processing.c -147565853
            end
            if globals.get_int(262145 + 24549) ~= 5000 then
                globals.set_int(262145 + 24549, 5000) -- tuneables_processing.c -1390027611
            end
            if globals.get_int(262145 + 24550) ~= 5000 then
                globals.set_int(262145 + 24550, 5000) -- tuneables_processing.c -1292210552
            end
            if globals.get_int(262145 + 24551) ~= 5000 then
                globals.set_int(262145 + 24551, 5000) -- tuneables_processing.c 1007184806
            end
            if globals.get_int(262145 + 24552) ~= 5000 then
                globals.set_int(262145 + 24552, 5000) -- tuneables_processing.c 18969287
            end
            if globals.get_int(262145 + 24553) ~= 5000 then
                globals.set_int(262145 + 24553, 5000) -- tuneables_processing.c -863328938
            end
            if globals.get_int(262145 + 24554) ~= 5000 then
                globals.set_int(262145 + 24554, 5000) -- tuneables_processing.c 1607981264
            end
            BLYZHSCSD1 =1
        else
            if BLYZHSCSD1 == 1 then 
                globals.set_int(262145 + 24548, 14400000) -- tuneables_processing.c -147565853
                globals.set_int(262145 + 24549, 7200000) -- tuneables_processing.c -1390027611
                globals.set_int(262145 + 24550, 2400000) -- tuneables_processing.c -1292210552
                globals.set_int(262145 + 24551, 2400000) -- tuneables_processing.c 1007184806
                globals.set_int(262145 + 24552, 1800000) -- tuneables_processing.c 18969287
                globals.set_int(262145 + 24553, 3600000) -- tuneables_processing.c -863328938
                globals.set_int(262145 + 24554, 8400000) -- tuneables_processing.c 1607981264

        --[[ 游戏默认值
            Global_262145.f_24548 = 4800000;
	        Global_262145.f_24549 = 14400000;
	        Global_262145.f_24550 = 7200000;
	        Global_262145.f_24551 = 2400000;
	        Global_262145.f_24552 = 1800000;
	        Global_262145.f_24553 = 3600000;
	        Global_262145.f_24554 = 8400000;
        ]]
                BLYZHSCSD1 =0
            end    
        end

        if  ncspupa1:is_enabled() then--锁定夜总会生产速度x4
            if BLYZHSCSD2 == 0 then
                gui.show_message("下次触发生产时才能生效","重新指派员工以立即生效")
            end
            if globals.get_int(262145 + 24548) ~= 3600000 then
                globals.set_int(262145 + 24548, 3600000) -- tuneables_processing.c -147565853
            end
            if globals.get_int(262145 + 24549) ~= 1800000 then
                globals.set_int(262145 + 24549, 1800000) -- tuneables_processing.c -1390027611
            end
            if globals.get_int(262145 + 24550) ~= 600000 then
                globals.set_int(262145 + 24550, 600000) -- tuneables_processing.c -1292210552
            end
            if globals.get_int(262145 + 24551) ~= 600000 then
                globals.set_int(262145 + 24551, 600000) -- tuneables_processing.c 1007184806
            end
            if globals.get_int(262145 + 24552) ~= 450000 then
                globals.set_int(262145 + 24552, 450000) -- tuneables_processing.c 18969287
            end
            if globals.get_int(262145 + 24553) ~= 900000 then
                globals.set_int(262145 + 24553, 900000) -- tuneables_processing.c -863328938
            end
            if globals.get_int(262145 + 24554) ~= 2100000 then
                globals.set_int(262145 + 24554, 2100000) -- tuneables_processing.c 1607981264
            end
            BLYZHSCSD2 =1
        else
            if BLYZHSCSD2 == 1 then 
                globals.set_int(262145 + 24548, 14400000) -- tuneables_processing.c -147565853
                globals.set_int(262145 + 24549, 7200000) -- tuneables_processing.c -1390027611
                globals.set_int(262145 + 24550, 2400000) -- tuneables_processing.c -1292210552
                globals.set_int(262145 + 24551, 2400000) -- tuneables_processing.c 1007184806
                globals.set_int(262145 + 24552, 1800000) -- tuneables_processing.c 18969287
                globals.set_int(262145 + 24553, 3600000) -- tuneables_processing.c -863328938
                globals.set_int(262145 + 24554, 8400000) -- tuneables_processing.c 1607981264
                BLYZHSCSD2 =0
            end    
        end

        if  ncspupa2:is_enabled() then--锁定夜总会生产速度x10
            if BLYZHSCSD3 == 0 then
                gui.show_message("下次触发生产时才能生效","重新指派员工以立即生效")
            end
            if globals.get_int(262145 + 24548) ~= 1440000 then
                globals.set_int(262145 + 24548, 1440000) -- tuneables_processing.c -147565853
            end
            if globals.get_int(262145 + 24549) ~= 720000 then
                globals.set_int(262145 + 24549, 720000) -- tuneables_processing.c -1390027611
            end
            if globals.get_int(262145 + 24550) ~= 240000 then
                globals.set_int(262145 + 24550, 240000) -- tuneables_processing.c -1292210552
            end
            if globals.get_int(262145 + 24551) ~= 240000 then
                globals.set_int(262145 + 24551, 240000) -- tuneables_processing.c 1007184806
            end
            if globals.get_int(262145 + 24552) ~= 180000 then
                globals.set_int(262145 + 24552, 180000) -- tuneables_processing.c 18969287
            end
            if globals.get_int(262145 + 24553) ~= 360000 then
                globals.set_int(262145 + 24553, 360000) -- tuneables_processing.c -863328938
            end
            if globals.get_int(262145 + 24554) ~= 840000 then
                globals.set_int(262145 + 24554, 840000) -- tuneables_processing.c 1607981264
            end
            BLYZHSCSD3 =1
        else
            if BLYZHSCSD3 == 1 then 
                globals.set_int(262145 + 24548, 14400000) -- tuneables_processing.c -147565853
                globals.set_int(262145 + 24549, 7200000) -- tuneables_processing.c -1390027611
                globals.set_int(262145 + 24550, 2400000) -- tuneables_processing.c -1292210552
                globals.set_int(262145 + 24551, 2400000) -- tuneables_processing.c 1007184806
                globals.set_int(262145 + 24552, 1800000) -- tuneables_processing.c 18969287
                globals.set_int(262145 + 24553, 3600000) -- tuneables_processing.c -863328938
                globals.set_int(262145 + 24554, 8400000) -- tuneables_processing.c 1607981264
                BLYZHSCSD3 =0
            end    
        end

        if  ncspupa3:is_enabled() then--锁定夜总会生产速度x20
            if BLYZHSCSD4 == 0 then
                gui.show_message("下次触发生产时才能生效","重新指派员工以立即生效")
            end
            if globals.get_int(262145 + 24548) ~= 720000 then
                globals.set_int(262145 + 24548, 720000) -- tuneables_processing.c -147565853
            end
            if globals.get_int(262145 + 24549) ~= 360000 then
                globals.set_int(262145 + 24549, 360000) -- tuneables_processing.c -1390027611
            end
            if globals.get_int(262145 + 24550) ~= 120000 then
                globals.set_int(262145 + 24550, 120000) -- tuneables_processing.c -1292210552
            end
            if globals.get_int(262145 + 24551) ~= 120000 then
                globals.set_int(262145 + 24551, 120000) -- tuneables_processing.c 1007184806
            end
            if globals.get_int(262145 + 24552) ~= 90000 then
                globals.set_int(262145 + 24552, 90000) -- tuneables_processing.c 18969287
            end
            if globals.get_int(262145 + 24553) ~= 180000 then
                globals.set_int(262145 + 24553, 180000) -- tuneables_processing.c -863328938
            end
            if globals.get_int(262145 + 24554) ~= 420000 then
                globals.set_int(262145 + 24554, 420000) -- tuneables_processing.c 1607981264
            end
            BLYZHSCSD4 =1
        else
            if BLYZHSCSD4 == 1 then 
                globals.set_int(262145 + 24548, 14400000) -- tuneables_processing.c -147565853
                globals.set_int(262145 + 24549, 7200000) -- tuneables_processing.c -1390027611
                globals.set_int(262145 + 24550, 2400000) -- tuneables_processing.c -1292210552
                globals.set_int(262145 + 24551, 2400000) -- tuneables_processing.c 1007184806
                globals.set_int(262145 + 24552, 1800000) -- tuneables_processing.c 18969287
                globals.set_int(262145 + 24553, 3600000) -- tuneables_processing.c -863328938
                globals.set_int(262145 + 24554, 8400000) -- tuneables_processing.c 1607981264
                BLYZHSCSD4 =0
            end    
        end

        if  checkCEOcargo:is_enabled() then--锁定CEO仓库进货数
            if inputCEOcargo:get_value() <= 111 then --判断一下有没有人一次进天文数字箱货物、或者乱按的

            globals.set_int(1890714+12,inputCEOcargo:get_value()) --核心代码 --freemode.c      func_17512("SRC_CRG_TICKER_1" /*~a~ Staff has sourced: ~n~1 Crate: ~a~*/, func_6676(hParam0), func_17513(Global_1890714.f_15), HUD_COLOUR_PURE_WHITE, HUD_COLOUR_PURE_WHITE);

            else
                gui.show_error("超过限额", "进货数超过仓库容量上限")
                checkCEOcargo:set_enabled(nil)
            end
        end

        if  check4:is_enabled() then--锁定机库仓库进货数
            globals.set_int(1890730+6,iputint3:get_value()) --freemode.c   --  "HAN_CRG_TICKER_2"   -- func_10326("HAN_CRG_TICKER_1", str, HUD_COLOUR_PURE_WHITE, HUD_COLOUR_PURE_WHITE, false);
        end

        if  checklkw:is_enabled() then--锁定名钻赌场幸运轮盘奖品--只影响实际结果，不影响转盘显示
            locals.set_int("casino_lucky_wheel","290","18") --luckyWheelOutcome: {('276', '14')}  LOCAL casino_lucky_wheel reward numbers: https://pastebin.com/HsW6QS31 
            --char* func_180() // Position - 0x7354   --return "CAS_LW_VEHI" /*Congratulations!~n~You won the podium vehicle.*/;
            --你可以自定义代码中的18来获取其他物品。设定为18是展台载具，16衣服，17经验，19现金，4载具折扣，11神秘礼品，15 chips不认识是什么
        end


        if  autorespl:is_enabled() then--自动补原材料
            local playerid = stats.get_int("MPPLY_LAST_MP_CHAR") --读取角色ID  --用于判断当前是角色1还是角色2
            local mpx = "MP0_"--用于判断当前是角色1还是角色2
            if playerid == 1 then --用于判断当前是角色1还是角色2
                mpx = "MP1_" --用于判断当前是角色1还是角色2
            end
            if stats.get_int(mpx.."MATTOTALFORFACTORY0") > 0 and stats.get_int(mpx.."MATTOTALFORFACTORY0") <= 40 and autoresply == 0 then 
                globals.set_int(1648657+1+0,1) --假钞
                log.info("假钞原材料不足,将自动补满")
                MCprintspl()
                autoresply = 1
            end
            if stats.get_int(mpx.."MATTOTALFORFACTORY1") > 0 and stats.get_int(mpx.."MATTOTALFORFACTORY1") <= 40 and autoresply == 0 then 
                globals.set_int(1648657+1+1,1) --kky
                log.info("可卡因原材料不足,将自动补满")
                MCprintspl()
                autoresply = 1
            end
            if stats.get_int(mpx.."MATTOTALFORFACTORY2") > 0 and stats.get_int(mpx.."MATTOTALFORFACTORY2") <= 40 and autoresply == 0 then 
                globals.set_int(1648657+1+2,1) --bd
                log.info("冰毒原材料不足,将自动补满")
                MCprintspl()
                autoresply = 1
            end
            if stats.get_int(mpx.."MATTOTALFORFACTORY3") > 0 and stats.get_int(mpx.."MATTOTALFORFACTORY3") <= 40 and autoresply == 0 then 
                globals.set_int(1648657+1+3,1) --dm
                log.info("大麻原材料不足,将自动补满")
                MCprintspl()
                autoresply = 1
            end
            if stats.get_int(mpx.."MATTOTALFORFACTORY4") > 0 and stats.get_int(mpx.."MATTOTALFORFACTORY4") <= 40 and autoresply == 0 then 
                globals.set_int(1648657+1+4,1) --id
                log.info("证件原材料不足,将自动补满")
                MCprintspl()
                autoresply = 1
            end
            if stats.get_int(mpx.."MATTOTALFORFACTORY5") > 0 and stats.get_int(mpx.."MATTOTALFORFACTORY5") <= 40 and autoresply == 0 then 
                globals.set_int(1648657+1+5,1) --bk
                log.info("地堡原材料不足,将自动补满")
                MCprintspl()
                autoresply = 1
            end
            if stats.get_int(mpx.."MATTOTALFORFACTORY6") > 0 and stats.get_int(mpx.."MATTOTALFORFACTORY6") <= 40 and autoresply == 0 then 
                globals.set_int(1648657+1+6,1) --acid
                log.info("致幻剂原材料不足,将自动补满")
                MCprintspl()
                autoresply = 1
            end                end
    end)

		
   script.register_looped("娱乐功能", function() 

            if  FWFYH:is_enabled() then --天空范围烟花
                local tarm = ENTITY.GET_OFFSET_FROM_ENTITY_IN_WORLD_COORDS(PLAYER.PLAYER_PED_ID(), 0.0, 0.52, 0.0)

                STREAMING.REQUEST_NAMED_PTFX_ASSET("scr_indep_fireworks")
                while not STREAMING.HAS_NAMED_PTFX_ASSET_LOADED("scr_indep_fireworks") do script_util:yield() end
                GRAPHICS.USE_PARTICLE_FX_ASSET("scr_indep_fireworks")
                GRAPHICS.START_NETWORKED_PARTICLE_FX_NON_LOOPED_AT_COORD("scr_indep_firework_trailburst", tarm.x + math.random(-100, 100), tarm.y + math.random(-100, 100), tarm.z + math.random(10, 30), 180, 0, 0, 1.0, true, true, true)

                script_util:sleep(100)
            end

            if  TD666:is_enabled() then --控制头顶666生成与移除
                if BLtd666 == 0 then
                    local md6 = "prop_mp_num_6"
                    local user_ped = PLAYER.PLAYER_PED_ID()
                    md6hash = joaat(md6)
        
                    STREAMING.REQUEST_MODEL(md6hash)
                    while not STREAMING.HAS_MODEL_LOADED(md6hash) do		
                        script_util:yield()
                    end
                    STREAMING.SET_MODEL_AS_NO_LONGER_NEEDED(md6hash)
        
                    objectsix1 = OBJECT.CREATE_OBJECT(md6hash, 0.0,0.0,0, true, true, false)
                    ENTITY.ATTACH_ENTITY_TO_ENTITY(objectsix1, user_ped, PED.GET_PED_BONE_INDEX(PLAYER.PLAYER_PED_ID(), 0), 0.0, 0, 1.7, 0, 0, 0, false, false, false, false, 2, true) 
        
                    STREAMING.REQUEST_MODEL(md6hash)
                    while not STREAMING.HAS_MODEL_LOADED(md6hash) do		
                        script_util:yield()
                    end
                    STREAMING.SET_MODEL_AS_NO_LONGER_NEEDED(md6hash)
        
                    objectsix2 = OBJECT.CREATE_OBJECT(md6hash, 0.0,0.0,0, true, true, false)
                    ENTITY.ATTACH_ENTITY_TO_ENTITY(objectsix2, user_ped, PED.GET_PED_BONE_INDEX(PLAYER.PLAYER_PED_ID(), 0), 1.0, 0, 1.7, 0, 0, 0, false, false, false, false, 2, true) 
        
                    STREAMING.REQUEST_MODEL(md6hash)
                    while not STREAMING.HAS_MODEL_LOADED(md6hash) do		
                        script_util:yield()
                    end
                    STREAMING.SET_MODEL_AS_NO_LONGER_NEEDED(md6hash)
        
                    objectsix3 = OBJECT.CREATE_OBJECT(md6hash, 0.0,0.0,0, true, true, false)
                    ENTITY.ATTACH_ENTITY_TO_ENTITY(objectsix3, user_ped, PED.GET_PED_BONE_INDEX(PLAYER.PLAYER_PED_ID(), 0), -1.0, 0, 1.7, 0, 0, 0, false, false, false, false, 2, true) 
        
                    gui.show_message("头顶666","生成")
                end
                BLtd666 = 1
            else
                if BLtd666 == 1 then 
                    ENTITY.DELETE_ENTITY(objectsix1)
                    ENTITY.DELETE_ENTITY(objectsix2)
                    ENTITY.DELETE_ENTITY(objectsix3)
                    gui.show_message("头顶666","移除")
                    BLtd666 = 0
                end
            end

            if  TD520:is_enabled() then --控制头顶520生成与移除
                if BLtd520 == 0 then
                    local num5 = "prop_mp_num_2"
                    local num2 = "prop_mp_num_5"
                    local num0 = "prop_mp_num_0"
                    local user_ped = PLAYER.PLAYER_PED_ID()
                    num5hash = joaat(num5)
                    num2hash = joaat(num2)
                    num0hash = joaat(num0)
        
                    STREAMING.REQUEST_MODEL(num5hash)
                    while not STREAMING.HAS_MODEL_LOADED(num5hash) do		
                        script_util:yield()
                    end
                    STREAMING.SET_MODEL_AS_NO_LONGER_NEEDED(num5hash)
        
                    object5201 = OBJECT.CREATE_OBJECT(num5hash, 0.0,0.0,0, true, true, false)
                    ENTITY.ATTACH_ENTITY_TO_ENTITY(object5201, user_ped, PED.GET_PED_BONE_INDEX(PLAYER.PLAYER_PED_ID(), 0), 0.0, 0, 1.7, 0, 0, 0, false, false, false, false, 2, true) 
        
                    STREAMING.REQUEST_MODEL(num2hash)
                    while not STREAMING.HAS_MODEL_LOADED(num2hash) do		
                        script_util:yield()
                    end
                    STREAMING.SET_MODEL_AS_NO_LONGER_NEEDED(num2hash)
        
                    object5202 = OBJECT.CREATE_OBJECT(num2hash, 0.0,0.0,0, true, true, false)
                    ENTITY.ATTACH_ENTITY_TO_ENTITY(object5202, user_ped, PED.GET_PED_BONE_INDEX(PLAYER.PLAYER_PED_ID(), 0),  -1.0, 0, 1.7, 0, 0, 0, false, false, false, false, 2, true) 
        
                    STREAMING.REQUEST_MODEL(num0hash)
                    while not STREAMING.HAS_MODEL_LOADED(num0hash) do		
                        script_util:yield()
                    end
                    STREAMING.SET_MODEL_AS_NO_LONGER_NEEDED(num0hash)
        
                    object5203 = OBJECT.CREATE_OBJECT(num0hash, 0.0,0.0,0, true, true, false)
                    ENTITY.ATTACH_ENTITY_TO_ENTITY(object5203, user_ped, PED.GET_PED_BONE_INDEX(PLAYER.PLAYER_PED_ID(), 0),   1.0, 0, 1.7, 0, 0, 0, false, false, false, false, 2, true) 
        
                    gui.show_message("头顶520","生成")
                end
                BLtd520 = 1
            else
                if BLtd520 == 1 then 
                    ENTITY.DELETE_ENTITY(object5201)
                    ENTITY.DELETE_ENTITY(object5202)
                    ENTITY.DELETE_ENTITY(object5203)
                    gui.show_message("头顶520","移除")
                    BLtd520 = 0
                end
            end 

            if  YYMS:is_enabled() then --随处游泳
                PED.SET_PED_CONFIG_FLAG(PLAYER.PLAYER_PED_ID(), 65, 81) --锁定玩家状态为游泳
            end

            if  partwater:is_enabled() then --分开水体
                local selfpos = ENTITY.GET_ENTITY_COORDS(PLAYER.PLAYER_PED_ID())
                WATER.SET_DEEP_OCEAN_SCALER(0.0)

                WATER.MODIFY_WATER(selfpos.x, selfpos.y, -500000.0, 0.2)
                WATER.MODIFY_WATER(selfpos.x+2, selfpos.y, -500000.0, 0.2)
                WATER.MODIFY_WATER(selfpos.x, selfpos.y+2, -500000.0, 0.2)
                WATER.MODIFY_WATER(selfpos.x-2, selfpos.y, -500000.0, 0.2)
                WATER.MODIFY_WATER(selfpos.x, selfpos.y-2, -500000.0, 0.2)

                WATER.MODIFY_WATER(selfpos.x+math.random(4,10), selfpos.y, -500000.0, 0.2)
                WATER.MODIFY_WATER(selfpos.x, selfpos.y+math.random(4,10), -500000.0, 0.2)
                WATER.MODIFY_WATER(selfpos.x-math.random(4,10), selfpos.y, -500000.0, 0.2)
                WATER.MODIFY_WATER(selfpos.x, selfpos.y-math.random(4,10), -500000.0, 0.2)

            end

            if  TDPH:is_enabled() then --不太好用的喷火功能
                if BLtdph == 0 then
                    STREAMING.REQUEST_NAMED_PTFX_ASSET("weap_xs_vehicle_weapons")
                    while not STREAMING.HAS_NAMED_PTFX_ASSET_LOADED("weap_xs_vehicle_weapons") do
                        STREAMING.REQUEST_NAMED_PTFX_ASSET("weap_xs_vehicle_weapons")
                        script_util:yield()               
                    end
                    GRAPHICS.USE_PARTICLE_FX_ASSET("weap_xs_vehicle_weapons")
                    local ptfxx = GRAPHICS.START_NETWORKED_PARTICLE_FX_LOOPED_ON_ENTITY_BONE('muz_xs_turret_flamethrower_looping', PLAYER.PLAYER_PED_ID(), 0, 0.12, 0.58, 30, 0, 0, 0x8b93, 1.0 , false, false, false)
                    GRAPHICS.SET_PARTICLE_FX_LOOPED_COLOUR(ptfxx, 255, 127, 80)    
                end
                BLtdph = 1
            else
                if BLtdph == 1 then 
                    GRAPHICS.REMOVE_PARTICLE_FX(ptfxx, true)
                    GRAPHICS.REMOVE_PARTICLE_FX_FROM_ENTITY(PLAYER.PLAYER_PED_ID())
                    STREAMING.REMOVE_NAMED_PTFX_ASSET('weap_xs_vehicle_weapons')    
                end
                BLtdph = 0
            end 

            if  ELQS:is_enabled() then --控制恶灵骑士
                if BLelqs == 0 then
                while not STREAMING.HAS_MODEL_LOADED(joaat("sanctus")) do		
                    STREAMING.REQUEST_MODEL(joaat("sanctus"))
                    script_util:yield()
                end
                firemtcrtveh = VEHICLE.CREATE_VEHICLE(joaat("sanctus"), ENTITY.GET_ENTITY_COORDS(PLAYER.PLAYER_PED_ID(),false).x, ENTITY.GET_ENTITY_COORDS(PLAYER.PLAYER_PED_ID(),false).y, ENTITY.GET_ENTITY_COORDS(PLAYER.PLAYER_PED_ID(),false).z, 0 , true, true, true)
                ENTITY.SET_ENTITY_RENDER_SCORCHED(firemtcrtveh,true) --烧焦效果
                ENTITY.SET_ENTITY_INVINCIBLE(firemtcrtveh,true)  --载具无敌
                VEHICLE.SET_VEHICLE_EXTRA_COLOURS(firemtcrtveh,30,15)
                PED.SET_PED_INTO_VEHICLE(PLAYER.PLAYER_PED_ID(),firemtcrtveh,-1) --坐进载具
                script_util:sleep(500) 
                while not STREAMING.HAS_NAMED_PTFX_ASSET_LOADED("core") do
                    STREAMING.REQUEST_NAMED_PTFX_ASSET("core")
                    script_util:yield()               
                end
                while not STREAMING.HAS_NAMED_PTFX_ASSET_LOADED("weap_xs_vehicle_weapons") do
                    STREAMING.REQUEST_NAMED_PTFX_ASSET("weap_xs_vehicle_weapons")
                    script_util:yield()               
                end
                local vehbone3 = ENTITY.GET_ENTITY_BONE_INDEX_BY_NAME(firemtcrtveh, "wheel_rr")
                local vehbone4 = ENTITY.GET_ENTITY_BONE_INDEX_BY_NAME(firemtcrtveh, "wheel_rf")
                GRAPHICS.USE_PARTICLE_FX_ASSET("core")
                vehptfx6 = GRAPHICS.START_NETWORKED_PARTICLE_FX_LOOPED_ON_ENTITY_BONE("fire_wrecked_plane_cockpit", firemtcrtveh, 0.0, 0.9, 0.0, 170.0, 0.0, 0.0, vehbone3, 1.0, false, false, false, 0, 0, 0, 0)
                GRAPHICS.USE_PARTICLE_FX_ASSET("core")
                vehptfx7 = GRAPHICS.START_NETWORKED_PARTICLE_FX_LOOPED_ON_ENTITY_BONE("fire_wrecked_plane_cockpit", firemtcrtveh, 0.0, -0.9, -0.0, 170.0, 0.0, 0.0, vehbone3, 1.0, false, false, false, 0, 0, 0, 0)
                GRAPHICS.USE_PARTICLE_FX_ASSET("weap_xs_vehicle_weapons")
                vehptfx3 = GRAPHICS.START_NETWORKED_PARTICLE_FX_LOOPED_ON_ENTITY_BONE("muz_xs_turret_flamethrower_looping", firemtcrtveh, 0.0, 0.7, 0.0, 170.0, 0.0, 0.0, vehbone3, 1.0, false, false, false, 0, 0, 0, 0)
                GRAPHICS.USE_PARTICLE_FX_ASSET("weap_xs_vehicle_weapons")
                vehptfx2 = GRAPHICS.START_NETWORKED_PARTICLE_FX_LOOPED_ON_ENTITY_BONE("muz_xs_turret_flamethrower_looping", firemtcrtveh, 0.0, 0.0, 1.0, 170.0, 0.0, 0.0, vehbone3, 1.0, false, false, false, 0, 0, 0, 0)
                GRAPHICS.USE_PARTICLE_FX_ASSET("weap_xs_vehicle_weapons")
                vehptfx1 = GRAPHICS.START_NETWORKED_PARTICLE_FX_LOOPED_ON_ENTITY_BONE("muz_xs_turret_flamethrower_looping", firemtcrtveh, 0.0, 0.7, 0.4, 170.0, 0.0, 0.0, vehbone3, 1.0, false, false, false, 0, 0, 0, 0)
                GRAPHICS.USE_PARTICLE_FX_ASSET("weap_xs_vehicle_weapons")
                vehptfx4 = GRAPHICS.START_NETWORKED_PARTICLE_FX_LOOPED_ON_ENTITY_BONE("muz_xs_turret_flamethrower_looping", firemtcrtveh, -0.5, 0.7, 0.3, 180.0, 0.0, 0.0, vehbone3, 1.0, false, false, false, 0, 0, 0, 0)
                GRAPHICS.USE_PARTICLE_FX_ASSET("weap_xs_vehicle_weapons")
                vehptfx5 = GRAPHICS.START_NETWORKED_PARTICLE_FX_LOOPED_ON_ENTITY_BONE("muz_xs_turret_flamethrower_looping", firemtcrtveh, 0.5, 0.7, 0.3, 180.0, 0.0, 0.0, vehbone3, 1.0, false, false, false, 0, 0, 0, 0)
                GRAPHICS.SET_PARTICLE_FX_LOOPED_COLOUR(vehptfx7, 100, 100, 100, false)
                GRAPHICS.SET_PARTICLE_FX_LOOPED_COLOUR(vehptfx6, 100, 100, 100, false)
                GRAPHICS.SET_PARTICLE_FX_LOOPED_COLOUR(vehptfx2, 100, 100, 100, false)
                GRAPHICS.SET_PARTICLE_FX_LOOPED_COLOUR(vehptfx3, 100, 100, 100, false)
                GRAPHICS.SET_PARTICLE_FX_LOOPED_COLOUR(vehptfx4, 100, 100, 100, false)
                GRAPHICS.SET_PARTICLE_FX_LOOPED_COLOUR(vehptfx5, 100, 100, 100, false)

                GRAPHICS.SET_PARTICLE_FX_LOOPED_COLOUR(vehptfx1, 200, 200, 200, false)
        
                gui.show_message("恶灵骑士","开")
                end
                BLelqs = 1
            else
                if BLelqs == 1 then 
                    ENTITY.DELETE_ENTITY(firemtcrtveh)
                    gui.show_message("恶灵骑士","关")
                    BLelqs = 0
                end
            end

            if  HYCB:is_enabled() then --不太好用的火焰翅膀功能
                if BLhycb == 0 then
                    if  ptfxAegg == nil then
                        local obj1 = 1803116220  --外星蛋,用于附加火焰ptfx
        
                        local pos = ENTITY.GET_ENTITY_COORDS(PLAYER.PLAYER_PED_ID())
    
                        STREAMING.REQUEST_MODEL(obj1)
                        while not STREAMING.HAS_MODEL_LOADED(obj1) do
                            STREAMING.REQUEST_MODEL(obj1)
                            script_util:yield() 
                        end
    
                        ptfxAegg = OBJECT.CREATE_OBJECT(obj1, pos.x, pos.y, pos.z, true, false, false)
    
                        ENTITY.SET_ENTITY_COLLISION(ptfxAegg, false, false)
                        STREAMING.SET_MODEL_AS_NO_LONGER_NEEDED(obj1)
                    end
                    for i = 1, #bigfireWings do
                        STREAMING.REQUEST_NAMED_PTFX_ASSET("weap_xs_vehicle_weapons")
                        while not STREAMING.HAS_NAMED_PTFX_ASSET_LOADED("weap_xs_vehicle_weapons") do
                            STREAMING.REQUEST_NAMED_PTFX_ASSET("weap_xs_vehicle_weapons")
                            script_util:sleep(20)
                        end
                        GRAPHICS.USE_PARTICLE_FX_ASSET("weap_xs_vehicle_weapons")
                        bigfireWings[i].ptfx = GRAPHICS.START_NETWORKED_PARTICLE_FX_LOOPED_ON_ENTITY("muz_xs_turret_flamethrower_looping", ptfxAegg, 0, 0, 0.1, bigfireWings[i].pos[1], 0, bigfireWings[i].pos[2], 1, false, false, false)
        
                        local rot = ENTITY.GET_ENTITY_ROTATION(PLAYER.PLAYER_PED_ID(), 2)
                        ENTITY.ATTACH_ENTITY_TO_ENTITY(ptfxAegg, PLAYER.PLAYER_PED_ID(), -1, 0, 0, 0, rot.x, rot.y, rot.z, false, false, false, false, 0, false)
                        ENTITY.SET_ENTITY_ROTATION(ptfxAegg, rot.x, rot.y, rot.z, 2, true)
                            for i = 1, #bigfireWings do
                                GRAPHICS.SET_PARTICLE_FX_LOOPED_SCALE(bigfireWings[i].ptfx, 0.6)
                                GRAPHICS.SET_PARTICLE_FX_LOOPED_COLOUR(bigfireWings[i].ptfx, 255, 127, 80)
        
                            end
                        ENTITY.SET_ENTITY_VISIBLE(ptfxAegg, false) 
                    end
                end
                BLhycb =1
            else
                if BLhycb == 1 then 
                    for i = 1, #bigfireWings do
                        if bigfireWings[i].ptfx then
                            GRAPHICS.REMOVE_PARTICLE_FX(bigfireWings[i].ptfx, true)
                            bigfireWings[i].ptfx = nil
                        end
                        if ptfxAegg then
                            ENTITY.DELETE_ENTITY(ptfxAegg)
                            ptfxAegg = nil
                        end
                    end
                    STREAMING.REMOVE_NAMED_PTFX_ASSET('weap_xs_vehicle_weapons')
                end
                BLhycb = 0
            end

            if  QLHSZ:is_enabled() then --清理PTFX和火焰效果
                local selfpos = ENTITY.GET_ENTITY_COORDS(PLAYER.PLAYER_PED_ID())
                FIRE.STOP_FIRE_IN_RANGE(selfpos.x, selfpos.y, selfpos.z, 500)
                FIRE.STOP_ENTITY_FIRE(PLAYER.PLAYER_PED_ID())    
                GRAPHICS.REMOVE_PARTICLE_FX_IN_RANGE(selfpos.x, selfpos.y, selfpos.z, 1000)
                GRAPHICS.REMOVE_PARTICLE_FX_FROM_ENTITY(PLAYER.PLAYER_PED_ID())
            else
            end        end)



   script.register_looped("载具/NPC/实体力场功能", function() 


                    if  vehforcefield:is_enabled() then --控制载具力场
                        local vehtable = entities.get_all_vehicles_as_handles()
                        local vehisin = PED.GET_VEHICLE_PED_IS_IN(PLAYER.PLAYER_PED_ID(), true)
                        for _, vehicle in pairs(vehtable) do
                            local selfpos = ENTITY.GET_ENTITY_COORDS(PLAYER.PLAYER_PED_ID())
                            local vehicle_pos = ENTITY.GET_ENTITY_COORDS(vehicle)
                            if calcDistance(selfpos, vehicle_pos) <= ffrange:get_value() then
                                if vehicle ~= vehisin then
                                    ENTITY.APPLY_FORCE_TO_ENTITY(vehicle, 3, 0, 0, 3, 0, 0, 0.5, 0, false, false, true, false, false)
                                end
                            end
                        end            end

                    if  pedforcefield:is_enabled() then --控制NPC力场
                        local pedtable = entities.get_all_peds_as_handles()
                        for _, peds in pairs(pedtable) do
                            local selfpos = ENTITY.GET_ENTITY_COORDS(PLAYER.PLAYER_PED_ID())
                            local ped_pos = ENTITY.GET_ENTITY_COORDS(peds)
                            if calcDistance(selfpos, ped_pos) <= ffrange:get_value() and peds ~= PLAYER.PLAYER_PED_ID() then 
                                if PED.IS_PED_IN_ANY_VEHICLE(peds) then
                                    tarpensveh = PED.GET_VEHICLE_PED_IS_IN(peds)
                                    ENTITY.APPLY_FORCE_TO_ENTITY(tarpensveh, 3, 0, 0, 2, 0, 0, 0.5, 0, false, false, true, false, false)
                                else
                                    ENTITY.APPLY_FORCE_TO_ENTITY(peds, 3, 0, 0, 2, 0, 0, 0.5, 0, false, false, true, false, false)
                                end
                            end
                        end            end

                    if  forcefield:is_enabled() then --控制力场
                        local vehtable = entities.get_all_vehicles_as_handles()
                        local vehisin = PED.GET_VEHICLE_PED_IS_IN(PLAYER.PLAYER_PED_ID(), true)
                        for _, vehicle in pairs(vehtable) do
                            local selfpos = ENTITY.GET_ENTITY_COORDS(PLAYER.PLAYER_PED_ID())
                            local vehicle_pos = ENTITY.GET_ENTITY_COORDS(vehicle)
                            if calcDistance(selfpos, vehicle_pos) <= ffrange:get_value() then
                                if vehicle ~= vehisin then
                                    ENTITY.APPLY_FORCE_TO_ENTITY(vehicle, 3, 0, 0, 3, 0, 0, 0.5, 0, false, false, true, false, false)
                                end
                            end
                        end
                        local pedtable = entities.get_all_peds_as_handles()
                        for _, peds in pairs(pedtable) do
                            local selfpos = ENTITY.GET_ENTITY_COORDS(PLAYER.PLAYER_PED_ID())
                            local ped_pos = ENTITY.GET_ENTITY_COORDS(peds)
                            if calcDistance(selfpos, ped_pos) <= ffrange:get_value() and peds ~= PLAYER.PLAYER_PED_ID() then 
                                if PED.IS_PED_IN_ANY_VEHICLE(peds) then
                                    tarpensveh = PED.GET_VEHICLE_PED_IS_IN(peds)
                                    ENTITY.APPLY_FORCE_TO_ENTITY(tarpensveh, 3, 0, 0, 2, 0, 0, 0.5, 0, false, false, true, false, false)
                                else
                                    ENTITY.APPLY_FORCE_TO_ENTITY(peds, 3, 0, 0, 2, 0, 0, 0.5, 0, false, false, true, false, false)
                                end
                            end
                        end            end
  
                    if  objforcefield:is_enabled() then --控制物体力场
                        local onjtable = entities.get_all_objects_as_handles()
                        local vehisin = PED.GET_VEHICLE_PED_IS_IN(PLAYER.PLAYER_PED_ID(), true)
                        for _, aobj in pairs(onjtable) do
                            local selfpos = ENTITY.GET_ENTITY_COORDS(PLAYER.PLAYER_PED_ID())
                            local aobj_pos = ENTITY.GET_ENTITY_COORDS(aobj)
                            if calcDistance(selfpos, aobj_pos) <= ffrange:get_value() then
                                if aobj ~= vehisin then
                                    ENTITY.APPLY_FORCE_TO_ENTITY(aobj, 3, 0, 0, 3, 0, 0, 0.5, 0, false, false, true, false, false)
                                end
                            end
                        end            end



                        end)


   script.register_looped("一载具批量控制", function() 

                            if  vehengdmg:is_enabled() then --控制载具引擎破坏
                                local vehtable = entities.get_all_vehicles_as_handles()
                                local vehisin = PED.GET_VEHICLE_PED_IS_IN(PLAYER.PLAYER_PED_ID(), true)
                                for _, vehicle in pairs(vehtable) do
                                    local selfpos = ENTITY.GET_ENTITY_COORDS(PLAYER.PLAYER_PED_ID())
                                    local vehicle_pos = ENTITY.GET_ENTITY_COORDS(vehicle)
                                    if calcDistance(selfpos, vehicle_pos) <= npcctrlr:get_value() then
                                        if vehicle ~= vehisin then
                                            VEHICLE.SET_VEHICLE_ENGINE_HEALTH(vehicle, -4000)
                                        end
                                    end
                                end                        end

                            if  vehfixr:is_enabled() then --控制载具修理
                                local vehtable = entities.get_all_vehicles_as_handles()
                                local vehisin = PED.GET_VEHICLE_PED_IS_IN(PLAYER.PLAYER_PED_ID(), true)
                                for _, vehicle in pairs(vehtable) do
                                    local selfpos = ENTITY.GET_ENTITY_COORDS(PLAYER.PLAYER_PED_ID())
                                    local vehicle_pos = ENTITY.GET_ENTITY_COORDS(vehicle)
                                    if calcDistance(selfpos, vehicle_pos) <= npcctrlr:get_value() then
                                        VEHICLE.SET_VEHICLE_FIXED(vehicle)
                                    end
                                end                        end

                            if  vehstopr:is_enabled() then --控制载具停止
                                local vehtable = entities.get_all_vehicles_as_handles()
                                local vehisin = PED.GET_VEHICLE_PED_IS_IN(PLAYER.PLAYER_PED_ID(), true)
                                for _, vehicle in pairs(vehtable) do
                                    local selfpos = ENTITY.GET_ENTITY_COORDS(PLAYER.PLAYER_PED_ID())
                                    local vehicle_pos = ENTITY.GET_ENTITY_COORDS(vehicle)
                                    if calcDistance(selfpos, vehicle_pos) <= npcctrlr:get_value() then
                                        if vehicle ~= vehisin then
                                            ENTITY.SET_ENTITY_VELOCITY(vehicle,0,0,0)
                                        end
                                    end
                                end                        end

                            if  vehjmpr:is_enabled() then --控制载具跳跃
                                local vehtable = entities.get_all_vehicles_as_handles()
                                local vehisin = PED.GET_VEHICLE_PED_IS_IN(PLAYER.PLAYER_PED_ID(), true)
                                for _, vehicle in pairs(vehtable) do
                                    local selfpos = ENTITY.GET_ENTITY_COORDS(PLAYER.PLAYER_PED_ID())
                                    local vehicle_pos = ENTITY.GET_ENTITY_COORDS(vehicle)
                                    if calcDistance(selfpos, vehicle_pos) <= npcctrlr:get_value() then
                                        if vehicle ~= vehisin then
                                            ENTITY.APPLY_FORCE_TO_ENTITY(vehicle, 3, 0, 0, 10, 0.0, 0.0, 0.0, 0, true, false, true, false, true)
                                        end
                                    end
                                end
                                script_util:sleep(2500)
                                ENTITY.SET_ENTITY_ROTATION(vehicle,0,0,0,2,true)                        end

                            if  vehdoorlk4p:is_enabled() then --控制载具锁门
                                local vehtable = entities.get_all_vehicles_as_handles()
                                local vehisin = PED.GET_VEHICLE_PED_IS_IN(PLAYER.PLAYER_PED_ID(), true)
                                for _, vehicle in pairs(vehtable) do
                                    local selfpos = ENTITY.GET_ENTITY_COORDS(PLAYER.PLAYER_PED_ID())
                                    local vehicle_pos = ENTITY.GET_ENTITY_COORDS(vehicle)
                                    if calcDistance(selfpos, vehicle_pos) <= npcctrlr:get_value() then
                                        if vehicle ~= vehisin then
                                            VEHICLE.SET_VEHICLE_DOORS_LOCKED_FOR_ALL_PLAYERS(vehicle, true)
                                        end
                                    end
                                end
                                BLKZZJSM = 1
                            else
                                if BLKZZJSM == 1 then
                                    local vehtable = entities.get_all_vehicles_as_handles()
                                    local vehisin = PED.GET_VEHICLE_PED_IS_IN(PLAYER.PLAYER_PED_ID(), true)
                                    for _, vehicle in pairs(vehtable) do
                                        local selfpos = ENTITY.GET_ENTITY_COORDS(PLAYER.PLAYER_PED_ID())
                                        local vehicle_pos = ENTITY.GET_ENTITY_COORDS(vehicle)
                                        if calcDistance(selfpos, vehicle_pos) <= npcctrlr:get_value() then
                                            if vehicle ~= vehisin then
                                                VEHICLE.SET_VEHICLE_DOORS_LOCKED_FOR_ALL_PLAYERS(vehicle, false)
                                            end
                                        end
                                    end
                                    gui.show_message("提示","已解锁") 
                                end
                                BLKZZJSM = 0                        end

                            if  vehbr:is_enabled() then --控制载具混乱
                                local vehtable = entities.get_all_vehicles_as_handles()
                                local vehisin = PED.GET_VEHICLE_PED_IS_IN(PLAYER.PLAYER_PED_ID(), true)
                                for _, vehicle in pairs(vehtable) do
                                    local selfpos = ENTITY.GET_ENTITY_COORDS(PLAYER.PLAYER_PED_ID())
                                    local vehicle_pos = ENTITY.GET_ENTITY_COORDS(vehicle)
                                    if calcDistance(selfpos, vehicle_pos) <= npcctrlr:get_value() then
                                        if vehicle ~= vehisin then
                                            ENTITY.APPLY_FORCE_TO_ENTITY(vehicle, 1, math.random(0, 3), math.random(0, 3), math.random(-3, 1), 0.0, 0.0, 0.0, 0, true, false, true, false, true)
                                        end
                                    end
                                end                        end

                            if  vehrm:is_enabled() then --控制载具移除
                                local vehtable = entities.get_all_vehicles_as_handles()
                                local vehisin = PED.GET_VEHICLE_PED_IS_IN(PLAYER.PLAYER_PED_ID(), true)
                                for _, vehicle in pairs(vehtable) do
                                    local selfpos = ENTITY.GET_ENTITY_COORDS(PLAYER.PLAYER_PED_ID())
                                    local vehicle_pos = ENTITY.GET_ENTITY_COORDS(vehicle)
                                    if calcDistance(selfpos, vehicle_pos) <= npcctrlr:get_value() then
                                        if vehicle ~= vehisin then
                                            ENTITY.SET_ENTITY_AS_MISSION_ENTITY(vehicle,true,true) --不执行这个下面会删除失败
                                            ENTITY.DELETE_ENTITY(vehicle)        
                                        end
                                    end
                                end    end                    end)


   script.register_looped("NPC批量控制", function() 
                        
                        if  reactany:is_enabled() then --控制NPC-中断
                            local pedtable = entities.get_all_peds_as_handles()
                            for _, peds in pairs(pedtable) do
                                local selfpos = ENTITY.GET_ENTITY_COORDS(PLAYER.PLAYER_PED_ID())
                                local ped_pos = ENTITY.GET_ENTITY_COORDS(peds)
                                if calcDistance(selfpos, ped_pos) <= npcctrlr:get_value() and peds ~= PLAYER.PLAYER_PED_ID() and not PED.IS_PED_DEAD_OR_DYING(peds,1) then 
                                    TASK.CLEAR_PED_TASKS_IMMEDIATELY(peds)
                                end
                            end                        end

                        if  react1any:is_enabled() then --控制NPC -摔倒
                            local pedtable = entities.get_all_peds_as_handles()
                            for _, peds in pairs(pedtable) do
                                local selfpos = ENTITY.GET_ENTITY_COORDS(PLAYER.PLAYER_PED_ID())
                                local ped_pos = ENTITY.GET_ENTITY_COORDS(peds)
                                if calcDistance(selfpos, ped_pos) <= npcctrlr:get_value() and peds ~= PLAYER.PLAYER_PED_ID() and not PED.IS_PED_DEAD_OR_DYING(peds,1) then 
                                    PED.SET_PED_TO_RAGDOLL(peds, 5000, 0,0 , false, false, false)
                                end
                            end                        end

                        if  react2any:is_enabled() then --控制NPC -死亡
                            local pedtable = entities.get_all_peds_as_handles()
                            for _, peds in pairs(pedtable) do
                                local selfpos = ENTITY.GET_ENTITY_COORDS(PLAYER.PLAYER_PED_ID())
                                local ped_pos = ENTITY.GET_ENTITY_COORDS(peds)
                                if calcDistance(selfpos, ped_pos) <= npcctrlr:get_value() and peds ~= PLAYER.PLAYER_PED_ID() and not PED.IS_PED_DEAD_OR_DYING(peds,1) then 
                                    ENTITY.SET_ENTITY_HEALTH(peds,0,true)
                                end
                            end                        end

                        if  react3any:is_enabled() then --控制NPC -燃烧
                            local pedtable = entities.get_all_peds_as_handles()
                            for _, peds in pairs(pedtable) do
                                local selfpos = ENTITY.GET_ENTITY_COORDS(PLAYER.PLAYER_PED_ID())
                                local ped_pos = ENTITY.GET_ENTITY_COORDS(peds)
                                if calcDistance(selfpos, ped_pos) <= npcctrlr:get_value() and peds ~= PLAYER.PLAYER_PED_ID() and not PED.IS_PED_DEAD_OR_DYING(peds,1) then 
                                    FIRE.START_ENTITY_FIRE(peds)
                                    FIRE.START_SCRIPT_FIRE(ped_pos.x, ped_pos.y, ped_pos.z, 25, true)
                                    FIRE.ADD_EXPLOSION(ped_pos.x, ped_pos.y, ped_pos.z, 3, 1, false, false, 0, false);
                                end
                            end                        end

                        if  react4any:is_enabled() then --控制NPC-起飞
                            local pedtable = entities.get_all_peds_as_handles()
                            for _, peds in pairs(pedtable) do
                                local selfpos = ENTITY.GET_ENTITY_COORDS(PLAYER.PLAYER_PED_ID())
                                local ped_pos = ENTITY.GET_ENTITY_COORDS(peds)
                                if calcDistance(selfpos, ped_pos) <= npcctrlr:get_value() and peds ~= PLAYER.PLAYER_PED_ID() then 
                                    if PED.IS_PED_IN_ANY_VEHICLE(peds) then
                                        tarpensveh = PED.GET_VEHICLE_PED_IS_IN(peds)
                                        ENTITY.APPLY_FORCE_TO_ENTITY(tarpensveh, 3, 0, 0, 2, 0, 0, 0.5, 0, false, false, true, false, false)
                                    else
                                        ENTITY.APPLY_FORCE_TO_ENTITY(peds, 3, 0, 0, 2, 0, 0, 0.5, 0, false, false, true, false, false)
                                    end
                                end
                            end                        end

                        if  revitalizationped:is_enabled() then --控制NPC-复活
                            local pedtable = entities.get_all_peds_as_handles()
                            for _, peds in pairs(pedtable) do
                                local selfpos = ENTITY.GET_ENTITY_COORDS(PLAYER.PLAYER_PED_ID())
                                local ped_pos = ENTITY.GET_ENTITY_COORDS(peds)
                                if calcDistance(selfpos, ped_pos) <= npcctrlr:get_value() and peds ~= PLAYER.PLAYER_PED_ID() and PED.IS_PED_DEAD_OR_DYING(peds,1) then 
                                    ENTITY.SET_ENTITY_LOAD_COLLISION_FLAG(peds, true)
                                    ENTITY.SET_ENTITY_AS_MISSION_ENTITY(peds, true, false)
                                    ENTITY.SET_ENTITY_SHOULD_FREEZE_WAITING_ON_COLLISION(peds, true)
                                    ENTITY.SET_ENTITY_COLLISION(peds,true,true)
                                    PED.SET_PED_AS_GROUP_MEMBER(peds, PED.GET_PED_GROUP_INDEX(PLAYER.PLAYER_PED_ID()))
                                    PED.SET_PED_RELATIONSHIP_GROUP_HASH(peds, PED.GET_PED_RELATIONSHIP_GROUP_HASH(PLAYER.PLAYER_PED_ID()))
                                    PED.SET_PED_NEVER_LEAVES_GROUP(peds, true)
                                    PED.SET_CAN_ATTACK_FRIENDLY(peds, 0, 1)
                                    PED.SET_PED_COMBAT_ABILITY(peds, 2)
                                    PED.SET_PED_CAN_TELEPORT_TO_GROUP_LEADER(peds, PED.GET_PED_GROUP_INDEX(PLAYER.PLAYER_PED_ID()), true)
                                    PED.SET_PED_FLEE_ATTRIBUTES(peds, 512, true)
                                    PED.SET_PED_FLEE_ATTRIBUTES(peds, 1024, true)
                                    PED.SET_PED_FLEE_ATTRIBUTES(peds, 2048, true)
                                    PED.SET_PED_FLEE_ATTRIBUTES(peds, 16384, true)
                                    PED.SET_PED_FLEE_ATTRIBUTES(peds, 131072, true)
                                    PED.SET_PED_FLEE_ATTRIBUTES(peds, 262144, true)
                                    PED.SET_PED_COMBAT_ATTRIBUTES(peds, 5, true)
                                    PED.SET_PED_COMBAT_ATTRIBUTES(peds, 13, true)
                                    PED.SET_PED_CONFIG_FLAG(peds, 394, true)
                                    PED.SET_PED_CONFIG_FLAG(peds, 400, true)
                                    PED.SET_PED_CONFIG_FLAG(peds, 134, true)
                                    WEAPON.GIVE_WEAPON_TO_PED(peds, joaat("weapon_combating_mk2"), 9999, false, false)
                                    PED.SET_PED_ACCURACY(peds,100)
                                    TASK.TASK_COMBAT_HATED_TARGETS_AROUND_PED(PLAYER.PLAYER_PED_ID(), 100, 67108864)
                                    ENTITY.SET_ENTITY_HEALTH(peds,1000,true)
                                    PED.RESURRECT_PED(peds)
                                end
                            end                        end

                        if  rmdied:is_enabled() then --控制NPC -移除尸体
                            local pedtable = entities.get_all_peds_as_handles()
                            for _, peds in pairs(pedtable) do
                                local selfpos = ENTITY.GET_ENTITY_COORDS(PLAYER.PLAYER_PED_ID())
                                local ped_pos = ENTITY.GET_ENTITY_COORDS(peds)
                                if calcDistance(selfpos, ped_pos) <= npcctrlr:get_value() and peds ~= PLAYER.PLAYER_PED_ID() and PED.IS_PED_DEAD_OR_DYING(peds,1) then 
                                    ENTITY.SET_ENTITY_AS_MISSION_ENTITY(peds,true,true) --不执行这个下面会删除失败
                                    ENTITY.DELETE_ENTITY(peds)
                                end
                            end                        end                    end)


   script.register_looped("敌对NPC批量控制", function() 

                        if  reactanyac:is_enabled() then --控制敌对NPC-中断
                            local pedtable = entities.get_all_peds_as_handles()
                            for _, peds in pairs(pedtable) do
                                local selfpos = ENTITY.GET_ENTITY_COORDS(PLAYER.PLAYER_PED_ID())
                                local ped_pos = ENTITY.GET_ENTITY_COORDS(peds)
                                if (PED.GET_RELATIONSHIP_BETWEEN_PEDS(peds, PLAYER.PLAYER_PED_ID()) == 4 or PED.GET_RELATIONSHIP_BETWEEN_PEDS(peds, PLAYER.PLAYER_PED_ID()) == 5) and calcDistance(selfpos, ped_pos) <= npcctrlr:get_value() and peds ~= PLAYER.PLAYER_PED_ID() and not PED.IS_PED_DEAD_OR_DYING(peds,1) then 
                                    TASK.CLEAR_PED_TASKS_IMMEDIATELY(peds)
                                end
                            end
                        end                        

                        if  react1anyac:is_enabled() then --控制敌对NPC -摔倒
                            local pedtable = entities.get_all_peds_as_handles()
                            for _, peds in pairs(pedtable) do
                                local selfpos = ENTITY.GET_ENTITY_COORDS(PLAYER.PLAYER_PED_ID())
                                local ped_pos = ENTITY.GET_ENTITY_COORDS(peds)
                                if (PED.GET_RELATIONSHIP_BETWEEN_PEDS(peds, PLAYER.PLAYER_PED_ID()) == 4 or PED.GET_RELATIONSHIP_BETWEEN_PEDS(peds, PLAYER.PLAYER_PED_ID()) == 5) and calcDistance(selfpos, ped_pos) <= npcctrlr:get_value() and peds ~= PLAYER.PLAYER_PED_ID() and not PED.IS_PED_DEAD_OR_DYING(peds,1) then 
                                    PED.SET_PED_TO_RAGDOLL(peds, 5000, 0,0 , false, false, false)
                                end
                            end
                        end

                        if  react2anyac:is_enabled() then --控制敌对NPC -死亡
                            local pedtable = entities.get_all_peds_as_handles()
                            for _, peds in pairs(pedtable) do
                                local selfpos = ENTITY.GET_ENTITY_COORDS(PLAYER.PLAYER_PED_ID())
                                local ped_pos = ENTITY.GET_ENTITY_COORDS(peds)
                                if (PED.GET_RELATIONSHIP_BETWEEN_PEDS(peds, PLAYER.PLAYER_PED_ID()) == 4 or PED.GET_RELATIONSHIP_BETWEEN_PEDS(peds, PLAYER.PLAYER_PED_ID()) == 5) and calcDistance(selfpos, ped_pos) <= npcctrlr:get_value() and peds ~= PLAYER.PLAYER_PED_ID() and not PED.IS_PED_DEAD_OR_DYING(peds,1) then 
                                    ENTITY.SET_ENTITY_HEALTH(peds,0,true)
                                end
                            end
                        end

                        if  react3anyac:is_enabled() then --控制敌对NPC -燃烧
                            local pedtable = entities.get_all_peds_as_handles()
                            for _, peds in pairs(pedtable) do
                                local selfpos = ENTITY.GET_ENTITY_COORDS(PLAYER.PLAYER_PED_ID())
                                local ped_pos = ENTITY.GET_ENTITY_COORDS(peds)
                                if (PED.GET_RELATIONSHIP_BETWEEN_PEDS(peds, PLAYER.PLAYER_PED_ID()) == 4 or PED.GET_RELATIONSHIP_BETWEEN_PEDS(peds, PLAYER.PLAYER_PED_ID()) == 5) and calcDistance(selfpos, ped_pos) <= npcctrlr:get_value() and peds ~= PLAYER.PLAYER_PED_ID() and not PED.IS_PED_DEAD_OR_DYING(peds,1) then 
                                    FIRE.START_ENTITY_FIRE(peds)
                                    FIRE.START_SCRIPT_FIRE(ped_pos.x, ped_pos.y, ped_pos.z, 25, true)
                                    FIRE.ADD_EXPLOSION(ped_pos.x, ped_pos.y, ped_pos.z, 3, 1, false, false, 0, false);
                                end
                            end
                        end

                        if  react4anyac:is_enabled() then --控制敌对NPC-起飞
                            local pedtable = entities.get_all_peds_as_handles()
                            for _, peds in pairs(pedtable) do
                                local selfpos = ENTITY.GET_ENTITY_COORDS(PLAYER.PLAYER_PED_ID())
                                local ped_pos = ENTITY.GET_ENTITY_COORDS(peds)
                                if (PED.GET_RELATIONSHIP_BETWEEN_PEDS(peds, PLAYER.PLAYER_PED_ID()) == 4 or PED.GET_RELATIONSHIP_BETWEEN_PEDS(peds, PLAYER.PLAYER_PED_ID()) == 5) and calcDistance(selfpos, ped_pos) <= npcctrlr:get_value() and peds ~= PLAYER.PLAYER_PED_ID() then 
                                    if PED.IS_PED_IN_ANY_VEHICLE(peds) then
                                        tarpensveh = PED.GET_VEHICLE_PED_IS_IN(peds)
                                        ENTITY.APPLY_FORCE_TO_ENTITY(tarpensveh, 3, 0, 0, 2, 0, 0, 0.5, 0, false, false, true, false, false)
                                    else
                                        ENTITY.APPLY_FORCE_TO_ENTITY(peds, 3, 0, 0, 2, 0, 0, 0.5, 0, false, false, true, false, false)
                                    end
                                end
                            end
                        end

                        if  react5anyac:is_enabled() then --控制敌对NPC 收为保镖
                            local pedtable = entities.get_all_peds_as_handles()
                            for _, peds in pairs(pedtable) do
                                local selfpos = ENTITY.GET_ENTITY_COORDS(PLAYER.PLAYER_PED_ID())
                                local ped_pos = ENTITY.GET_ENTITY_COORDS(peds)
                                if (PED.GET_RELATIONSHIP_BETWEEN_PEDS(peds, PLAYER.PLAYER_PED_ID()) == 4 or PED.GET_RELATIONSHIP_BETWEEN_PEDS(peds, PLAYER.PLAYER_PED_ID()) == 5) and calcDistance(selfpos, ped_pos) <= npcctrlr:get_value() and peds ~= PLAYER.PLAYER_PED_ID() and not PED.IS_PED_DEAD_OR_DYING(peds,1) then 
                                    TASK.CLEAR_PED_TASKS(peds)
                                    PED.SET_PED_AS_GROUP_MEMBER(peds, PED.GET_PED_GROUP_INDEX(PLAYER.PLAYER_PED_ID()))
                                    PED.SET_PED_RELATIONSHIP_GROUP_HASH(peds, PED.GET_PED_RELATIONSHIP_GROUP_HASH(PLAYER.PLAYER_PED_ID()))
                                    PED.SET_PED_NEVER_LEAVES_GROUP(peds, true)
                                    PED.SET_CAN_ATTACK_FRIENDLY(peds, 0, 1)
                                    PED.SET_PED_COMBAT_ABILITY(peds, 2)
                                    PED.SET_PED_CAN_TELEPORT_TO_GROUP_LEADER(peds, PED.GET_PED_GROUP_INDEX(PLAYER.PLAYER_PED_ID()), true)
                                    PED.SET_PED_FLEE_ATTRIBUTES(peds, 512, true)
                                    PED.SET_PED_FLEE_ATTRIBUTES(peds, 1024, true)
                                    PED.SET_PED_FLEE_ATTRIBUTES(peds, 2048, true)
                                    PED.SET_PED_FLEE_ATTRIBUTES(peds, 16384, true)
                                    PED.SET_PED_FLEE_ATTRIBUTES(peds, 131072, true)
                                    PED.SET_PED_FLEE_ATTRIBUTES(peds, 262144, true)
                                    PED.SET_PED_COMBAT_ATTRIBUTES(peds, 5, true)
                                    PED.SET_PED_COMBAT_ATTRIBUTES(peds, 13, true)
                                    PED.SET_PED_CONFIG_FLAG(peds, 394, true)
                                    PED.SET_PED_CONFIG_FLAG(peds, 400, true)
                                    PED.SET_PED_CONFIG_FLAG(peds, 134, true)
                                    WEAPON.GIVE_WEAPON_TO_PED(peds, joaat("weapon_combating_mk2"), 9999, false, false)
                                    PED.SET_PED_ACCURACY(peds,100)
                                    TASK.TASK_COMBAT_HATED_TARGETS_AROUND_PED(PLAYER.PLAYER_PED_ID(), 100, 67108864)
                                    ENTITY.SET_ENTITY_HEALTH(peds,1000,true)
                                    pedblip = HUD.GET_BLIP_FROM_ENTITY(peds)
                                    HUD.REMOVE_BLIP(pedblip)
                                    newblip = HUD.ADD_BLIP_FOR_ENTITY(peds)
                                    HUD.SET_BLIP_AS_FRIENDLY(newblip, true)
                                    HUD.SET_BLIP_AS_SHORT_RANGE(newblip,true)
                                end
                            end
                        end

                        if  react6anyac:is_enabled() then --控制敌对NPC-光柱标记
                            local pedtable = entities.get_all_peds_as_handles()
                            for _, peds in pairs(pedtable) do
                                local selfpos = ENTITY.GET_ENTITY_COORDS(PLAYER.PLAYER_PED_ID())
                                local ped_pos = ENTITY.GET_ENTITY_COORDS(peds)
                                if (PED.GET_RELATIONSHIP_BETWEEN_PEDS(peds, PLAYER.PLAYER_PED_ID()) == 4 or PED.GET_RELATIONSHIP_BETWEEN_PEDS(peds, PLAYER.PLAYER_PED_ID()) == 5) and calcDistance(selfpos, ped_pos) <= npcctrlr:get_value() and peds ~= PLAYER.PLAYER_PED_ID() then 
                                    GRAPHICS.REQUEST_STREAMED_TEXTURE_DICT("golfputting", true)
                                    local tarm = ped_pos
                                    GRAPHICS.DRAW_MARKER(3, tarm.x, tarm.y, tarm.z, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.1, 190.0, 255, 255, 255, 100, false, true, 2, false, 'golfputting', 'puttingmarker')
                                end
                            end
                        end                    end)


   script.register_looped("被NPC瞄准自动反击", function() 

                        if  aimreact:is_enabled() then --控制NPC瞄准惩罚1-中断
                            local pedtable = entities.get_all_peds_as_handles()
                            for _, peds in pairs(pedtable) do
                                local selfpos = ENTITY.GET_ENTITY_COORDS(PLAYER.PLAYER_PED_ID())
                                local ped_pos = ENTITY.GET_ENTITY_COORDS(peds)
                                if PED.IS_PED_FACING_PED(peds, PLAYER.PLAYER_PED_ID(), 2) and ENTITY.HAS_ENTITY_CLEAR_LOS_TO_ENTITY(peds, PLAYER.PLAYER_PED_ID(), 17) and calcDistance(selfpos, ped_pos) <= npcaimprange:get_value()  and PED.GET_PED_CONFIG_FLAG(peds, 78, true) then 
                                    TASK.CLEAR_PED_TASKS_IMMEDIATELY(peds)
                                end
                            end
                        end

                        if  aimreact1:is_enabled() then --控制NPC瞄准惩罚2 -摔倒
                            local pedtable = entities.get_all_peds_as_handles()
                            for _, peds in pairs(pedtable) do
                                local selfpos = ENTITY.GET_ENTITY_COORDS(PLAYER.PLAYER_PED_ID())
                                local ped_pos = ENTITY.GET_ENTITY_COORDS(peds)
                                if PED.IS_PED_FACING_PED(peds, PLAYER.PLAYER_PED_ID(), 2) and ENTITY.HAS_ENTITY_CLEAR_LOS_TO_ENTITY(peds, PLAYER.PLAYER_PED_ID(), 17) and calcDistance(selfpos, ped_pos) <= npcaimprange:get_value()  and PED.GET_PED_CONFIG_FLAG(peds, 78, true) then 
                                    PED.SET_PED_TO_RAGDOLL(peds, 5000, 0,0 , false, false, false)
                                end
                            end
                        end

                        if  aimreact2:is_enabled() then --控制NPC瞄准惩罚3 -死亡
                            local pedtable = entities.get_all_peds_as_handles()
                            for _, peds in pairs(pedtable) do
                                local selfpos = ENTITY.GET_ENTITY_COORDS(PLAYER.PLAYER_PED_ID())
                                local ped_pos = ENTITY.GET_ENTITY_COORDS(peds)
                                if PED.IS_PED_FACING_PED(peds, PLAYER.PLAYER_PED_ID(), 2) and ENTITY.HAS_ENTITY_CLEAR_LOS_TO_ENTITY(peds, PLAYER.PLAYER_PED_ID(), 17) and calcDistance(selfpos, ped_pos) <= npcaimprange:get_value()  and PED.GET_PED_CONFIG_FLAG(peds, 78, true) then 
                                    ENTITY.SET_ENTITY_HEALTH(peds,0,true)
                                end
                            end
                        end

                        if  aimreact3:is_enabled() then --控制NPC瞄准惩罚3 -燃烧
                            local pedtable = entities.get_all_peds_as_handles()
                            for _, peds in pairs(pedtable) do
                                local selfpos = ENTITY.GET_ENTITY_COORDS(PLAYER.PLAYER_PED_ID())
                                local ped_pos = ENTITY.GET_ENTITY_COORDS(peds)
                                if PED.IS_PED_FACING_PED(peds, PLAYER.PLAYER_PED_ID(), 2) and ENTITY.HAS_ENTITY_CLEAR_LOS_TO_ENTITY(peds, PLAYER.PLAYER_PED_ID(), 17) and calcDistance(selfpos, ped_pos) <= npcaimprange:get_value()  and PED.GET_PED_CONFIG_FLAG(peds, 78, true) then 
                                    FIRE.START_ENTITY_FIRE(peds)
                                    FIRE.START_SCRIPT_FIRE(ped_pos.x, ped_pos.y, ped_pos.z, 25, true)
                                    FIRE.ADD_EXPLOSION(ped_pos.x, ped_pos.y, ped_pos.z, 3, 1, false, false, 0, false);
                                end
                            end
                        end
  
                        if  aimreact4:is_enabled() then --控制NPC瞄准惩罚4 -起飞
                            local pedtable = entities.get_all_peds_as_handles()
                            for _, peds in pairs(pedtable) do
                                local selfpos = ENTITY.GET_ENTITY_COORDS(PLAYER.PLAYER_PED_ID())
                                local ped_pos = ENTITY.GET_ENTITY_COORDS(peds)
                                if PED.IS_PED_FACING_PED(peds, PLAYER.PLAYER_PED_ID(), 2) and ENTITY.HAS_ENTITY_CLEAR_LOS_TO_ENTITY(peds, PLAYER.PLAYER_PED_ID(), 17) and calcDistance(selfpos, ped_pos) <= npcaimprange:get_value()  and PED.GET_PED_CONFIG_FLAG(peds, 78, true) then 
                                    if PED.IS_PED_IN_ANY_VEHICLE(peds) then
                                        tarpensveh = PED.GET_VEHICLE_PED_IS_IN(peds)
                                        ENTITY.APPLY_FORCE_TO_ENTITY(tarpensveh, 3, 0, 0, 2, 0, 0, 0.5, 0, false, false, true, false, false)
                                    else
                                        ENTITY.APPLY_FORCE_TO_ENTITY(peds, 3, 0, 0, 2, 0, 0, 0.5, 0, false, false, true, false, false)
                                    end
                                end
                            end
                        end
    
                        if  aimreact5:is_enabled() then --控制NPC瞄准惩罚5 -收为保镖
                            local pedtable = entities.get_all_peds_as_handles()
                            for _, peds in pairs(pedtable) do
                                local selfpos = ENTITY.GET_ENTITY_COORDS(PLAYER.PLAYER_PED_ID())
                                local ped_pos = ENTITY.GET_ENTITY_COORDS(peds)
                                if PED.IS_PED_FACING_PED(peds, PLAYER.PLAYER_PED_ID(), 2) and ENTITY.HAS_ENTITY_CLEAR_LOS_TO_ENTITY(peds, PLAYER.PLAYER_PED_ID(), 17) and calcDistance(selfpos, ped_pos) <= npcaimprange:get_value()  and PED.GET_PED_CONFIG_FLAG(peds, 78, true) and not PED.IS_PED_DEAD_OR_DYING(peds,1) then 
                                    TASK.CLEAR_PED_TASKS(peds)
                                    PED.SET_PED_AS_GROUP_MEMBER(peds, PED.GET_PED_GROUP_INDEX(PLAYER.PLAYER_PED_ID()))
                                    PED.SET_PED_RELATIONSHIP_GROUP_HASH(peds, PED.GET_PED_RELATIONSHIP_GROUP_HASH(PLAYER.PLAYER_PED_ID()))
                                    PED.SET_PED_NEVER_LEAVES_GROUP(peds, true)
                                    PED.SET_CAN_ATTACK_FRIENDLY(peds, 0, 1)
                                    PED.SET_PED_COMBAT_ABILITY(peds, 2)
                                    PED.SET_PED_CAN_TELEPORT_TO_GROUP_LEADER(peds, PED.GET_PED_GROUP_INDEX(PLAYER.PLAYER_PED_ID()), true)
                                    PED.SET_PED_FLEE_ATTRIBUTES(peds, 512, true)
                                    PED.SET_PED_FLEE_ATTRIBUTES(peds, 1024, true)
                                    PED.SET_PED_FLEE_ATTRIBUTES(peds, 2048, true)
                                    PED.SET_PED_FLEE_ATTRIBUTES(peds, 16384, true)
                                    PED.SET_PED_FLEE_ATTRIBUTES(peds, 131072, true)
                                    PED.SET_PED_FLEE_ATTRIBUTES(peds, 262144, true)
                                    PED.SET_PED_COMBAT_ATTRIBUTES(peds, 5, true)
                                    PED.SET_PED_COMBAT_ATTRIBUTES(peds, 13, true)
                                    PED.SET_PED_CONFIG_FLAG(peds, 394, true)
                                    PED.SET_PED_CONFIG_FLAG(peds, 400, true)
                                    PED.SET_PED_CONFIG_FLAG(peds, 134, true)
                                    WEAPON.GIVE_WEAPON_TO_PED(peds, joaat("weapon_combating_mk2"), 9999, false, false)
                                    PED.SET_PED_ACCURACY(peds,100)
                                    TASK.TASK_COMBAT_HATED_TARGETS_AROUND_PED(PLAYER.PLAYER_PED_ID(), 100, 67108864)
                                    ENTITY.SET_ENTITY_HEALTH(peds,1000,true)
                                    pedblip = HUD.GET_BLIP_FROM_ENTITY(peds)
                                    HUD.REMOVE_BLIP(pedblip)
                                    newblip = HUD.ADD_BLIP_FOR_ENTITY(peds)
                                    HUD.SET_BLIP_AS_FRIENDLY(newblip, true)
                                    HUD.SET_BLIP_AS_SHORT_RANGE(newblip,true)

                                end
                            end
                        end

                        if  aimreact6:is_enabled() then --控制NPC瞄准惩罚6 -移除
                            local pedtable = entities.get_all_peds_as_handles()
                            for _, peds in pairs(pedtable) do
                                local selfpos = ENTITY.GET_ENTITY_COORDS(PLAYER.PLAYER_PED_ID())
                                local ped_pos = ENTITY.GET_ENTITY_COORDS(peds)
                                if PED.IS_PED_FACING_PED(peds, PLAYER.PLAYER_PED_ID(), 2) and ENTITY.HAS_ENTITY_CLEAR_LOS_TO_ENTITY(peds, PLAYER.PLAYER_PED_ID(), 17) and calcDistance(selfpos, ped_pos) <= npcaimprange:get_value()  and PED.GET_PED_CONFIG_FLAG(peds, 78, true) then 
                                    ENTITY.SET_ENTITY_AS_MISSION_ENTITY(peds,true,true) --不执行这个下面会删除失败
                                    ENTITY.DELETE_ENTITY(peds)            
                                end
                            end
                        end

                        if  aimreact7:is_enabled() then --控制NPC瞄准反应7 -光柱标记
                            local pedtable = entities.get_all_peds_as_handles()
                            for _, peds in pairs(pedtable) do
                                local selfpos = ENTITY.GET_ENTITY_COORDS(PLAYER.PLAYER_PED_ID())
                                local ped_pos = ENTITY.GET_ENTITY_COORDS(peds)
                                if PED.IS_PED_FACING_PED(peds, PLAYER.PLAYER_PED_ID(), 2) and ENTITY.HAS_ENTITY_CLEAR_LOS_TO_ENTITY(peds, PLAYER.PLAYER_PED_ID(), 17) and calcDistance(selfpos, ped_pos) <= npcaimprange:get_value()  and PED.GET_PED_CONFIG_FLAG(peds, 78, true) then 
                                    GRAPHICS.REQUEST_STREAMED_TEXTURE_DICT("golfputting", true)
                                    local tarm = ped_pos
                                    GRAPHICS.DRAW_MARKER(3, tarm.x, tarm.y, tarm.z, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.1, 190.0, 255, 255, 255, 100, false, true, 2, false, 'golfputting', 'puttingmarker')
                                end
                            end
                        end                    end)


   script.register_looped("NPC瞄准任何人自动反击", function() 

                    if  aimreactany:is_enabled() then --控制NPC瞄准任何人惩罚1-中断
                        local pedtable = entities.get_all_peds_as_handles()
                        for _, peds in pairs(pedtable) do
                            local selfpos = ENTITY.GET_ENTITY_COORDS(PLAYER.PLAYER_PED_ID())
                            local ped_pos = ENTITY.GET_ENTITY_COORDS(peds)
                            if calcDistance(selfpos, ped_pos) <= npcaimprange:get_value()  and PED.GET_PED_CONFIG_FLAG(peds, 78, true) and peds ~= PLAYER.PLAYER_PED_ID() then 
                                TASK.CLEAR_PED_TASKS_IMMEDIATELY(peds)
                            end
                        end
                    end

                    if  aimreact1any:is_enabled() then --控制NPC瞄准任何人惩罚2 -摔倒
                        local pedtable = entities.get_all_peds_as_handles()
                        for _, peds in pairs(pedtable) do
                            local selfpos = ENTITY.GET_ENTITY_COORDS(PLAYER.PLAYER_PED_ID())
                            local ped_pos = ENTITY.GET_ENTITY_COORDS(peds)
                            if calcDistance(selfpos, ped_pos) <= npcaimprange:get_value()  and PED.GET_PED_CONFIG_FLAG(peds, 78, true) and peds ~= PLAYER.PLAYER_PED_ID() then 
                                PED.SET_PED_TO_RAGDOLL(peds, 5000, 0,0 , false, false, false)
                            end
                        end
                    end

                    if  aimreact2any:is_enabled() then --控制NPC瞄准任何人惩罚3 -死亡
                        local pedtable = entities.get_all_peds_as_handles()
                        for _, peds in pairs(pedtable) do
                            local selfpos = ENTITY.GET_ENTITY_COORDS(PLAYER.PLAYER_PED_ID())
                            local ped_pos = ENTITY.GET_ENTITY_COORDS(peds)
                            if calcDistance(selfpos, ped_pos) <= npcaimprange:get_value()  and PED.GET_PED_CONFIG_FLAG(peds, 78, true) and peds ~= PLAYER.PLAYER_PED_ID() then 
                                ENTITY.SET_ENTITY_HEALTH(peds,0,true)
                            end
                        end
                    end

                    if  aimreact3any:is_enabled() then --控制NPC瞄准任何人惩罚3 -燃烧
                        local pedtable = entities.get_all_peds_as_handles()
                        for _, peds in pairs(pedtable) do
                            local selfpos = ENTITY.GET_ENTITY_COORDS(PLAYER.PLAYER_PED_ID())
                            local ped_pos = ENTITY.GET_ENTITY_COORDS(peds)
                            if calcDistance(selfpos, ped_pos) <= npcaimprange:get_value()  and PED.GET_PED_CONFIG_FLAG(peds, 78, true) and peds ~= PLAYER.PLAYER_PED_ID() then 
                                FIRE.START_ENTITY_FIRE(peds)
                                FIRE.START_SCRIPT_FIRE(ped_pos.x, ped_pos.y, ped_pos.z, 25, true)
                                FIRE.ADD_EXPLOSION(ped_pos.x, ped_pos.y, ped_pos.z, 3, 1, false, false, 0, false);
                            end
                        end
                    end

                    if  aimreact4any:is_enabled() then --控制NPC瞄准任何人惩罚4 -起飞
                        local pedtable = entities.get_all_peds_as_handles()
                        for _, peds in pairs(pedtable) do
                            local selfpos = ENTITY.GET_ENTITY_COORDS(PLAYER.PLAYER_PED_ID())
                            local ped_pos = ENTITY.GET_ENTITY_COORDS(peds)
                            if calcDistance(selfpos, ped_pos) <= npcaimprange:get_value()  and PED.GET_PED_CONFIG_FLAG(peds, 78, true) and peds ~= PLAYER.PLAYER_PED_ID() then 
                                if PED.IS_PED_IN_ANY_VEHICLE(peds) then
                                    tarpensveh = PED.GET_VEHICLE_PED_IS_IN(peds)
                                    ENTITY.APPLY_FORCE_TO_ENTITY(tarpensveh, 3, 0, 0, 2, 0, 0, 0.5, 0, false, false, true, false, false)
                                else
                                    ENTITY.APPLY_FORCE_TO_ENTITY(peds, 3, 0, 0, 2, 0, 0, 0.5, 0, false, false, true, false, false)
                                end
                            end
                        end
                    end

                    if  aimreact5any:is_enabled() then --控制NPC瞄准任何人惩罚4 -收为保镖
                        local pedtable = entities.get_all_peds_as_handles()
                        for _, peds in pairs(pedtable) do
                            local selfpos = ENTITY.GET_ENTITY_COORDS(PLAYER.PLAYER_PED_ID())
                            local ped_pos = ENTITY.GET_ENTITY_COORDS(peds)
                            if calcDistance(selfpos, ped_pos) <= npcaimprange:get_value()  and PED.GET_PED_CONFIG_FLAG(peds, 78, true) and peds ~= PLAYER.PLAYER_PED_ID() and not PED.IS_PED_DEAD_OR_DYING(peds,1) then 
                                TASK.CLEAR_PED_TASKS(peds)
                                PED.SET_PED_AS_GROUP_MEMBER(peds, PED.GET_PED_GROUP_INDEX(PLAYER.PLAYER_PED_ID()))
                                PED.SET_PED_RELATIONSHIP_GROUP_HASH(peds, PED.GET_PED_RELATIONSHIP_GROUP_HASH(PLAYER.PLAYER_PED_ID()))
                                PED.SET_PED_NEVER_LEAVES_GROUP(peds, true)
                                PED.SET_CAN_ATTACK_FRIENDLY(peds, 0, 1)
                                PED.SET_PED_COMBAT_ABILITY(peds, 2)
                                PED.SET_PED_CAN_TELEPORT_TO_GROUP_LEADER(peds, PED.GET_PED_GROUP_INDEX(PLAYER.PLAYER_PED_ID()), true)
                                PED.SET_PED_FLEE_ATTRIBUTES(peds, 512, true)
                                PED.SET_PED_FLEE_ATTRIBUTES(peds, 1024, true)
                                PED.SET_PED_FLEE_ATTRIBUTES(peds, 2048, true)
                                PED.SET_PED_FLEE_ATTRIBUTES(peds, 16384, true)
                                PED.SET_PED_FLEE_ATTRIBUTES(peds, 131072, true)
                                PED.SET_PED_FLEE_ATTRIBUTES(peds, 262144, true)
                                PED.SET_PED_COMBAT_ATTRIBUTES(peds, 5, true)
                                PED.SET_PED_COMBAT_ATTRIBUTES(peds, 13, true)
                                PED.SET_PED_CONFIG_FLAG(peds, 394, true)
                                PED.SET_PED_CONFIG_FLAG(peds, 400, true)
                                PED.SET_PED_CONFIG_FLAG(peds, 134, true)
                                WEAPON.GIVE_WEAPON_TO_PED(peds, joaat("weapon_combating_mk2"), 9999, false, false)
                                PED.SET_PED_ACCURACY(peds,100)
                                TASK.TASK_COMBAT_HATED_TARGETS_AROUND_PED(PLAYER.PLAYER_PED_ID(), 100, 67108864)
                                ENTITY.SET_ENTITY_HEALTH(peds,1000,true)
                                pedblip = HUD.GET_BLIP_FROM_ENTITY(peds)
                                HUD.REMOVE_BLIP(pedblip)
                                newblip = HUD.ADD_BLIP_FOR_ENTITY(peds)
                                HUD.SET_BLIP_AS_FRIENDLY(newblip, true)
                                HUD.SET_BLIP_AS_SHORT_RANGE(newblip,true)
                            end
                        end
                    end

                    if  aimreact6any:is_enabled() then --控制NPC瞄准任何人惩罚6 -移除
                        local pedtable = entities.get_all_peds_as_handles()
                        for _, peds in pairs(pedtable) do
                            local selfpos = ENTITY.GET_ENTITY_COORDS(PLAYER.PLAYER_PED_ID())
                            local ped_pos = ENTITY.GET_ENTITY_COORDS(peds)
                            if calcDistance(selfpos, ped_pos) <= npcaimprange:get_value()  and PED.GET_PED_CONFIG_FLAG(peds, 78, true) and peds ~= PLAYER.PLAYER_PED_ID() then 
                                ENTITY.SET_ENTITY_AS_MISSION_ENTITY(peds,true,true) --不执行这个下面会删除失败
                                ENTITY.DELETE_ENTITY(peds)            
                            end
                        end
                    end                end)




   script.register_looped("其它选项", function() 

            if checkbypassconv:is_enabled() then  --跳过NPC对话
                if AUDIO.IS_SCRIPTED_CONVERSATION_ONGOING() then
                    AUDIO.STOP_SCRIPTED_CONVERSATION(false)
                end            end

            if  npcvehbr:is_enabled() then --控制NPC载具倒行
                for _, ped in pairs(entities.get_all_peds_as_handles()) do
                    local veh = 0
                    if not PED.IS_PED_A_PLAYER(ped) then 
                        veh = PED.GET_VEHICLE_PED_IS_IN(ped, true)
                        if veh ~= 0 and VEHICLE.GET_PED_IN_VEHICLE_SEAT(veh, -1) == ped then 
                            --request_control_of_entity(ped)
                            TASK.SET_DRIVE_TASK_DRIVING_STYLE(ped, 1471)
                        end
                    end
                end            end

            if  fakeban1:is_enabled() then --虚假的封号警告
                HUD.SET_WARNING_MESSAGE_WITH_HEADER_AND_SUBSTRING_FLAGS("WARN","JL_INVITE_ND",2,"",true,-1,-1,"您已被永久禁止进入 Grand Theft Auto 在线模式。","返回 Grand Theft Auto V。",true,0)            end

            if  disalight:is_enabled() then --控制世界灯光开关
                if BLSJDG == 0 then
                    GRAPHICS.SET_ARTIFICIAL_LIGHTS_STATE(true)
                end
                BLSJDG = 1
            else
                if BLSJDG == 1 then   
                    GRAPHICS.SET_ARTIFICIAL_LIGHTS_STATE(false)
                    BLSJDG = 0
                end
            end

            if  taxisvs:is_enabled() then---------------------------------------线上出租车工作自动化(连续传送)
                local psgcrd = ENTITY.GET_OFFSET_FROM_ENTITY_IN_WORLD_COORDS(HUD.GET_BLIP_INFO_ID_ENTITY_INDEX(HUD.GET_CLOSEST_BLIP_INFO_ID(280)), 0, 6, 0)
                if HUD.DOES_BLIP_EXIST(HUD.GET_CLOSEST_BLIP_INFO_ID(280)) then
                    if psgcrd.x ~= 0 then
                        log.info("发现乘客")
                        script_util:sleep(500)
                        PED.SET_PED_COORDS_KEEP_VEHICLE(PLAYER.PLAYER_PED_ID(), psgcrd.x, psgcrd.y, psgcrd.z, false, false, false, false)
                        script_util:sleep(1000)
                        PAD.SET_CONTROL_VALUE_NEXT_FRAME(0, 86, 1)
                        log.info("乘客将加速上车")
                        local pedtable = entities.get_all_peds_as_handles()
                        for _, peds in pairs(pedtable) do
                            local selfpos = ENTITY.GET_ENTITY_COORDS(PLAYER.PLAYER_PED_ID())
                            local ped_pos = ENTITY.GET_ENTITY_COORDS(peds)
                            if calcDistance(selfpos, ped_pos) <= 15 and peds ~= PLAYER.PLAYER_PED_ID() then 
                                PED.SET_PED_MOVE_RATE_OVERRIDE(ped, 50.0)
                            end
                        end
                        while HUD.DOES_BLIP_EXIST(HUD.GET_CLOSEST_BLIP_INFO_ID(280)) do
                            script_util:yield()
                        end
                        log.info("乘客已上车")
                        script_util:sleep(500)
                        command.call("objectivetp",{}) --调用Yimmenu自身传送到目标点命令
                        log.info("传送到目的地")
                        delms = math.random(taximina, taximaxa)
                        log.info(delms.."毫秒后执行下一轮出租车工作")
                        script_util:sleep(delms)
                    end
                else
                end
                end

            if  taxisvs2:is_enabled() then---------------------------------------线上出租车工作自动化(仿真驾驶)
                local psgcrd = ENTITY.GET_OFFSET_FROM_ENTITY_IN_WORLD_COORDS(HUD.GET_BLIP_INFO_ID_ENTITY_INDEX(HUD.GET_CLOSEST_BLIP_INFO_ID(280)), 0, 6, 0)
                if HUD.DOES_BLIP_EXIST(HUD.GET_CLOSEST_BLIP_INFO_ID(280)) then
                    if psgcrd.x ~= 0 then
                        log.info("发现乘客,正在驾驶前往.按下Shift可立即传送跳过")
                        script_util:sleep(500)
                        local vehselfisin = ENTITY.GET_ENTITY_MODEL(vehicle)
                        local ped = PLAYER.PLAYER_PED_ID()
                        local vehicle = PED.GET_VEHICLE_PED_IS_IN(ped)
                        local psgcrd = ENTITY.GET_OFFSET_FROM_ENTITY_IN_WORLD_COORDS(HUD.GET_BLIP_INFO_ID_ENTITY_INDEX(HUD.GET_CLOSEST_BLIP_INFO_ID(280)), 0, 6, 0)
                        PED.SET_DRIVER_ABILITY(ped, 1.0)
                        PED.SET_DRIVER_AGGRESSIVENESS(ped, 0.6)
                        PED.SET_BLOCKING_OF_NON_TEMPORARY_EVENTS(ped, true)
                        TASK.TASK_SET_BLOCKING_OF_NON_TEMPORARY_EVENTS(ped, true)
                        TASK.TASK_VEHICLE_DRIVE_TO_COORD(ped, vehicle, psgcrd.x, psgcrd.y, psgcrd.z, 200, 1.0, vehselfisin, 787004, 5.0, 1.0) 
                        script_util:sleep(1500)
                        while calcDistance(ENTITY.GET_ENTITY_COORDS(PLAYER.PLAYER_PED_ID()), ENTITY.GET_OFFSET_FROM_ENTITY_IN_WORLD_COORDS(HUD.GET_BLIP_INFO_ID_ENTITY_INDEX(HUD.GET_CLOSEST_BLIP_INFO_ID(280)), 0, 6, 0)) >= 15 and not ENTITY.IS_ENTITY_STATIC(PED.GET_VEHICLE_PED_IS_IN(PLAYER.PLAYER_PED_ID())) do
                            if PAD.IS_CONTROL_PRESSED(0, 352)  then --按下Shift
                                PED.SET_PED_COORDS_KEEP_VEHICLE(PLAYER.PLAYER_PED_ID(), psgcrd.x, psgcrd.y, psgcrd.z, false, false, false, false)
                                script_util:sleep(1500)
                                PAD.SET_CONTROL_VALUE_NEXT_FRAME(0, 86, 1)
                            end
                            script_util:yield()
                        end
                        script_util:sleep(1500)
                        PAD.SET_CONTROL_VALUE_NEXT_FRAME(0, 86, 1)
                        while HUD.DOES_BLIP_EXIST(HUD.GET_CLOSEST_BLIP_INFO_ID(280)) do
                            if PAD.IS_CONTROL_PRESSED(0, 352)  then --按下Shift
                                PED.SET_PED_COORDS_KEEP_VEHICLE(PLAYER.PLAYER_PED_ID(), psgcrd.x, psgcrd.y, psgcrd.z, false, false, false, false)
                                script_util:sleep(1500)
                                PAD.SET_CONTROL_VALUE_NEXT_FRAME(0, 86, 1)
                            end
                            script_util:yield()
                        end
                        log.info("乘客已上车")
                        script_util:sleep(1500)
                        objcrd = HUD.GET_BLIP_COORDS(HUD.GET_FIRST_BLIP_INFO_ID(1))

                        local vehselfisin = ENTITY.GET_ENTITY_MODEL(vehicle)
                        local ped = PLAYER.PLAYER_PED_ID()
                        local vehicle = PED.GET_VEHICLE_PED_IS_IN(ped)
                        local psgcrd = ENTITY.GET_OFFSET_FROM_ENTITY_IN_WORLD_COORDS(HUD.GET_BLIP_INFO_ID_ENTITY_INDEX(HUD.GET_CLOSEST_BLIP_INFO_ID(280)), 0, 6, 0)
                        PED.SET_DRIVER_ABILITY(ped, 1.0)
                        PED.SET_DRIVER_AGGRESSIVENESS(ped, 0.6)
                        PED.SET_BLOCKING_OF_NON_TEMPORARY_EVENTS(ped, true)
                        TASK.TASK_SET_BLOCKING_OF_NON_TEMPORARY_EVENTS(ped, true)
                        TASK.TASK_VEHICLE_DRIVE_TO_COORD(ped, vehicle, objcrd.x, objcrd.y, objcrd.z, 200, 1.0, vehselfisin, 787004, 5.0, 1.0) 
                        script_util:sleep(1500)
                        log.info("正在自动驾驶前往目的地,按下shift可立即传送跳过")
                        while calcDistance(ENTITY.GET_ENTITY_COORDS(PLAYER.PLAYER_PED_ID()), HUD.GET_BLIP_COORDS(HUD.GET_FIRST_BLIP_INFO_ID(1))) >= 15 and not ENTITY.IS_ENTITY_STATIC(PED.GET_VEHICLE_PED_IS_IN(PLAYER.PLAYER_PED_ID())) do
                            if PAD.IS_CONTROL_PRESSED(0, 352)  then --按下Shift
                                command.call("objectivetp",{}) --调用Yimmenu自身传送到目标点命令
                            end
                            script_util:yield()
                        end
                        if HUD.DOES_BLIP_EXIST(HUD.GET_FIRST_BLIP_INFO_ID(1)) then
                            log.info("自动驾驶未能精准到达目的地,将使用传送补救")
                            command.call("objectivetp",{}) --调用Yimmenu自身传送到目标点命令
                        end
                        delms = math.random(taximina, taximaxa)
                        log.info(delms.."毫秒后执行下一轮出租车工作")
                        script_util:sleep(delms)
                    end
                else
                end
                end

            if  checkfootaudio:is_enabled() then --控制自己是否产生脚步声
                AUDIO.SET_PED_FOOTSTEPS_EVENTS_ENABLED(PLAYER.PLAYER_PED_ID(),false)
                if BLZJJBS == 0 then --这段代码只会在开启开关时执行一次，而不是循环
                    gui.show_message("脚步声控制","静音")
                end
                BLZJJBS = 1
            else
                if BLZJJBS == 1 then     --这段代码只会在关掉开关时执行一次，而不是循环               
                AUDIO.SET_PED_FOOTSTEPS_EVENTS_ENABLED(PLAYER.PLAYER_PED_ID(),true)
                gui.show_message("脚步声控制","有声")
                BLZJJBS = 0
                end
            end

            if  checkpedaudio:is_enabled() then --控制自己的PED是否产生声音
                PLAYER.SET_PLAYER_NOISE_MULTIPLIER(PLAYER.PLAYER_ID(), 0.0)
                if BLPEDJBS == 0 then
                    gui.show_message("PED声音控制","静音")
                end
                BLPEDJBS = 1
            else
                if BLPEDJBS == 1 then                    
                PLAYER.SET_PLAYER_NOISE_MULTIPLIER(PLAYER.PLAYER_ID(), 1.0)
                gui.show_message("PED声音控制","有声")
                BLPEDJBS = 0
                end
            end
        
            if  disableAIdmg:is_enabled() then --覆写NPC伤害
                PED.SET_AI_WEAPON_DAMAGE_MODIFIER(0.0)
                PED.SET_AI_MELEE_WEAPON_DAMAGE_MODIFIER(0.0)
                BLLSH = 1
            else
            if BLLSH == 1 then 
                PED.RESET_AI_WEAPON_DAMAGE_MODIFIER()
                PED.RESET_AI_MELEE_WEAPON_DAMAGE_MODIFIER()
                gui.show_message("提示","NPC伤害已还原")
            BLLSH = 0
            end
            end

            if  lockmapang:is_enabled() then --锁定小地图角度
                if BLSDXTD == 0 then  --这段代码只会在开启开关时执行一次，而不是循环
                    HUD.LOCK_MINIMAP_ANGLE(0)
                    gui.show_message("锁定小地图角度","开启")
                end
                BLSDXTD = 1
            else
                if BLSDXTD == 1 then   
                    HUD.UNLOCK_MINIMAP_ANGLE()        
                    gui.show_message("锁定小地图角度","关闭")
                    BLSDXTD = 0
                end
            end

            if  checkSONAR:is_enabled() then --控制声纳开关
                if BLSNKG == 0 then  --这段代码只会在开启开关时执行一次，而不是循环
                    HUD.SET_MINIMAP_SONAR_SWEEP(true)
                    gui.show_message("声纳","开启")
                end
                BLSNKG = 1
            else
                if BLSNKG == 1 then   
                    HUD.SET_MINIMAP_SONAR_SWEEP(false)        
                    gui.show_message("声纳","关闭")
                    BLSNKG = 0
                end
            end
    
            if  pedgun:is_enabled() then --NPC枪
                local pos = ENTITY.GET_ENTITY_COORDS(PLAYER.PLAYER_PED_ID())
                local camrot = CAM.GET_GAMEPLAY_CAM_ROT(0)  
                if PED.IS_PED_SHOOTING(PLAYER.PLAYER_PED_ID()) then 
                    peds = PED.CREATE_RANDOM_PED(pos.x, pos.y, pos.z)    
                    ENTITY.SET_ENTITY_ROTATION(peds, camrot.x, camrot.y, camrot.z, 1, false)    
                    ENTITY.APPLY_FORCE_TO_ENTITY_CENTER_OF_MASS(peds, 1, 0, 1000, 0, false, true, true, true)
                    ENTITY.SET_ENTITY_HEALTH(peds,1000,true)
                end            end

            if  bsktgun:is_enabled() then --篮球枪
                local pos = ENTITY.GET_ENTITY_COORDS(PLAYER.PLAYER_PED_ID())
                local camrot = CAM.GET_GAMEPLAY_CAM_ROT(0)
                objhash = joaat("prop_bskball_01")
                while not STREAMING.HAS_MODEL_LOADED(objhash) do		
                    STREAMING.REQUEST_MODEL(objhash)
                    script_util:yield()
                end
                if PED.IS_PED_SHOOTING(PLAYER.PLAYER_PED_ID()) then 
                    bskt = OBJECT.CREATE_OBJECT(objhash,pos.x, pos.y, pos.z, true, true, false)
                    ENTITY.SET_ENTITY_ROTATION(bskt, camrot.x, camrot.y, camrot.z, 1, false)    
                    ENTITY.APPLY_FORCE_TO_ENTITY_CENTER_OF_MASS(bskt, 1, 0, 1000, 0, false, true, true, true)
                end    end

            if  bballgun:is_enabled() then --大球枪
                local pos = ENTITY.GET_ENTITY_COORDS(PLAYER.PLAYER_PED_ID())
                local camrot = CAM.GET_GAMEPLAY_CAM_ROT(0)
                objhash = joaat("v_ilev_exball_blue")
                while not STREAMING.HAS_MODEL_LOADED(objhash) do		
                    STREAMING.REQUEST_MODEL(objhash)
                    script_util:yield()
                end
                if PED.IS_PED_SHOOTING(PLAYER.PLAYER_PED_ID()) then 
                    bskt = OBJECT.CREATE_OBJECT(objhash,pos.x, pos.y, pos.z, true, true, false)
                    ENTITY.SET_ENTITY_ROTATION(bskt, camrot.x, camrot.y, camrot.z, 1, false)    
                    ENTITY.APPLY_FORCE_TO_ENTITY_CENTER_OF_MASS(bskt, 1, 0, 1000, 0, false, true, true, true)
                end            end

            if  drawcs:is_enabled() then --绘制准星
                HUD.BEGIN_TEXT_COMMAND_DISPLAY_TEXT("STRING") --The following were found in the decompiled script files: STRING, TWOSTRINGS, NUMBER, PERCENTAGE, FO_TWO_NUM, ESMINDOLLA, ESDOLLA, MTPHPER_XPNO, AHD_DIST, CMOD_STAT_0, CMOD_STAT_1, CMOD_STAT_2, CMOD_STAT_3, DFLT_MNU_OPT, F3A_TRAFDEST, ES_HELP_SOC3
                HUD.SET_TEXT_FONT(0)
                HUD.SET_TEXT_SCALE(0.3, 0.3) --Size range : 0F to 1.0F --p0 is unknown and doesn't seem to have an effect, yet in the game scripts it changes to 1.0F sometimes.
                HUD.SET_TEXT_OUTLINE()
                HUD.SET_TEXT_CENTRE(1)
                HUD.ADD_TEXT_COMPONENT_SUBSTRING_PLAYER_NAME(string.format("+"))
                HUD.END_TEXT_COMMAND_DISPLAY_TEXT(0.5,0.485) --占坐标轴的比例
            end

            if  disablecops:is_enabled() then --控制是否派遣警察
                PLAYER.SET_DISPATCH_COPS_FOR_PLAYER(PLAYER.PLAYER_ID(), false)
                BLJCTD = 1
            else
                if BLJCTD == 1 then 
                PLAYER.SET_DISPATCH_COPS_FOR_PLAYER(PLAYER.PLAYER_ID(), true)
                gui.show_message("提示","通缉时会派遣警察")
                BLJCTD = 0
                end
            end

            if  disapedheat:is_enabled() then --控制是否存在热量
                if BLPEDRL == 0 then 
                    PED.SET_PED_HEATSCALE_OVERRIDE(PLAYER.PLAYER_ID(), 0)
                    BLPEDRL = 1
                end
            else
                if BLPEDRL == 1 then 
                    PED.SET_PED_HEATSCALE_OVERRIDE(PLAYER.PLAYER_ID(), 1)
                    BLPEDRL = 0
                end
            end

            if  canafrdly:is_enabled() then --控制是否允许攻击队友
                if BLGJDY == 0 then 
                    PED.SET_CAN_ATTACK_FRIENDLY(PLAYER.PLAYER_ID(), true, false)
                    BLGJDY = 1
                end
            else
                if BLGJDY == 1 then 
                    PED.SET_CAN_ATTACK_FRIENDLY(PLAYER.PLAYER_ID(), false, false)
                    BLGJDY = 0
                end
            end

            if  DrawHost:is_enabled() then--显示战局主机
                screen_draw_text(string.format("战局主机:".. PLAYER.GET_PLAYER_NAME(NETWORK.NETWORK_GET_HOST_PLAYER_INDEX())),0.180,0.8, 0.4 , 0.4)
                if SCRIPT.HAS_SCRIPT_LOADED("freemode") then
                freemodehost = NETWORK.NETWORK_GET_HOST_OF_SCRIPT("freemode",-1,0)
                screen_draw_text(string.format("战局脚本主机:".. PLAYER.GET_PLAYER_NAME(freemodehost)),  0.180, 0.828, 0.4 , 0.4)
                end

                if SCRIPT.HAS_SCRIPT_LOADED("fm_mission_controller") or SCRIPT.HAS_SCRIPT_LOADED("fm_mission_controller_2020") then
                    if SCRIPT.HAS_SCRIPT_LOADED("fm_mission_controller") then 
                        fmmchost = NETWORK.NETWORK_GET_HOST_OF_SCRIPT("fm_mission_controller",0,0)
                        screen_draw_text(string.format("任务脚本主机:".. PLAYER.GET_PLAYER_NAME(fmmchost)), 0.180, 0.910, 0.4 , 0.4)
                    end
                    if SCRIPT.HAS_SCRIPT_LOADED("fm_mission_controller") then 
                        fmmc2020host = NETWORK.NETWORK_GET_HOST_OF_SCRIPT("fm_mission_controller_2020",0,0)
                        screen_draw_text(string.format("任务脚本主机:".. PLAYER.GET_PLAYER_NAME(fmmc2020host)), 0.180, 0.910, 0.4 , 0.4)
                    end
                end            end

            if  DrawInteriorID:is_enabled() then--显示玩家ID
                local PlayerPos = ENTITY.GET_OFFSET_FROM_ENTITY_IN_WORLD_COORDS(PLAYER.PLAYER_PED_ID(), 0.0, 0.0, 0.0)
                local Interior = INTERIOR.GET_INTERIOR_AT_COORDS(PlayerPos.x, PlayerPos.y, PlayerPos.z)
                screen_draw_text(string.format("Interior ID:".. Interior),0.875,0.2, 0.4 , 0.4)            end

            if  desync:is_enabled() then --创建新手教程战局以取消与其他玩家同步
                if BLQXTB == 0 then
                    NETWORK.NETWORK_START_SOLO_TUTORIAL_SESSION()
                    gui.show_message("取消同步","将与所有玩家取消同步")
                end
                BLQXTB = 1
            else
                if BLQXTB == 1 then                    
                    NETWORK.NETWORK_END_TUTORIAL_SESSION()
                    gui.show_message("取消同步","关")
                BLQXTB = 0
                end
            end

            if  ptfxrm:is_enabled() then --清理PTFX和火焰效果
                local selfpos = ENTITY.GET_ENTITY_COORDS(PLAYER.PLAYER_PED_ID())
                FIRE.STOP_FIRE_IN_RANGE(selfpos.x, selfpos.y, selfpos.z, 500)
                FIRE.STOP_ENTITY_FIRE(PLAYER.PLAYER_PED_ID())    
                GRAPHICS.REMOVE_PARTICLE_FX_IN_RANGE(selfpos.x, selfpos.y, selfpos.z, 1000)
                GRAPHICS.REMOVE_PARTICLE_FX_FROM_ENTITY(PLAYER.PLAYER_PED_ID())
            else
            end

            if  DECALrm:is_enabled() then --清理弹孔、血渍、油污等表面特征
                local selfpos = ENTITY.GET_ENTITY_COORDS(PLAYER.PLAYER_PED_ID())
                GRAPHICS.REMOVE_DECALS_IN_RANGE(selfpos.x, selfpos.y, selfpos.z, 100)
            else
            end

            if  efxrm:is_enabled() then --阻止镜头抖动、视觉效果滤镜
                GRAPHICS.ANIMPOSTFX_STOP_ALL()
                GRAPHICS.SET_TIMECYCLE_MODIFIER("DEFAULT")
                PED.SET_PED_MOTION_BLUR(PLAYER.PLAYER_PED_ID(), false)
                CAM.SHAKE_GAMEPLAY_CAM("DEATH_FAIL_IN_EFFECT_SHAKE", 0.0)
                CAM.SHAKE_GAMEPLAY_CAM("DRUNK_SHAKE", 0.0)
                CAM.SHAKE_GAMEPLAY_CAM("FAMILY5_DRUG_TRIP_SHAKE", 0.0)
                CAM.SHAKE_GAMEPLAY_CAM("HAND_SHAKE", 0.0)
                CAM.SHAKE_GAMEPLAY_CAM("JOLT_SHAKE", 0.0)
                CAM.SHAKE_GAMEPLAY_CAM("LARGE_EXPLOSION_SHAKE", 0.0)
                CAM.SHAKE_GAMEPLAY_CAM("MEDIUM_EXPLOSION_SHAKE", 0.0)
                CAM.SHAKE_GAMEPLAY_CAM("SMALL_EXPLOSION_SHAKE", 0.0)
                CAM.SHAKE_GAMEPLAY_CAM("ROAD_VIBRATION_SHAKE", 0.0)
                CAM.SHAKE_GAMEPLAY_CAM("SKY_DIVING_SHAKE", 0.0)
                CAM.SHAKE_GAMEPLAY_CAM("VIBRATE_SHAKE", 0.0)    else
            end

            if  emmode2:is_enabled() then
                if PAD.IS_CONTROL_PRESSED(0, 33) and PAD.IS_CONTROL_PRESSED(0, 34) and PAD.IS_CONTROL_PRESSED(0, 36) then 
                    --PAD.IS_CONTROL_PRESSED(0, 33)表示按下键码为33的键时接收一个信号，上面一行表示同时按 33、34、36 时激活这个功能
                    --https://docs.fivem.net/docs/game-references/controls/ 如需自定义，到这个网站查询控制33这样的数字对应的是键盘或手柄上的什么物理按键，替换掉对应的数字即可
                    command.call("joinsession", { 1 })
                    log.info("走为上策,已创建新战局")
                    gui.show_message("走为上策", "已创建新战局")
                end
            end

            if  emmode3:is_enabled() then
                if BLJJMS2 == 0 then 
                    allclear:set_enabled(1)
                    DECALrm:set_enabled(1)
                    efxrm:set_enabled(1)
                    ptfxrm:set_enabled(1)
                    log.info("紧急模式3已开启")
                    BLJJMS2 = 1
                end
            else 
                if BLJJMS2 == 1 then 
                    allclear:set_enabled(nil)
                    DECALrm:set_enabled(nil)
                    efxrm:set_enabled(nil)
                    ptfxrm:set_enabled(nil)
                    log.info("紧急模式3已关闭")
                    BLJJMS2 = 0
                end
            end


            if  emmode:is_enabled() then
                if BLJJMS == 0 and PAD.IS_CONTROL_PRESSED(0, 33) and PAD.IS_CONTROL_PRESSED(0, 36) and PAD.IS_CONTROL_PRESSED(0, 35) then  
                    log.info("紧急模式已开启,与所有玩家取消同步,同时按下WAD关闭")
                    gui.show_message("紧急模式已开启", "与所有玩家取消同步,同时按下WAD关闭")
                    NETWORK.NETWORK_START_SOLO_TUTORIAL_SESSION()
                    selfposen = ENTITY.GET_ENTITY_COORDS(PLAYER.PLAYER_PED_ID())
                    PED.SET_PED_COORDS_KEEP_VEHICLE(PLAYER.PLAYER_PED_ID(), -832, 177, 3000)
                    ENTITY.FREEZE_ENTITY_POSITION(PLAYER.PLAYER_PED_ID(), true)
                    STREAMING.SET_FOCUS_POS_AND_VEL(-400, 5989, 3000, 0.0, 0.0, 0.0)
                    anticcam = CAM.CREATE_CAM("DEFAULT_SCRIPTED_CAMERA", false)
			        CAM.SET_CAM_ACTIVE(anticcam, true)
			        CAM.RENDER_SCRIPT_CAMS(true, true, 500, true, true, false)
                    BLJJMS = 1
                end
                if BLJJMS ==1 then
                    rotation = CAM.GET_GAMEPLAY_CAM_ROT(2)
                    CAM.SET_CAM_ROT(anticcam, rotation.x, rotation.y, rotation.z, 2)
                    CAM.SET_CAM_COORD(anticcam, -400, 5989, 3000)
                    STREAMING.SET_FOCUS_POS_AND_VEL(-400, 5989, 3000, 0.0, 0.0, 0.0)
                end
                if BLJJMS == 1 and PAD.IS_CONTROL_PRESSED(0, 32) and PAD.IS_CONTROL_PRESSED(0, 34) and PAD.IS_CONTROL_PRESSED(0, 35) then  
                    log.info("紧急模式已关闭,恢复同步并移动至原位")
                    gui.show_message("紧急模式已关闭", "恢复同步并移动至原位")
                    PED.SET_PED_COORDS_KEEP_VEHICLE(PLAYER.PLAYER_PED_ID(), selfposen.x, selfposen.y, selfposen.z)
                    NETWORK.NETWORK_END_TUTORIAL_SESSION()
                    ENTITY.FREEZE_ENTITY_POSITION(PLAYER.PLAYER_PED_ID(), false)
                    STREAMING.CLEAR_FOCUS() 
                    CAM.SET_CAM_ACTIVE(anticcam, false)
			        CAM.RENDER_SCRIPT_CAMS(false, true, 500, true, true, 0)
			        CAM.DESTROY_CAM(anticcam, false)
			        STREAMING.CLEAR_FOCUS()    
                    BLJJMS = 0
                end
            else 
                if BLJJMS == 1 then
                    log.info("紧急模式已关闭,恢复同步并移动至原位")
                    gui.show_message("紧急模式已关闭", "恢复同步并移动至原位")
                    PED.SET_PED_COORDS_KEEP_VEHICLE(PLAYER.PLAYER_PED_ID(), selfposen.x, selfposen.y, selfposen.z)
                    NETWORK.NETWORK_END_TUTORIAL_SESSION()
                    ENTITY.FREEZE_ENTITY_POSITION(PLAYER.PLAYER_PED_ID(), false)
                    STREAMING.CLEAR_FOCUS() 
                    CAM.SET_CAM_ACTIVE(anticcam, false)
			        CAM.RENDER_SCRIPT_CAMS(false, true, 500, true, true, 0)
			        CAM.DESTROY_CAM(anticcam, false)
                    BLJJMS = 0
                end
            end

            if  allclear:is_enabled() then --循环清除实体
                for _, ent1221 in pairs(entities.get_all_objects_as_handles()) do
                    ENTITY.SET_ENTITY_AS_MISSION_ENTITY(ent1221,true,true) --不执行这个下面会删除失败
                    ENTITY.DELETE_ENTITY(ent1221)
                end
                for _, ent1222 in pairs(entities.get_all_peds_as_handles()) do
                    ENTITY.SET_ENTITY_AS_MISSION_ENTITY(ent1222,true,true) --不执行这个下面会删除失败
                    ENTITY.DELETE_ENTITY(ent1222)
                end
                for _, ent1223 in pairs(entities.get_all_vehicles_as_handles()) do
                    ENTITY.SET_ENTITY_AS_MISSION_ENTITY(ent1223,true,true) --不执行这个下面会删除失败
                    ENTITY.DELETE_ENTITY(ent1223)
                end
            end        end)



   script.register_looped("玩家选项", function()

                if  spcam:is_enabled() then --控制观看开关
                    local TargetPPos = ENTITY.GET_ENTITY_COORDS(PLAYER.GET_PLAYER_PED(network.get_selected_player()), false)
                    STREAMING.SET_FOCUS_POS_AND_VEL(TargetPPos.x, TargetPPos.y, TargetPPos.z, 0.0, 0.0, 0.0)

                    if BLKZGK == 0 then
                        specam = CAM.CREATE_CAM("DEFAULT_SCRIPTED_CAMERA", false)
			            CAM.SET_CAM_ACTIVE(specam, true)
			            CAM.RENDER_SCRIPT_CAMS(true, true, 500, true, true, false)
                        BLKZGK = 1
                    end
                    rotation = CAM.GET_GAMEPLAY_CAM_ROT(2)
                    CAM.SET_CAM_ROT(specam, rotation.x, rotation.y, rotation.z, 2)
                    CAM.SET_CAM_COORD(specam, TargetPPos.x, TargetPPos.y, TargetPPos.z+5)
                else
                    if BLKZGK == 1 then     
                        CAM.SET_CAM_ACTIVE(specam, false)
			            CAM.RENDER_SCRIPT_CAMS(false, true, 500, true, true, 0)
			            CAM.DESTROY_CAM(specam, false)
			            STREAMING.CLEAR_FOCUS()    
                        BLKZGK = 0
                    end
                end

                if  plymk:is_enabled() then --控制玩家光柱标记开关
                    local TargetPPos = ENTITY.GET_ENTITY_COORDS(PLAYER.GET_PLAYER_PED(network.get_selected_player()), false)
                    GRAPHICS.REQUEST_STREAMED_TEXTURE_DICT("golfputting", true)
                    local tarm = TargetPPos
                    GRAPHICS.DRAW_MARKER(3, tarm.x, tarm.y, tarm.z, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 190.0, 255, 255, 255, 100, false, true, 2, false, 'golfputting', 'puttingmarker')    end

                if  plyline:is_enabled() then --控制玩家连线标记开关
                    local TargetPPos = ENTITY.GET_ENTITY_COORDS(PLAYER.GET_PLAYER_PED(network.get_selected_player()), false)
                    local selfpos = ENTITY.GET_OFFSET_FROM_ENTITY_IN_WORLD_COORDS(PLAYER.PLAYER_PED_ID(), 0.0, 0.52, 0.0)
                    GRAPHICS.DRAW_LINE(selfpos.x, selfpos.y, selfpos.z, TargetPPos.x, TargetPPos.y, TargetPPos.z, 255, 255, 255, 100)                    end

                if  checkxsdpednet:is_enabled() then --NPC掉落2000元循环    --玩家选项
                    if PLAYER.GET_PLAYER_PED(network.get_selected_player()) ~= PLAYER.PLAYER_PED_ID() then --避免目标离开战局后作用于自己
                        PED.SET_AMBIENT_PEDS_DROP_MONEY(true) --自由模式NPC是否掉钱
                        local TargetPPos = ENTITY.GET_ENTITY_COORDS(PLAYER.GET_PLAYER_PED(network.get_selected_player()), false)
                        TargetPPos.z = TargetPPos.z + 10 --让 席桑达 生成在空中然后摔下来
                        STREAMING.REQUEST_MODEL(3552233440)
                        local netxsdPed = PED.CREATE_PED(28, 3552233440, TargetPPos.x, TargetPPos.y, TargetPPos.z, 0, true, true)--刷出的NPC是 席桑达
                        PED.SET_PED_MONEY(netxsdPed,2000) --上限就是2000,不能超过
                        ENTITY.SET_ENTITY_HEALTH(netxsdPed,1,true)--刷出的NPC 席桑达 血量只有 1
                        script_util:sleep(300) --间隔 300 毫秒

                    else
                        gui.show_message("已停止", "目标不能是自己!")
                        checkxsdpednet:set_enabled(nil) --目标是自己，自动关掉开关
                    end                end

                if  vehgodr:is_enabled() then --控制远程载具无敌
                    if BLKZZJWD == 0 then
                        if not PED.IS_PED_IN_ANY_VEHICLE(PLAYER.GET_PLAYER_PED(network.get_selected_player()),true) then
                            gui.show_error("警告","玩家不在载具内")
                            vehgodr:set_enabled(nil)
                            BLKZZJWD = 0
                        else
                            tarveh = PED.GET_VEHICLE_PED_IS_IN(PLAYER.GET_PLAYER_PED(network.get_selected_player()))
                            if not NETWORK.NETWORK_HAS_CONTROL_OF_ENTITY(tarveh)  then --先请求控制才能 修改其他玩家的载具状态
                                local netid = NETWORK.NETWORK_GET_NETWORK_ID_FROM_ENTITY(tarveh)
                                NETWORK.SET_NETWORK_ID_CAN_MIGRATE(netid, true)
                                local time = os.time()
                                while not NETWORK.NETWORK_HAS_CONTROL_OF_ENTITY(tarveh) do
                                    if os.time() - time >= 5 then
                                        break
                                    end
                                    NETWORK.NETWORK_REQUEST_CONTROL_OF_ENTITY(tarveh)
                                    script_util:yield()
                                end
                            end
                            --如果未被作弊者拦截,理论上应该请求控制成功了
                            ENTITY.SET_ENTITY_PROOFS(tarveh, true, true, true, true, true, 0, 0, true) --似乎没啥用...
                            ENTITY.SET_ENTITY_INVINCIBLE(tarveh, true)
                            VEHICLE.SET_VEHICLE_CAN_BE_VISIBLY_DAMAGED(tarveh, false)
                            gui.show_message("载具无敌","已应用")
                            BLKZZJWD = 1
                        end
                    end
                else
                    if BLKZZJWD == 1 then   
                        if not PED.IS_PED_IN_ANY_VEHICLE(PLAYER.GET_PLAYER_PED(network.get_selected_player()),true) then
                            gui.show_error("警告","玩家不在载具内")
                            vehgodr:set_enabled(nil)
                            BLKZZJWD = 0
                        else
                            tarveh = PED.GET_VEHICLE_PED_IS_IN(PLAYER.GET_PLAYER_PED(network.get_selected_player()))
                            if not NETWORK.NETWORK_HAS_CONTROL_OF_ENTITY(tarveh)  then
                                local netid = NETWORK.NETWORK_GET_NETWORK_ID_FROM_ENTITY(tarveh)
                                NETWORK.SET_NETWORK_ID_CAN_MIGRATE(netid, true)
                                local time = os.time()
                                while not NETWORK.NETWORK_HAS_CONTROL_OF_ENTITY(tarveh) do
                                    if os.time() - time >= 5 then
                                        break
                                    end
                                    NETWORK.NETWORK_REQUEST_CONTROL_OF_ENTITY(tarveh)
                                    script_util:yield()
                                end
                            end
                            ENTITY.SET_ENTITY_PROOFS(tarveh, false, false, false, false, false, 0, 0, false)
                            ENTITY.SET_ENTITY_INVINCIBLE(tarveh, false)
                            VEHICLE.SET_VEHICLE_CAN_BE_VISIBLY_DAMAGED(tarveh, true)
                            gui.show_message("载具无敌","已撤销")
                            BLKZZJWD = 0
                        end
                    end
                end

                if  vehnoclr:is_enabled() then --控制远程载具无碰撞
                    if BLKZZJWPZ == 0 then
                        if not PED.IS_PED_IN_ANY_VEHICLE(PLAYER.GET_PLAYER_PED(network.get_selected_player()),true) then
                            gui.show_error("警告","玩家不在载具内")
                            vehnoclr:set_enabled(nil)
                            BLKZZJWD = 0
                        else
                            local tarveh2 = PED.GET_VEHICLE_PED_IS_IN(PLAYER.GET_PLAYER_PED(network.get_selected_player()))
                            if not NETWORK.NETWORK_HAS_CONTROL_OF_ENTITY(tarveh2)  then
                                local netid = NETWORK.NETWORK_GET_NETWORK_ID_FROM_ENTITY(tarveh2)
                                NETWORK.SET_NETWORK_ID_CAN_MIGRATE(netid, true)
                                local time = os.time()
                                while not NETWORK.NETWORK_HAS_CONTROL_OF_ENTITY(tarveh2) do
                                    if os.time() - time >= 5 then
                                        break
                                    end
                                    NETWORK.NETWORK_REQUEST_CONTROL_OF_ENTITY(tarveh2)
                                    script_util:yield()
                                end
                            end
                            ENTITY.SET_ENTITY_COLLISION(tarveh2,false,false)
                            gui.show_message("载具无碰撞","已应用")
                            BLKZZJWPZ = 1
                        end
                    end
                else
                    if BLKZZJWPZ == 1 then
                        if not PED.IS_PED_IN_ANY_VEHICLE(PLAYER.GET_PLAYER_PED(network.get_selected_player()),true) then
                            gui.show_error("警告","玩家不在载具内")
                            vehnoclr:set_enabled(nil)
                            BLKZZJWPZ = 0
                        else
                            tarveh2 = PED.GET_VEHICLE_PED_IS_IN(PLAYER.GET_PLAYER_PED(network.get_selected_player()))
                            if not NETWORK.NETWORK_HAS_CONTROL_OF_ENTITY(tarveh2)  then
                                local netid = NETWORK.NETWORK_GET_NETWORK_ID_FROM_ENTITY(tarveh2)
                                NETWORK.SET_NETWORK_ID_CAN_MIGRATE(netid, true)
                                local time = os.time()
                                while not NETWORK.NETWORK_HAS_CONTROL_OF_ENTITY(tarveh2) do
                                    if os.time() - time >= 5 then
                                        break
                                    end
                                    NETWORK.NETWORK_REQUEST_CONTROL_OF_ENTITY(tarveh2)
                                    script_util:yield()
                                end
                            end
                            ENTITY.SET_ENTITY_COLLISION(tarveh2,true,true)
                            gui.show_message("载具无碰撞","已撤销")
                            BLKZZJWPZ = 0
                        end
                    end
                end

                if  pedvehctl:is_enabled() then --玩家选项-载具旋转
                    if not PED.IS_PED_IN_ANY_VEHICLE(PLAYER.GET_PLAYER_PED(network.get_selected_player()),true) then
                        gui.show_error("警告","玩家不在载具内")
                    else
                        tarveh = PED.GET_VEHICLE_PED_IS_IN(PLAYER.GET_PLAYER_PED(network.get_selected_player()))
                        if not NETWORK.NETWORK_HAS_CONTROL_OF_ENTITY(tarveh)  then
                            local netid = NETWORK.NETWORK_GET_NETWORK_ID_FROM_ENTITY(tarveh)
                            NETWORK.SET_NETWORK_ID_CAN_MIGRATE(netid, true)
                            local time = os.time()
                            while not NETWORK.NETWORK_HAS_CONTROL_OF_ENTITY(tarveh) do
                                if os.time() - time >= 5 then
                                    break
                                end
                                NETWORK.NETWORK_REQUEST_CONTROL_OF_ENTITY(tarveh)
                                script_util:yield()
                            end
                        end
                        ENTITY.APPLY_FORCE_TO_ENTITY(tarveh, 5, 0, 0, 150.0, 0, 0, 0, 0, true, false, true, false, true)
                    end                end

                if  checkspped:is_enabled() then--刷模型
                    local sppedtarget = PLAYER.GET_PLAYER_PED(network.get_selected_player())
                    if sppedtarget ~= PLAYER.PLAYER_PED_ID() then --避免目标离开战局后作用于自己
                        request_model(0x705E61F2)
                        local pcrds = ENTITY.GET_ENTITY_COORDS(sppedtarget, false)
                        local spped = PED.CREATE_PED(26, 0x705E61F2, pcrds.x, pcrds.y, pcrds.z -1 , 0, true, false)
                        WEAPON.GIVE_WEAPON_TO_PED(spped,-270015777,80,true,true)
                        ENTITY.SET_ENTITY_HEALTH(spped,1000,true)
                        MISC.SET_RIOT_MODE_ENABLED(true)
                        script_util:sleep(30)
                    else
                        gui.show_message("掉Zhen攻击已停止", "你在攻击自己!")
                        checkspped:set_enabled(nil) --目标是自己，自动关掉开关
                    end                end

                if  checkcollection1:is_enabled() then --循环刷纸牌给玩家

                    local coords = ENTITY.GET_ENTITY_COORDS(PLAYER.GET_PLAYER_PED(network.get_selected_player()), false) --获取目标玩家坐标
                    coords.z = coords.z + 2.0
 
                    create_object(joaat("vw_prop_vw_lux_card_01a"),coords)

                    OBJECT.CREATE_AMBIENT_PICKUP(-1009939663, coords.x, coords.y, coords.z, 0, 1, joaat("vw_prop_vw_lux_card_01a"), false, true)                end

                if  check8:is_enabled() then --水柱
                    local coords = ENTITY.GET_ENTITY_COORDS(PLAYER.GET_PLAYER_PED(network.get_selected_player()), false) --获取目标玩家坐标
                    FIRE.ADD_EXPLOSION(coords.x, coords.y, coords.z - 2.0, 13, 1, true, false, 0, false)                end

                if  checknodmgexp:is_enabled() then --循环无伤爆炸
                    local coords = ENTITY.GET_ENTITY_COORDS(PLAYER.GET_PLAYER_PED(network.get_selected_player()), false) --获取目标玩家坐标
                    FIRE.ADD_EXPLOSION(coords.x, coords.y, coords.z, 1, 1, true, true, 1, true)                end

                if  check2:is_enabled() then--卡死玩家
                    local defpstarget = PLAYER.GET_PLAYER_PED(network.get_selected_player())
                    local targetcoords = ENTITY.GET_ENTITY_COORDS(defpstarget)
        
                    local hash = joaat("tug")
                    STREAMING.REQUEST_MODEL(hash)
                    while not STREAMING.HAS_MODEL_LOADED(hash) do script_util:yield() end
        
                    for i = 1, defpscount do
                        if defpstarget ~= PLAYER.PLAYER_PED_ID() then --避免目标离开战局后作用于自己
            
                        defpttable[defpscount2] = VEHICLE.CREATE_VEHICLE(hash, targetcoords.x, targetcoords.y, targetcoords.z, 0, true, true, true)
        
                        local netID = NETWORK.NETWORK_GET_NETWORK_ID_FROM_ENTITY(defpttable[defpscount2])
                        NETWORK.NETWORK_REQUEST_CONTROL_OF_ENTITY(defpttable[defpscount2])
                        NETWORK.NETWORK_REQUEST_CONTROL_OF_NETWORK_ID(netID)
                        NETWORK.SET_NETWORK_ID_EXISTS_ON_ALL_MACHINES(netID)
                        NETWORK.SET_NETWORK_ID_CAN_MIGRATE(netID, false)
                        NETWORK.SET_NETWORK_ID_ALWAYS_EXISTS_FOR_PLAYER(netID, pid, true)
                        ENTITY.SET_ENTITY_AS_MISSION_ENTITY(defpttable[defpscount2], true, false)
                        ENTITY.SET_ENTITY_VISIBLE(defpttable[defpscount2], false, 0)
                        else
                            gui.show_message("掉Zhen攻击已停止", "你在攻击自己!")
                            check2:set_enabled(nil)--目标是自己，自动关掉开关
                        end
                    end
                    end

                    if  check5:is_enabled() then --粒子效果轰炸
                        local defpstarget = PLAYER.GET_PLAYER_PED(network.get_selected_player())
                        local tar1 = ENTITY.GET_ENTITY_COORDS(defpstarget)
                        local ptfx = {dic = 'scr_rcbarry2', name = 'scr_clown_appears'}
        
                        if defpstarget ~= PLAYER.PLAYER_PED_ID() then --避免目标离开战局后作用于自己
                            STREAMING.REQUEST_NAMED_PTFX_ASSET(ptfx.dic)
                            while not STREAMING.HAS_NAMED_PTFX_ASSET_LOADED(ptfx.dic) do
                                script_util:yield()
                            end
                            GRAPHICS.USE_PARTICLE_FX_ASSET(ptfx.dic)
                            GRAPHICS.START_NETWORKED_PARTICLE_FX_NON_LOOPED_AT_COORD( ptfx.name, tar1.x, tar1.y, tar1.z + 1, 0, 0, 0, 10.0, true, true, true)
                        else
                            gui.show_message("ptfx轰炸已停止", "你在攻击自己!")
                            check5:set_enabled(nil)--目标是自己，自动关掉开关
                        end

                    end

                    if  check8:is_enabled() then --水柱
                        local coords = ENTITY.GET_ENTITY_COORDS(PLAYER.GET_PLAYER_PED(network.get_selected_player()), false) --获取目标玩家坐标
                        FIRE.ADD_EXPLOSION(coords.x, coords.y, coords.z - 2.0, 13, 1, true, false, 0, false)
                    end

                    if  checknodmgexp:is_enabled() then --循环无伤爆炸
                        local coords = ENTITY.GET_ENTITY_COORDS(PLAYER.GET_PLAYER_PED(network.get_selected_player()), false) --获取目标玩家坐标
                        FIRE.ADD_EXPLOSION(coords.x, coords.y, coords.z, 1, 1, true, true, 1, true)
                    end

                if  check5:is_enabled() then --粒子效果轰炸
                    local defpstarget = PLAYER.GET_PLAYER_PED(network.get_selected_player())
                    local tar1 = ENTITY.GET_ENTITY_COORDS(defpstarget)
                    local ptfx = {dic = 'scr_rcbarry2', name = 'scr_clown_appears'}
        
                    if defpstarget ~= PLAYER.PLAYER_PED_ID() then --避免目标离开战局后作用于自己
                        STREAMING.REQUEST_NAMED_PTFX_ASSET(ptfx.dic)
                        while not STREAMING.HAS_NAMED_PTFX_ASSET_LOADED(ptfx.dic) do
                            script_util:yield()
                        end
                        GRAPHICS.USE_PARTICLE_FX_ASSET(ptfx.dic)
                        GRAPHICS.START_NETWORKED_PARTICLE_FX_NON_LOOPED_AT_COORD( ptfx.name, tar1.x, tar1.y, tar1.z + 1, 0, 0, 0, 10.0, true, true, true)
                    else
                        gui.show_message("ptfx轰炸已停止", "你在攻击自己!")
                        check5:set_enabled(nil)--目标是自己，自动关掉开关
                    end                end

                if  audiospam:is_enabled() then--声音轰炸
                    local targetplyped = PLAYER.GET_PLAYER_PED(network.get_selected_player())
                    local pcrds = ENTITY.GET_ENTITY_COORDS(targetplyped, false)
                       -- AUDIO.PLAY_SOUND_FROM_COORD(-1, "Air_Defences_Activated", pcrds.x, pcrds.y, pcrds.z, "DLC_sum20_Business_Battle_AC_Sounds", true, 999999999, true)
                        AUDIO.PLAY_SOUND_FROM_COORD(-1, 'Event_Message_Purple', pcrds.x, pcrds.y, pcrds.z, 'GTAO_FM_Events_Soundset', true, 1000, false)
                        AUDIO.PLAY_SOUND_FROM_COORD(-1, '5s', pcrds.x, pcrds.y, pcrds.z, 'GTAO_FM_Events_Soundset', true, 1000, false)
                        AUDIO.PLAY_SOUND_FROM_COORD(-1,"10s",pcrds.x,pcrds.y,pcrds.z,"MP_MISSION_COUNTDOWN_SOUNDSET",true, 70, false)                end        end)
   script.register_looped("schlua-calcservice", function() 
            if gui.get_tab(""):is_selected() then
                local pos = ENTITY.GET_ENTITY_COORDS(PLAYER.PLAYER_PED_ID(), false)
                local targpos = ENTITY.GET_ENTITY_COORDS(PLAYER.GET_PLAYER_PED(network.get_selected_player()), false)
                distance = calcDistance(pos,targpos)
                formattedDistance = string.format("%.3f", distance)
                plydist:set_value(formattedDistance)
            end        end)


--一些功能所需的代码------------------------------------------------------------------------------------- 
    function spawn(name)        ----------创建载具所需的代码
        command.call("spawn", {get_hash(name)})
        -- pc = ENTITY.GET_OFFSET_FROM_ENTITY_IN_WORLD_COORDS(GET_PLAYER_PED_ID(), 0, 5.0, 0);
        -- v = vehicle.create_vehicle(name, {pc.x, pc.y, pc.z}, true)
        -- gui.show_message("刷车中")
        -- STREAMING.REQUEST_MODEL(get_hash(name))
        -- while not STREAMING.HAS_MODEL_LOADED(get_hash(name)) do myYield() end
        -- -- pc = ENTITY.GET_ENTITY_COORDS(GET_PLAYER_PED_ID());
        -- pc = ENTITY.GET_OFFSET_FROM_ENTITY_IN_WORLD_COORDS(GET_PLAYER_PED_ID(), 0, 5.0, 0);
        -- local v = VEHICLE.CREATE_VEHICLE(get_hash(name),  pc.x, pc.y, pc.z , GET_HEADING(), true, false, false)
        -- STREAMING.SET_MODEL_AS_NO_LONGER_NEEDED(get_hash(name))
        -- myYield()
        -- MISC.GET_HASH_KEY("oppressor2")
        -- gui.show_message(GET_HEADING() .. "123456")
        -- gui.show_message("刷车成功")
    end



    function get_hash(name)     ----------创建载具所需的代码内的代码
        -- return MISC.GET_HASH_KEY(name)
        return joaat(name)
    end

    function GET_HEADING()      ----------刷车代码  先已不用了
        return ENTITY.GET_ENTITY_HEADING(GET_PLAYER_PED_ID())
    end

    function TELEPORT(x, y, z)      ----------传送所需代码
        PED.SET_PED_COORDS_KEEP_VEHICLE(GET_PLAYER_PED_ID(), x, y, z)
        -- natives.invoke_void("PED.SET_PED_COORDS_KEEP_VEHICLE", PLAYER.PLAYER_PED_ID(), x, y, z)
    end

    function SET_HEADING(heading)       ----------传送所需代码
        ENTITY.SET_ENTITY_HEADING(GET_PLAYER_PED_ID(), heading)
    end

    function GET_PLAYER_PED_ID()  ------------获取玩家PED ID  传送使用
        return PLAYER.PLAYER_PED_ID()
    end

    function SET_FLOAT_LOCAL(script, script_local, value)  --------------快速切割用到的
        locals.set_float(script, script_local, value)
    end

    function tpfac() --传送到设施
        local Pos = HUD.GET_BLIP_COORDS(HUD.GET_FIRST_BLIP_INFO_ID(590))
        if HUD.DOES_BLIP_EXIST(HUD.GET_FIRST_BLIP_INFO_ID(590)) then
            PED.SET_PED_COORDS_KEEP_VEHICLE(PLAYER.PLAYER_PED_ID(), Pos.x, Pos.y, Pos.z+4)
        end
    end

    ----设置分红
        function SET_INT_GLOBAL(int,value)
            globals.set_int(int, value)
        end

        -----------以下3个暂时未用
        function setEntrance(index)
            if not NETWORK.NETWORK_IS_SESSION_STARTED() then return end
            SET_INT_GLOBAL(1971696 + 1497 + 1017, index - 1)
        end

        function setExit(index)
            if not NETWORK.NETWORK_IS_SESSION_STARTED() then return end
            SET_INT_GLOBAL(1971696 + 1497 + 1018, index - 1)
        end

        function setBuyer(index)
            if not NETWORK.NETWORK_IS_SESSION_STARTED() then return end
            SET_INT_GLOBAL(1971696 + 1497 + 1019, (index * 3) - 3)
        end
    ----设置分红--end

    function chk_script_host(scriptname)  ---------强制脚本主机 以完成一些代码
        if NETWORK.NETWORK_GET_HOST_OF_SCRIPT(scriptname, 0, 0) == PLAYER.PLAYER_ID() then return end
        network.force_script_host(scriptname)
        repeat script_util:yield() until NETWORK.NETWORK_GET_HOST_OF_SCRIPT(scriptname, 0, 0) == PLAYER.PLAYER_ID()
        gui.show_message("已成为".. scriptname .. "脚本主机")
    end

    --------- 跳指纹/密码锁等一些跳过之类的
        function GET_INT_LOCAL(script, script_local)   
            locals.get_int(script, script_local)
        end

        function SET_INT_LOCAL(script, script_local, value)  
            locals.set_int(script, script_local, value)
        end

    --------- 传送到夜总会的代码
        -- Business / Other Online Work Stuff [[update]]
        local function GetOnlineWorkOffset()
            -- GLOBAL_PLAYER_STAT
                local playerid = globals.get_int(1574918) --疑似与MPPLY_LAST_MP_CHAR相等
            return (1853988 + 1 + (playerid * 867) + 267)
        end
        local function GetNightClubHubOffset()
            return (GetOnlineWorkOffset() + 310)
        end
        local function GetNightClubOffset()
            return (GetOnlineWorkOffset() + 354) -- CLUB_OWNER_X
        end

        local function GetWarehouseOffset()
            return (GetOnlineWorkOffset() + 116) + 1
        end

        local function GetMCBusinessOffset()
            return (GetOnlineWorkOffset() + 193) + 1
        end
        local function GetNightClubPropertyID()
            return globals.get_int(GetNightClubOffset())
        end

        local function IsPlayerInNightclub()
            return (GetPlayerPropertyID() > 101) and (GetPlayerPropertyID() < 112)
        end

        function tpnc() --传送到夜总会
            local property = GetNightClubPropertyID()
            if property ~= 0  then
                local coords = NightclubPropertyInfo[property].coords
                PED.SET_PED_COORDS_KEEP_VEHICLE(PLAYER.PLAYER_PED_ID(), coords.x, coords.y, coords.z)
            end
        end

    --------- 任务助手里面的一些传送选项
        -- Mission Helper Page
        local mission_page = {
            checkbox = {},
        }
        --------------------
        -- Functions
        --------------------
        v3 = {
            ['new'] = function(x, y, z)
                return { ['x'] = x, ['y'] = y, ['z'] = z }
            end,
            --return a - b
            ['subtract'] = function(a, b)
                return v3.new(a.x - b.x, a.y - b.y, a.z - b.z)
            end,
            --return a + b
            ['add'] = function(a, b)
                return v3.new(a.x + b.x, a.y + b.y, a.z + b.z)
            end,
            ['mag'] = function(a)
                return math.sqrt(a.x ^ 2 + a.y ^ 2 + a.z ^ 2)
            end,
            ['norm'] = function(a)
                local mag = v3.mag(a)
                return v3.div(a, mag)
            end,
            --return a * b
            ['mult'] = function(a, b)
                return v3.new(a.x * b, a.y * b, a.z * b)
            end,
            --return a / b
            ['div'] = function(a, b)
                return v3.new(a.x / b, a.y / b, a.z / b)
            end,
            --return the distance between two vectors
            ['distance'] = function(a, b)
                return v3.mag(v3.subtract(a, b))
            end
        }

        function SET_ENTITY_COORDS(entity, coords)
            ENTITY.SET_ENTITY_COORDS_NO_OFFSET(entity, coords.x, coords.y, coords.z, true, false, false)
        end

        function GET_PED_IN_VEHICLE_SEAT(vehicle, seat)
            if not VEHICLE.IS_VEHICLE_SEAT_FREE(vehicle, seat, false) then
                return VEHICLE.GET_PED_IN_VEHICLE_SEAT(vehicle, seat)
            end
            return 0
        end

        function GET_VEHICLE_PED_IS_IN(ped)
            if PED.IS_PED_IN_ANY_VEHICLE(ped, false) then
                return PED.GET_VEHICLE_PED_IS_IN(ped, false)
            end
            return 0
        end

        function DRAW_LINE(start_pos, end_pos, colour)
            colour = colour or { r = 255, g = 0, b = 255, a = 255 }
            GRAPHICS.DRAW_LINE(start_pos.x, start_pos.y, start_pos.z,
                end_pos.x, end_pos.y, end_pos.z,
                colour.r, colour.g, colour.b, colour.a)
        end

        local function toast(text)
            gui.show_message("RScript", text)
        end

        -----------------------------
        -- 本地播放器功能
        -----------------------------

        function teleport(x, y, z, heading)
            local ent = GET_VEHICLE_PED_IS_IN(PLAYER.PLAYER_PED_ID())
            if ent == 0 then
                ent = PLAYER.PLAYER_PED_ID()
            end
            SET_ENTITY_COORDS(ent, v3.new(x, y, z))

            if heading ~= nil then
                ENTITY.SET_ENTITY_HEADING(ent, heading)
            end
        end

        function teleport2(coords, heading)
            local ent = GET_VEHICLE_PED_IS_IN(PLAYER.PLAYER_PED_ID())
            if ent == 0 then
                ent = PLAYER.PLAYER_PED_ID()
            end
            SET_ENTITY_COORDS(ent, coords)

            if heading ~= nil then
                ENTITY.SET_ENTITY_HEADING(ent, heading)
            end
        end

        function tp_to_me(entity, offsetX, offsetY, offsetZ)
            offsetX = offsetX or 0.0
            offsetY = offsetY or 0.0
            offsetZ = offsetZ or 0.0
            local coords = ENTITY.GET_OFFSET_FROM_ENTITY_IN_WORLD_COORDS(PLAYER.PLAYER_PED_ID(), offsetX, offsetY, offsetZ)
            SET_ENTITY_COORDS(entity, coords)
        end

        function tp_to_entity(entity, offsetX, offsetY, offsetZ)
            offsetX = offsetX or 0.0
            offsetY = offsetY or 0.0
            offsetZ = offsetZ or 0.0
            local coords = ENTITY.GET_OFFSET_FROM_ENTITY_IN_WORLD_COORDS(entity, offsetX, offsetY, offsetZ)
            teleport2(coords)
        end

        function tp_into_vehicle(vehicle)
            if ENTITY.IS_ENTITY_A_VEHICLE(vehicle) then
                --unlock doors
                VEHICLE.SET_VEHICLE_DOORS_LOCKED(vehicle, 1)
                VEHICLE.SET_VEHICLE_DOORS_LOCKED_FOR_ALL_PLAYERS(vehicle, false)
                VEHICLE.SET_VEHICLE_DOORS_LOCKED_FOR_NON_SCRIPT_PLAYERS(vehicle, false)
                VEHICLE.SET_VEHICLE_DOORS_LOCKED_FOR_ALL_TEAMS(vehicle, false)
                VEHICLE.SET_DONT_ALLOW_PLAYER_TO_ENTER_VEHICLE_IF_LOCKED_FOR_PLAYER(vehicle, false)
                --clear wanted
                VEHICLE.SET_VEHICLE_IS_WANTED(vehicle, false)
                VEHICLE.SET_VEHICLE_INFLUENCES_WANTED_LEVEL(vehicle, false)
                VEHICLE.SET_VEHICLE_HAS_BEEN_OWNED_BY_PLAYER(vehicle, true)
                VEHICLE.SET_VEHICLE_IS_STOLEN(vehicle, false)
                VEHICLE.SET_POLICE_FOCUS_WILL_TRACK_VEHICLE(vehicle, false)
                --driver
                local driver = GET_PED_IN_VEHICLE_SEAT(vehicle, -1)
                if driver ~= 0 then
                    delete_entity(driver)
                end
                --tp into
                VEHICLE.SET_VEHICLE_ENGINE_ON(vehicle, true, true, false)
                PED.SET_PED_INTO_VEHICLE(PLAYER.PLAYER_PED_ID(), vehicle, -1)
            end
        end

        function tp_vehicle_to_me(vehicle)
            set_entity_head_to_entity(vehicle, PLAYER.PLAYER_PED_ID())
            tp_to_me(vehicle)
            tp_into_vehicle(vehicle)
        end

        -------------------------
        -- 实体功能
        -------------------------

        function request_control(entity, timeout)
            timeout = timeout or 5
            if not NETWORK.NETWORK_HAS_CONTROL_OF_ENTITY(entity) and NETWORK.NETWORK_IS_SESSION_STARTED() then
                local netid = NETWORK.NETWORK_GET_NETWORK_ID_FROM_ENTITY(entity)
                NETWORK.SET_NETWORK_ID_CAN_MIGRATE(netid, true)
                local start_time = os.time()
                while not NETWORK.NETWORK_HAS_CONTROL_OF_ENTITY(entity) do
                    if os.time() - start_time >= timeout then
                        break
                    end
                    NETWORK.NETWORK_REQUEST_CONTROL_OF_ENTITY(entity)
                    script_util:yield()
                end
            end
            return NETWORK.NETWORK_HAS_CONTROL_OF_ENTITY(entity)
        end

        function get_entity_owner(entity)
            if NETWORK.NETWORK_IS_SESSION_STARTED() then
                local ptr = memory.handle_to_ptr(entity)
                local netObject = ptr:add(0xD0):deref()
                if netObject:is_null() then
                    return -1
                end
                local owner_id = netObject:add(0x49):get_byte()
                return owner_id
            end
            return PLAYER.PLAYER_ID()
        end

        function set_entity_godmode(ent, toggle)
            ENTITY.SET_ENTITY_INVINCIBLE(ent, toggle)
            ENTITY.SET_ENTITY_PROOFS(ent, toggle, toggle, toggle, toggle, toggle, toggle, toggle, toggle)
            ENTITY.SET_ENTITY_CAN_BE_DAMAGED(ent, not toggle)
        end

        function delete_entity(ent)
            if ENTITY.DOES_ENTITY_EXIST(ent) then
                ENTITY.DETACH_ENTITY(ent, true, true)
                ENTITY.SET_ENTITY_VISIBLE(ent, false, false)
                NETWORK.NETWORK_SET_ENTITY_ONLY_EXISTS_FOR_PARTICIPANTS(ent, true)
                ENTITY.SET_ENTITY_COORDS_NO_OFFSET(ent, 0.0, 0.0, -1000.0, false, false, false)
                ENTITY.SET_ENTITY_COLLISION(ent, false, false)
                ENTITY.SET_ENTITY_AS_MISSION_ENTITY(ent, true, true)
                ENTITY.SET_ENTITY_AS_NO_LONGER_NEEDED(ent)
                ENTITY.DELETE_ENTITY(memory.handle_to_ptr(ent))
            end
        end

        function get_entities_by_hash(Type, isMission, ...)
            Type = string.lower(Type)
            local all_entity = {}

            if Type == "ped" then
                all_entity = entities.get_all_peds_as_handles()
            elseif Type == "vehicle" then
                all_entity = entities.get_all_vehicles_as_handles()
            elseif Type == "object" then
                all_entity = entities.get_all_objects_as_handles()
            end

            local entity_list = {}
            local hash_list = { ... }

            for k, ent in pairs(all_entity) do
                local EntityHash = ENTITY.GET_ENTITY_MODEL(ent)
                for _, Hash in pairs(hash_list) do
                    if EntityHash == Hash then
                        if isMission then
                            if ENTITY.IS_ENTITY_A_MISSION_ENTITY(ent) then
                                table.insert(entity_list, ent)
                            end
                        else
                            table.insert(entity_list, ent)
                        end
                    end
                end
            end

            return entity_list
        end

        function is_hostile_ped(ped)
            if PED.IS_PED_IN_COMBAT(ped, PLAYER.PLAYER_PED_ID()) then
                return true
            end

            local rel = PED.GET_RELATIONSHIP_BETWEEN_PEDS(ped, PLAYER.PLAYER_PED_ID())
            if rel == 4 or rel == 5 then -- Wanted or Hate
                return true
            end
        end

        function is_hostile_entity(entity)
            if ENTITY.IS_ENTITY_A_PED(entity) then
                if is_hostile_ped(entity) then
                    return true
                end
            end

            if ENTITY.IS_ENTITY_A_VEHICLE(entity) then
                local driver = GET_PED_IN_VEHICLE_SEAT(entity, -1)
                if driver ~= 0 and is_hostile_ped(entity) then
                    return true
                end
            end

            local blip = HUD.GET_BLIP_FROM_ENTITY(entity)
            if HUD.DOES_BLIP_EXIST(blip) then
                local blip_colour = HUD.GET_BLIP_COLOUR(blip)
                if blip_colour == 1 or blip_colour == 59 then
                    return true
                end
            end
        end


        function set_entity_head_to_entity(set_ent, to_ent, angle)
            angle = angle or 0.0
            local Head = ENTITY.GET_ENTITY_HEADING(to_ent)
            ENTITY.SET_ENTITY_HEADING(set_ent, Head + angle)
        end
